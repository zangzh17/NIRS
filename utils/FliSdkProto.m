function [methodinfo,structs,enuminfo,ThunkLibName]=FliSdkProto
%FLISDKPROTO Create structures to define interfaces found in 'FliSdk_C_V2'.

%This function was generated by loadlibrary.m parser version  on Fri May 26 15:23:25 2023
%perl options:'FliSdk_C_V2.i -outfile=FliSdkProto.m -thunkfile=FliSdk_thunk_pcwin64.c -header=FliSdk_C_V2.h C:\QtWorkspace\FliSdk\headers\FliCblueOne_C.h C:\QtWorkspace\FliSdk\headers\FliCblueSfnc_C.h C:\QtWorkspace\FliSdk\headers\FliCred_C.h C:\QtWorkspace\FliSdk\headers\FliCredOne_C.h C:\QtWorkspace\FliSdk\headers\FliCredThree_C.h C:\QtWorkspace\FliSdk\headers\FliCredTwo_C.h C:\QtWorkspace\FliSdk\headers\FliCredTwoLite_C.h C:\QtWorkspace\FliSdk\headers\FliGenicamCamera_C.h C:\QtWorkspace\FliSdk\headers\FliOcam2K_C.h C:\QtWorkspace\FliSdk\headers\FliOcam2S_C.h C:\QtWorkspace\FliSdk\headers\FliSdk_C_utils.h C:\QtWorkspace\FliSdk\headers\FliSerialCamera_C.h C:\QtWorkspace\FliSdk\headers\FliSfncCamera_C.h C:\QtWorkspace\FliSdk\headers\ImageProcessing_C.h'
ival={cell(1,0)}; % change 0 to the actual number of functions to preallocate the data.
structs=[];enuminfo=[];fcnNum=1;
fcns=struct('name',ival,'calltype',ival,'LHS',ival,'RHS',ival,'alias',ival,'thunkname', ival);
MfilePath=fileparts(mfilename('fullpath'));
ThunkLibName=fullfile(MfilePath,'FliSdk_thunk_pcwin64');
%  _Bool FliSerialCamera_getFps_V2 ( FliContext context , double * fps ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSerialCamera_getFps_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSerialCamera_setFps_V2 ( FliContext context , double fps ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSerialCamera_setFps_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSerialCamera_getFpsMax_V2 ( FliContext context , double * fps ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSerialCamera_getFpsMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSerialCamera_sendCommand_V2 ( FliContext context , const char * command , char * response , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringcstringuint64Thunk';fcns.name{fcnNum}='FliSerialCamera_sendCommand_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSerialCamera_enableBias_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliSerialCamera_enableBias_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliSerialCamera_enableFlat_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliSerialCamera_enableFlat_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCred_getAduOffset_V2 ( FliContext context , int * aduOffset ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCred_getAduOffset_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int32Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCred_getBiasState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCred_getBiasState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCred_getFlatState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCred_getFlatState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCred_getEventsState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCred_getEventsState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCred_getCameraType_V2 ( FliContext context , char * info , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCred_getCameraType_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCred_getHwuid_V2 ( FliContext context , char * hwuid , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCred_getHwuid_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCred_getImageTagsState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCred_getImageTagsState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCred_getLedState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCred_getLedState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCred_getSshPassword_V2 ( FliContext context , char * password , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCred_getSshPassword_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCred_getExtSynchroState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCred_getExtSynchroState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCred_getIpConfig_V2 ( FliContext context , char * macAddress , size_t macAddressSize , char * ipAddress , size_t ipAddressSize , char * mask , size_t maskSize , _Bool * established ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64cstringuint64cstringuint64voidPtrThunk';fcns.name{fcnNum}='FliCred_getIpConfig_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64', 'cstring', 'uint64', 'cstring', 'uint64', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCred_getStatusDetailed_V2 ( FliContext context , char * status , size_t statusSize , char * diag , size_t diagSize ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64cstringuint64Thunk';fcns.name{fcnNum}='FliCred_getStatusDetailed_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCred_getStatus_V2 ( FliContext context , char * status , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCred_getStatus_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCred_getVersions_V2 ( FliContext context , char * firmware , size_t firmwareSize , char * fpga , size_t fpgaSize , char * hardware , size_t hardwareSize ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64cstringuint64cstringuint64Thunk';fcns.name{fcnNum}='FliCred_getVersions_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64', 'cstring', 'uint64', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCred_getVersionFirmware_V2 ( FliContext context , char * version , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCred_getVersionFirmware_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCred_getVersionFirmwareBuild_V2 ( FliContext context , char * build , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCred_getVersionFirmwareBuild_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCred_getVersionFirmwareDetailed_V2 ( FliContext context , char * detailed , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCred_getVersionFirmwareDetailed_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCred_getVersionFpga_V2 ( FliContext context , char * version , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCred_getVersionFpga_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCred_getVersionHardware_V2 ( FliContext context , char * version , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCred_getVersionHardware_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCred_enableExtSynchro_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCred_enableExtSynchro_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCred_enableImageTags_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCred_enableImageTags_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCred_enableEvents_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCred_enableEvents_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCred_enableLed_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCred_enableLed_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCred_enableTelnet_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCred_enableTelnet_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCred_setIpAddress_V2 ( FliContext context , const char * ip ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCred_setIpAddress_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCred_setIpAlternateDns_V2 ( FliContext context , const char * dns ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCred_setIpAlternateDns_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCred_setIpDns_V2 ( FliContext context , const char * dns ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCred_setIpDns_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCred_setIpGateway_V2 ( FliContext context , const char * gateway ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCred_setIpGateway_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCred_setIpAutomatic_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCred_setIpAutomatic_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCred_setIpManual_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCred_setIpManual_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCred_setIpRefresh_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCred_setIpRefresh_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCred_setIpNetmask_V2 ( FliContext context , const char * netmask ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCred_setIpNetmask_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCred_setPassword_V2 ( FliContext context , const char * password ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCred_setPassword_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCred_setAduOffset_V2 ( FliContext context , int aduOffset ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint32Thunk';fcns.name{fcnNum}='FliCred_setAduOffset_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int32'};fcnNum=fcnNum+1;
%  _Bool FliCred_saveCameraSettings_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCred_saveCameraSettings_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCred_continueStarting_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCred_continueStarting_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCred_getLogs_V2 ( FliContext context , char * url , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCred_getLogs_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCred_shutDown_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCred_shutDown_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCred_getLogsFrom_V2 ( FliContext context , uint16_t nbDays , char * url , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtruint16cstringuint64Thunk';fcns.name{fcnNum}='FliCred_getLogsFrom_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'uint16', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCred_buildFlat_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCred_buildFlat_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCred_buildBias_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCred_buildBias_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCred_restoreFactory_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCred_restoreFactory_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCred_upgradeFirmware_V2 ( FliContext context , const char * url ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCred_upgradeFirmware_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCred_sendBiasFromUrl_V2 ( FliContext context , const char * url ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCred_sendBiasFromUrl_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCred_sendFlatFromUrl_V2 ( FliContext context , const char * url ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCred_sendFlatFromUrl_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCred_sendBiasFile_V2 ( FliContext context , const char * filePath ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCred_sendBiasFile_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCred_sendFlatFile_V2 ( FliContext context , const char * filePath ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCred_sendFlatFile_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCred_setSlowMode_V2 ( FliContext context , _Bool slowMode ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCred_setSlowMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCred_isSlowMode_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCred_isSlowMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCred_getUserConvolutionMatrix_V2 ( FliContext context , double ** matrixBadPixels , double * divisor , char ** description ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCred_getUserConvolutionMatrix_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtrPtr', 'doublePtr', 'stringPtrPtr'};fcnNum=fcnNum+1;
%  _Bool FliCred_setUserConvolutionMatrix_V2 ( FliContext context , const double * matrixBadPixels , double divisor , const char * description ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrdoublecstringThunk';fcns.name{fcnNum}='FliCred_setUserConvolutionMatrix_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr', 'double', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCred_setExcludeBorderOnOff ( FliContext context , _Bool exclude ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCred_setExcludeBorderOnOff'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCred_getExcludeBorder ( FliContext context , _Bool * exclude ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCred_getExcludeBorder'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCred_setBadPixelModeOnOff ( FliContext context , _Bool checked ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCred_setBadPixelModeOnOff'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCred_getBadPixelModeOnOff ( FliContext context , _Bool * checked ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCred_getBadPixelModeOnOff'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCred_setKindOfBadPixelCorrection ( FliContext context , int correction ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint32Thunk';fcns.name{fcnNum}='FliCred_setKindOfBadPixelCorrection'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int32'};fcnNum=fcnNum+1;
%  _Bool FliCred_getKindOfBadPixelCorrection ( FliContext context , int * correction ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCred_getKindOfBadPixelCorrection'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int32Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCred_setFilteringModeOnOff ( FliContext context , _Bool checked ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCred_setFilteringModeOnOff'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCred_getFilteringModeOnOff ( FliContext context , _Bool * checked ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCred_getFilteringModeOnOff'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCred_setThresholdingOnOff ( FliContext context , _Bool checked ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCred_setThresholdingOnOff'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCred_getThreholdingOnOff ( FliContext context , _Bool * checked ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCred_getThreholdingOnOff'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCred_setThresholdingLevelsValues ( FliContext context , int lowLevel , int highLevel , int lowValue , int middleValue , int highValue ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint32int32int32int32int32Thunk';fcns.name{fcnNum}='FliCred_setThresholdingLevelsValues'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'int32', 'int32', 'int32', 'int32'};fcnNum=fcnNum+1;
%  _Bool FliCredOne_getAllTemp_V2 ( FliContext context , double * mb , double * fe , double * pw , double * cryod , double * cryopt , double * water , double * peltier , double * ptmcu ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredOne_getAllTemp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredOne_getNbReadWoReset_V2 ( FliContext context , int * nbRead ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredOne_getNbReadWoReset_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int32Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCredOne_getRawImagesState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredOne_getRawImagesState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredOne_getTempFrontEnd_V2 ( FliContext context , double * temp ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredOne_getTempFrontEnd_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredOne_getTempMotherBoard_V2 ( FliContext context , double * temp ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredOne_getTempMotherBoard_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredOne_getTempPowerBoard_V2 ( FliContext context , double * temp ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredOne_getTempPowerBoard_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredOne_getTempDiode_V2 ( FliContext context , double * temp ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredOne_getTempDiode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredOne_getTempPtController_V2 ( FliContext context , double * temp ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredOne_getTempPtController_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredOne_getTempSetpoint_V2 ( FliContext context , double * temp ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredOne_getTempSetpoint_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredOne_getTempPtMcu_V2 ( FliContext context , double * temp ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredOne_getTempPtMcu_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredOne_getTempWater_V2 ( FliContext context , double * temp ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredOne_getTempWater_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredOne_getVersionFpgaDetailed_V2 ( FliContext context , char * detailed , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredOne_getVersionFpgaDetailed_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredOne_getAll_V2 ( FliContext context , char * all , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredOne_getAll_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredOne_getCoolingState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredOne_getCoolingState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredOne_getGain_V2 ( FliContext context , double * gain ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredOne_getGain_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredOne_getNbRegenGetter_V2 ( FliContext context , char * regenInfo , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredOne_getNbRegenGetter_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredOne_getRegenRemainingTime_V2 ( FliContext context , int * time ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredOne_getRegenRemainingTime_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int32Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCredOne_getReadOutMode_V2 ( FliContext context , Cred1Mode * mode ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredOne_getReadOutMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'Cred1ModePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredOne_getNloop_V2 ( FliContext context , int * nLoop ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredOne_getNloop_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int32Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCredOne_getNbSamplePixel_V2 ( FliContext context , int * nSample ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredOne_getNbSamplePixel_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int32Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCredOne_getPhotoCurrent_V2 ( FliContext context , double * photocurrent ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredOne_getPhotoCurrent_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredOne_getPowers_V2 ( FliContext context , double * getter , double * peltier , double * pulseTube ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredOne_getPowers_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr', 'doublePtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredOne_getPowerGetter_V2 ( FliContext context , double * getter ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredOne_getPowerGetter_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredOne_getPowerPulseTube_V2 ( FliContext context , double * pulseTube ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredOne_getPowerPulseTube_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredOne_getPressure_V2 ( FliContext context , char * pressure , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredOne_getPressure_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredOne_getPulseTubeReady_V2 ( FliContext context , char * info , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredOne_getPulseTubeReady_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredOne_getRemoteMaintenanceState_V2 ( FliContext context , char * status , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredOne_getRemoteMaintenanceState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredOne_getResetWidth_V2 ( FliContext context , int * width ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredOne_getResetWidth_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int32Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCredOne_getStandbyState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredOne_getStandbyState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredOne_getTestPatternState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredOne_getTestPatternState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredOne_getTelnetState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredOne_getTelnetState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredOne_getFowlerState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredOne_getFowlerState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredOne_setNbReadWoReset_V2 ( FliContext context , int nbRead ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint32Thunk';fcns.name{fcnNum}='FliCredOne_setNbReadWoReset_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int32'};fcnNum=fcnNum+1;
%  _Bool FliCredOne_setGain_V2 ( FliContext context , double gain ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliCredOne_setGain_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliCredOne_setMode_V2 ( FliContext context , Mode mode ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrModeThunk';fcns.name{fcnNum}='FliCredOne_setMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'Mode'};fcnNum=fcnNum+1;
%  _Bool FliCredOne_setNloop_V2 ( FliContext context , int nLoop ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint32Thunk';fcns.name{fcnNum}='FliCredOne_setNloop_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int32'};fcnNum=fcnNum+1;
%  _Bool FliCredOne_setNsamplePixel_V2 ( FliContext context , int nSample ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint32Thunk';fcns.name{fcnNum}='FliCredOne_setNsamplePixel_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int32'};fcnNum=fcnNum+1;
%  _Bool FliCredOne_setResetWidth_V2 ( FliContext context , int resetWidth ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint32Thunk';fcns.name{fcnNum}='FliCredOne_setResetWidth_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int32'};fcnNum=fcnNum+1;
%  _Bool FliCredOne_enableRawImages_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCredOne_enableRawImages_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCredOne_enableRemoteMaintenance_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCredOne_enableRemoteMaintenance_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCredOne_enableCooling_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCredOne_enableCooling_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCredOne_enableStandby_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCredOne_enableStandby_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCredOne_enableTestPattern_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCredOne_enableTestPattern_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCredOne_enableFowler_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCredOne_enableFowler_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCredOne_startVacuumRegen_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredOne_startVacuumRegen_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredOne_sendTestPatternFromUrl_V2 ( FliContext context , const char * url ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCredOne_sendTestPatternFromUrl_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCredOne_reboot_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredOne_reboot_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getAllTemp_V2 ( FliContext context , double * mb , double * fe , double * pw , double * sensor , double * peltier , double * heatsink ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_getAllTemp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getTint_V2 ( FliContext context , double * tint ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_getTint_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getTintMax_V2 ( FliContext context , double * tintMax ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_getTintMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getAntiBloomingState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_getAntiBloomingState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getBadPixelState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_getBadPixelState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getTempSnakeSetPoint_V2 ( FliContext context , double * temp ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_getTempSnakeSetPoint_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getNbReadWoReset_V2 ( FliContext context , int * nbread ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_getNbReadWoReset_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int32Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getRawImagesState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_getRawImagesState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getTempFrontEnd_V2 ( FliContext context , double * temp ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_getTempFrontEnd_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getTempMotherBoard_V2 ( FliContext context , double * temp ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_getTempMotherBoard_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getTempPowerBoard_V2 ( FliContext context , double * temp ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_getTempPowerBoard_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getTempHeatSink_V2 ( FliContext context , double * temp ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_getTempHeatSink_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getTempPeltier_V2 ( FliContext context , double * temp ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_getTempPeltier_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getTempSnake_V2 ( FliContext context , double * temp ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_getTempSnake_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getTintRange_V2 ( FliContext context , double * tintMin , double * tintMax ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_getTintRange_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getDarkOptimLevel_V2 ( FliContext context , int * level ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_getDarkOptimLevel_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int32Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getFanMode_V2 ( FliContext context , char * mode , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredTwo_getFanMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getExtSynchroExposure_V2 ( FliContext context , char * exposure , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredTwo_getExtSynchroExposure_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getExtSynchroPolarity_V2 ( FliContext context , char * polarity , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredTwo_getExtSynchroPolarity_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getFanSpeed_V2 ( FliContext context , int * speed ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_getFanSpeed_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int32Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getHdrState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_getHdrState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getHdrCalibrationMode_V2 ( FliContext context , char * mode , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredTwo_getHdrCalibrationMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getHdrExtendedState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_getHdrExtendedState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getLicenses_V2 ( FliContext context , char * licenses , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredTwo_getLicenses_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getMaxFpsUsb_V2 ( FliContext context , double * maxFpsUsb ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_getMaxFpsUsb_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getMaxSyncDelay_V2 ( FliContext context , double * maxSyncDelay ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_getMaxSyncDelay_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getMinSyncDelay_V2 ( FliContext context , double * minSyncDelay ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_getMinSyncDelay_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getMaxTintItr_V2 ( FliContext context , double * maxTintItr ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_getMaxTintItr_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getVoltageVref_V2 ( FliContext context , double * vref ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_getVoltageVref_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getMinFps_V2 ( FliContext context , double * minFps ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_getMinFps_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getNbFramesPerSwTrig_V2 ( FliContext context , int * nbFrames ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_getNbFramesPerSwTrig_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int32Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getTlsydel_V2 ( FliContext context , int * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_getTlsydel_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int32Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getPreset_V2 ( FliContext context , int * preset ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_getPreset_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int32Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getRemoteMaintenanceState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_getRemoteMaintenanceState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getSwSynchroState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_getSwSynchroState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getTcdsAdjustState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_getTcdsAdjustState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getTelnetState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_getTelnetState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getTintGranularityState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_getTintGranularityState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getVrefAdjustState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_getVrefAdjustState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getStepSyncDelay_V2 ( FliContext context , double * delay ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_getStepSyncDelay_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getSyncDelay_V2 ( FliContext context , double * delay ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_getSyncDelay_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getSynchronization_V2 ( FliContext context , char * synchro , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredTwo_getSynchronization_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getIpAlternateDns_V2 ( FliContext context , char * dns , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredTwo_getIpAlternateDns_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getIpDns_V2 ( FliContext context , char * dns , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredTwo_getIpDns_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getIpGateway_V2 ( FliContext context , char * gateway , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredTwo_getIpGateway_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getIpMode_V2 ( FliContext context , char * mode , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredTwo_getIpMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getIpNetmask_V2 ( FliContext context , char * netmask , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredTwo_getIpNetmask_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getIpAddress_V2 ( FliContext context , char * ip , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredTwo_getIpAddress_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getSnakeParam_V2 ( FliContext context , const char * parameter , uint16_t * value ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_getSnakeParam_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint16Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getPowers_V2 ( FliContext context , double * extPeltierCurrent , double * extPeltierVoltage , double * extPeltierPower , double * intPeltierCurrent , double * intPeltierVoltage , double * intPeltierPower ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_getPowers_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getPowerExternalPeltier_V2 ( FliContext context , double * current , double * voltage , double * power ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_getPowerExternalPeltier_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr', 'doublePtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getPowerSensor_V2 ( FliContext context , double * current , double * voltage , double * power ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_getPowerSensor_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr', 'doublePtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getUploadFirmwareConnectionInfo_V2 ( FliContext context , char * ip , size_t size , uint16_t * port ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64voidPtrThunk';fcns.name{fcnNum}='FliCredTwo_getUploadFirmwareConnectionInfo_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64', 'uint16Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getConversionGain_V2 ( FliContext context , char * gain , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredTwo_getConversionGain_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getTintStep_V2 ( FliContext context , double * step ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_getTintStep_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getImagePattern_V2 ( FliContext context , char * pattern , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredTwo_getImagePattern_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getDate_V2 ( FliContext context , char * date , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredTwo_getDate_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getUptime_V2 ( FliContext context , char * uptime , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredTwo_getUptime_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getAccumulatedUptime_V2 ( FliContext context , char * uptime , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredTwo_getAccumulatedUptime_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getTotalUptime_V2 ( FliContext context , char * uptime , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredTwo_getTotalUptime_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_getUnsignedPixelsState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_getUnsignedPixelsState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_setTint_V2 ( FliContext context , double tint ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliCredTwo_setTint_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_setConversionGain_V2 ( FliContext context , const char * gain ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCredTwo_setConversionGain_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_setNbReadWoReset_V2 ( FliContext context , int nbRead ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint32Thunk';fcns.name{fcnNum}='FliCredTwo_setNbReadWoReset_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int32'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_setNbFramesPerSwTrig_V2 ( FliContext context , int nbFrames ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint32Thunk';fcns.name{fcnNum}='FliCredTwo_setNbFramesPerSwTrig_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int32'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_setDarkOptimLevel_V2 ( FliContext context , int level ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint32Thunk';fcns.name{fcnNum}='FliCredTwo_setDarkOptimLevel_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int32'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_setSensorTemp_V2 ( FliContext context , double temp ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliCredTwo_setSensorTemp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_setExtSynchroExposureInternal_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_setExtSynchroExposureInternal_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_setExtSynchroExposureExternal_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_setExtSynchroExposureExternal_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_setExtSynchroPolarityInverted_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_setExtSynchroPolarityInverted_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_setExtSynchroPolarityStandard_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_setExtSynchroPolarityStandard_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_setFanSpeed_V2 ( FliContext context , int speed ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint32Thunk';fcns.name{fcnNum}='FliCredTwo_setFanSpeed_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int32'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_setSyncDelay_V2 ( FliContext context , int delay ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint32Thunk';fcns.name{fcnNum}='FliCredTwo_setSyncDelay_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int32'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_setTlsyDel_V2 ( FliContext context , int val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint32Thunk';fcns.name{fcnNum}='FliCredTwo_setTlsyDel_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int32'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_setVoltageVref_V2 ( FliContext context , double vref ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliCredTwo_setVoltageVref_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_setFanModeAutomatic_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_setFanModeAutomatic_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_setFanModeManual_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_setFanModeManual_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_setHdrCalibrationC1_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_setHdrCalibrationC1_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_setHdrCalibrationC2_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_setHdrCalibrationC2_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_setHdrCalibrationOff_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_setHdrCalibrationOff_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_setSynchronizationCmos_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_setSynchronizationCmos_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_setSynchronizationFullCmos_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_setSynchronizationFullCmos_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_setSynchronizationLvds_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_setSynchronizationLvds_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_setPreset_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_setPreset_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_setPresetNumber_V2 ( FliContext context , uint8_t presetNumber ); 
fcns.thunkname{fcnNum}='_BoolvoidPtruint8Thunk';fcns.name{fcnNum}='FliCredTwo_setPresetNumber_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'uint8'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_setSnakeParam_V2 ( FliContext context , const char * parameter , uint16_t value ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint16Thunk';fcns.name{fcnNum}='FliCredTwo_setSnakeParam_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint16'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_setTempSnakeSetPoint_V2 ( FliContext context , double temp ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliCredTwo_setTempSnakeSetPoint_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_setImagePatternRamp_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_setImagePatternRamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_setImagePatternConstant_V2 ( FliContext context , uint16_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtruint16Thunk';fcns.name{fcnNum}='FliCredTwo_setImagePatternConstant_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'uint16'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_setImagePatternOff_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_setImagePatternOff_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_enableRawImages_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCredTwo_enableRawImages_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_enableBadPixel_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCredTwo_enableBadPixel_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_enableHdr_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCredTwo_enableHdr_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_enableAntiBlooming_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCredTwo_enableAntiBlooming_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_enableHdrExtended_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCredTwo_enableHdrExtended_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_enableRemoteMaintenance_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCredTwo_enableRemoteMaintenance_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_enableSwSynchro_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCredTwo_enableSwSynchro_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_enableTcdsAdjust_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCredTwo_enableTcdsAdjust_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_enableTintGranularity_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCredTwo_enableTintGranularity_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_enableVrefAdjust_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCredTwo_enableVrefAdjust_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_enableUnsignedPixels_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCredTwo_enableUnsignedPixels_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_reboot_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_reboot_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_buildFlatHdrC1_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_buildFlatHdrC1_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_buildFlatHdrC2_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_buildFlatHdrC2_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_sendBiasHdrC1FromUrl_V2 ( FliContext context , const char * url ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCredTwo_sendBiasHdrC1FromUrl_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_sendBiasHdrC2FromUrl_V2 ( FliContext context , const char * url ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCredTwo_sendBiasHdrC2FromUrl_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_sendFlatHdrC1FromUrl_V2 ( FliContext context , const char * url ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCredTwo_sendFlatHdrC1FromUrl_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_sendFlatHdrC2FromUrl_V2 ( FliContext context , const char * url ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCredTwo_sendFlatHdrC2FromUrl_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_sendBiasHdrC1File_V2 ( FliContext context , const char * filePath ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCredTwo_sendBiasHdrC1File_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_sendBiasHdrC2File_V2 ( FliContext context , const char * filePath ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCredTwo_sendBiasHdrC2File_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_sendFlatHdrC1File_V2 ( FliContext context , const char * filePath ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCredTwo_sendFlatHdrC1File_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_sendFlatHdrC2File_V2 ( FliContext context , const char * filePath ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCredTwo_sendFlatHdrC2File_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_xSendBiasFile_V2 ( FliContext context , const char * filePath , xModemBlockStatusReturn func ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_xSendBiasFile_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'FcnPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_xSendBiasHdrC1File_V2 ( FliContext context , const char * filePath , xModemBlockStatusReturn func ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_xSendBiasHdrC1File_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'FcnPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_xSendBiasHdrC2File_V2 ( FliContext context , const char * filePath , xModemBlockStatusReturn func ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_xSendBiasHdrC2File_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'FcnPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_xSendFlatFile_V2 ( FliContext context , const char * filePath , xModemBlockStatusReturn func ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_xSendFlatFile_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'FcnPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_xSendFlatHdrC1File_V2 ( FliContext context , const char * filePath , xModemBlockStatusReturn func ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_xSendFlatHdrC1File_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'FcnPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_xSendFlatHdrC2File_V2 ( FliContext context , const char * filePath , xModemBlockStatusReturn func ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_xSendFlatHdrC2File_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'FcnPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_sendLicenseFile_V2 ( FliContext context , const char * filePath , const char * fileName ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringcstringThunk';fcns.name{fcnNum}='FliCredTwo_sendLicenseFile_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_deleteLicense_V2 ( FliContext context , const char * licenseName ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCredTwo_deleteLicense_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_disableLicense_V2 ( FliContext context , const char * licenseName ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCredTwo_disableLicense_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_enableLicense_V2 ( FliContext context , const char * licenseName ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCredTwo_enableLicense_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_softwareTrig_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_softwareTrig_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_startHttpServer_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_startHttpServer_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_stopHttpServer_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_stopHttpServer_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_startEthernetGrabber_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_startEthernetGrabber_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwo_stopEthernetGrabber_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredTwo_stopEthernetGrabber_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getAllTemp_V2 ( FliContext context , double * cpu , double * backend , double * interfaceTemp , double * ambiant , double * sensor ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_getAllTemp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getTint_V2 ( FliContext context , double * tint ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_getTint_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getTintMax_V2 ( FliContext context , double * tintMax ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_getTintMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getAntiBloomingState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_getAntiBloomingState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getBadPixelState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_getBadPixelState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getTempAmbiant_V2 ( FliContext context , double * temp ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_getTempAmbiant_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getTempBackEnd_V2 ( FliContext context , double * temp ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_getTempBackEnd_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getTempCpu_V2 ( FliContext context , double * temp ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_getTempCpu_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getTempInterface_V2 ( FliContext context , double * temp ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_getTempInterface_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getTempSnake_V2 ( FliContext context , double * temp ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_getTempSnake_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getTintRange_V2 ( FliContext context , double * tintMin , double * tintMax ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_getTintRange_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getAdaptBiasState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_getAdaptBiasState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getAgcState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_getAgcState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getAgcPriority_V2 ( FliContext context , char * priority , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredTwoLite_getAgcPriority_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getAgcRoi_V2 ( FliContext context , uint16_t * col1 , uint16_t * row1 , uint16_t * col2 , uint16_t * row2 ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_getAgcRoi_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'uint16Ptr', 'uint16Ptr', 'uint16Ptr', 'uint16Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getDarkOptimLevel_V2 ( FliContext context , int * level ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_getDarkOptimLevel_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int32Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getExtSynchroExposure_V2 ( FliContext context , char * exposure , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredTwoLite_getExtSynchroExposure_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getExtSynchroPolarity_V2 ( FliContext context , char * polarity , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredTwoLite_getExtSynchroPolarity_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getHdrState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_getHdrState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getHdrCalibrationMode_V2 ( FliContext context , char * mode , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredTwoLite_getHdrCalibrationMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getHdrExtendedState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_getHdrExtendedState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getLicenses_V2 ( FliContext context , char * licenses , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredTwoLite_getLicenses_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getMaxFpsUsb_V2 ( FliContext context , double * maxFpsUsb ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_getMaxFpsUsb_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getMaxSyncDelay_V2 ( FliContext context , double * maxSyncDelay ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_getMaxSyncDelay_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getMinSyncDelay_V2 ( FliContext context , double * minSyncDelay ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_getMinSyncDelay_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getMaxTintItr_V2 ( FliContext context , double * maxTintItr ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_getMaxTintItr_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getMinFps_V2 ( FliContext context , double * minFps ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_getMinFps_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getNbFramesPerSwTrig_V2 ( FliContext context , int * nbFrames ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_getNbFramesPerSwTrig_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int32Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getPreset_V2 ( FliContext context , int * preset ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_getPreset_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int32Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getRemoteMaintenanceState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_getRemoteMaintenanceState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getStepSyncDelay_V2 ( FliContext context , double * delay ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_getStepSyncDelay_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getSwSynchroState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_getSwSynchroState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getSyncDelay_V2 ( FliContext context , double * delay ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_getSyncDelay_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getTcdsAdjustState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_getTcdsAdjustState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getTelnetState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_getTelnetState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getTintGranularityState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_getTintGranularityState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getTlsydel_V2 ( FliContext context , int * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_getTlsydel_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int32Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getVrefAdjustState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_getVrefAdjustState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getAgcParam_V2 ( FliContext context , AgcParam param , double * value ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrAgcParamvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_getAgcParam_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AgcParam', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getIpAlternateDns_V2 ( FliContext context , char * dns , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredTwoLite_getIpAlternateDns_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getIpDns_V2 ( FliContext context , char * dns , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredTwoLite_getIpDns_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getIpGateway_V2 ( FliContext context , char * gateway , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredTwoLite_getIpGateway_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getIpMode_V2 ( FliContext context , char * mode , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredTwoLite_getIpMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getIpNetmask_V2 ( FliContext context , char * netmask , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredTwoLite_getIpNetmask_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getIpAddress_V2 ( FliContext context , char * ip , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredTwoLite_getIpAddress_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getSnakeParam_V2 ( FliContext context , const char * parameter , uint16_t * value ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_getSnakeParam_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint16Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getUploadFirmwareConnectionInfo_V2 ( FliContext context , char * ip , size_t size , uint16_t * port ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64voidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_getUploadFirmwareConnectionInfo_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64', 'uint16Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getConversionGain_V2 ( FliContext context , char * gain , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredTwoLite_getConversionGain_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getTintStep_V2 ( FliContext context , double * step ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_getTintStep_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getImagePattern_V2 ( FliContext context , char * pattern , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredTwoLite_getImagePattern_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getDate_V2 ( FliContext context , char * date , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredTwoLite_getDate_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getUptime_V2 ( FliContext context , char * uptime , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredTwoLite_getUptime_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getAccumulatedUptime_V2 ( FliContext context , char * uptime , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredTwoLite_getAccumulatedUptime_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getTotalUptime_V2 ( FliContext context , char * uptime , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredTwoLite_getTotalUptime_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getRawImagesState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_getRawImagesState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getUnsignedPixelsState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_getUnsignedPixelsState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getCoolingMode_V2 ( FliContext context , CredTwoLite_CoolingMode * mode ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_getCoolingMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'CredTwoLite_CoolingModePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getCoolingFirstPoint_V2 ( FliContext context , int16_t * firstPoint ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_getCoolingFirstPoint_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int16Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getCoolingStepWidth_V2 ( FliContext context , uint8_t * stepWidth ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_getCoolingStepWidth_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'uint8Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getSensorSetpoint_V2 ( FliContext context , int16_t * temp ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_getSensorSetpoint_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int16Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getTecPower_V2 ( FliContext context , double * current , double * voltage , double * power ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_getTecPower_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr', 'doublePtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getCoolingState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_getCoolingState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_getCurrentStep_V2 ( FliContext context , char * step , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredTwoLite_getCurrentStep_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_setTint_V2 ( FliContext context , double tint ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliCredTwoLite_setTint_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_setConversionGain_V2 ( FliContext context , const char * gain ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCredTwoLite_setConversionGain_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_setAgcPriorityNone_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_setAgcPriorityNone_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_setAgcPriorityOverExposed_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_setAgcPriorityOverExposed_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_setAgcPriorityUnderExposed_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_setAgcPriorityUnderExposed_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_setDarkOptimLevel_V2 ( FliContext context , int level ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint32Thunk';fcns.name{fcnNum}='FliCredTwoLite_setDarkOptimLevel_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int32'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_setExtSynchroExposureInternal_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_setExtSynchroExposureInternal_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_setExtSynchroExposureExternal_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_setExtSynchroExposureExternal_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_setExtSynchroPolarityInverted_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_setExtSynchroPolarityInverted_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_setExtSynchroPolarityStandard_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_setExtSynchroPolarityStandard_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_setHdrCalibrationC1_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_setHdrCalibrationC1_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_setHdrCalibrationC2_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_setHdrCalibrationC2_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_setHdrCalibrationOff_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_setHdrCalibrationOff_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_setNbFramesPerSwTrig_V2 ( FliContext context , uint16_t nbFrames ); 
fcns.thunkname{fcnNum}='_BoolvoidPtruint16Thunk';fcns.name{fcnNum}='FliCredTwoLite_setNbFramesPerSwTrig_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'uint16'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_setSyncDelay_V2 ( FliContext context , int delay ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint32Thunk';fcns.name{fcnNum}='FliCredTwoLite_setSyncDelay_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int32'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_setTlsyDel_V2 ( FliContext context , int val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint32Thunk';fcns.name{fcnNum}='FliCredTwoLite_setTlsyDel_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int32'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_setVoltageVref_V2 ( FliContext context , double vref ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliCredTwoLite_setVoltageVref_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_setAgcRoi_V2 ( FliContext context , uint16_t col1 , uint16_t row1 , uint16_t col2 , uint16_t row2 ); 
fcns.thunkname{fcnNum}='_BoolvoidPtruint16uint16uint16uint16Thunk';fcns.name{fcnNum}='FliCredTwoLite_setAgcRoi_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'uint16', 'uint16', 'uint16', 'uint16'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_setAgcParam_V2 ( FliContext context , AgcParam param , double value ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrAgcParamdoubleThunk';fcns.name{fcnNum}='FliCredTwoLite_setAgcParam_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AgcParam', 'double'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_setPreset_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_setPreset_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_setPresetNumber_V2 ( FliContext context , uint8_t presetNumber ); 
fcns.thunkname{fcnNum}='_BoolvoidPtruint8Thunk';fcns.name{fcnNum}='FliCredTwoLite_setPresetNumber_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'uint8'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_setSnakeParam_V2 ( FliContext context , const char * parameter , uint16_t value ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint16Thunk';fcns.name{fcnNum}='FliCredTwoLite_setSnakeParam_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint16'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_setImagePatternRamp_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_setImagePatternRamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_setImagePatternConstant_V2 ( FliContext context , uint16_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtruint16Thunk';fcns.name{fcnNum}='FliCredTwoLite_setImagePatternConstant_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'uint16'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_setImagePatternOff_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_setImagePatternOff_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_setCoolingState_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCredTwoLite_setCoolingState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_setCoolingMode_V2 ( FliContext context , CredTwoLite_CoolingMode mode ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrCredTwoLite_CoolingModeThunk';fcns.name{fcnNum}='FliCredTwoLite_setCoolingMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'CredTwoLite_CoolingMode'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_setCoolingFirstPoint_V2 ( FliContext context , int16_t firstPoint ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint16Thunk';fcns.name{fcnNum}='FliCredTwoLite_setCoolingFirstPoint_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int16'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_setCoolingStepWidth_V2 ( FliContext context , uint8_t stepWidth ); 
fcns.thunkname{fcnNum}='_BoolvoidPtruint8Thunk';fcns.name{fcnNum}='FliCredTwoLite_setCoolingStepWidth_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'uint8'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_setSensorSetpoint_V2 ( FliContext context , int16_t temp ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint16Thunk';fcns.name{fcnNum}='FliCredTwoLite_setSensorSetpoint_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int16'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_enableAntiBlooming_V2 ( FliContext context , _Bool enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCredTwoLite_enableAntiBlooming_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_enableBadPixel_V2 ( FliContext context , _Bool enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCredTwoLite_enableBadPixel_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_enableAdaptbias_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCredTwoLite_enableAdaptbias_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_enableAgc_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCredTwoLite_enableAgc_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_enableHdrExtended_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCredTwoLite_enableHdrExtended_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_enableHdr_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCredTwoLite_enableHdr_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_enableRemoteMaintenance_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCredTwoLite_enableRemoteMaintenance_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_enableSwSynchro_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCredTwoLite_enableSwSynchro_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_enableTcdsAdjust_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCredTwoLite_enableTcdsAdjust_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_enableTintGranularity_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCredTwoLite_enableTintGranularity_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_enableVrefAdjust_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCredTwoLite_enableVrefAdjust_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_enableRawImages_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCredTwoLite_enableRawImages_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_enableUnsignedPixels_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCredTwoLite_enableUnsignedPixels_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_reboot_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_reboot_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_buildFlatHdrC1_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_buildFlatHdrC1_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_buildFlatHdrC2_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_buildFlatHdrC2_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_sendBiasHdrC1FromUrl_V2 ( FliContext context , const char * url ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCredTwoLite_sendBiasHdrC1FromUrl_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_sendBiasHdrC2FromUrl_V2 ( FliContext context , const char * url ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCredTwoLite_sendBiasHdrC2FromUrl_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_sendFlatHdrC1FromUrl_V2 ( FliContext context , const char * url ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCredTwoLite_sendFlatHdrC1FromUrl_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_sendFlatHdrC2FromUrl_V2 ( FliContext context , const char * url ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCredTwoLite_sendFlatHdrC2FromUrl_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_sendBiasHdrC1File_V2 ( FliContext context , const char * filePath ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCredTwoLite_sendBiasHdrC1File_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_sendBiasHdrC2File_V2 ( FliContext context , const char * filePath ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCredTwoLite_sendBiasHdrC2File_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_sendFlatHdrC1File_V2 ( FliContext context , const char * filePath ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCredTwoLite_sendFlatHdrC1File_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_sendFlatHdrC2File_V2 ( FliContext context , const char * filePath ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCredTwoLite_sendFlatHdrC2File_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_xSendBiasFile_V2 ( FliContext context , const char * filePath , xModemBlockStatusReturn func ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_xSendBiasFile_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'FcnPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_xSendBiasHdrC1File_V2 ( FliContext context , const char * filePath , xModemBlockStatusReturn func ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_xSendBiasHdrC1File_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'FcnPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_xSendBiasHdrC2File_V2 ( FliContext context , const char * filePath , xModemBlockStatusReturn func ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_xSendBiasHdrC2File_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'FcnPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_xSendFlatFile_V2 ( FliContext context , const char * filePath , xModemBlockStatusReturn func ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_xSendFlatFile_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'FcnPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_xSendFlatHdrC1File_V2 ( FliContext context , const char * filePath , xModemBlockStatusReturn func ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_xSendFlatHdrC1File_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'FcnPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_xSendFlatHdrC2File_V2 ( FliContext context , const char * filePath , xModemBlockStatusReturn func ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_xSendFlatHdrC2File_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'FcnPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_sendLicenseFile_V2 ( FliContext context , const char * filePath , const char * fileName ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringcstringThunk';fcns.name{fcnNum}='FliCredTwoLite_sendLicenseFile_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_deleteLicense_V2 ( FliContext context , const char * licenseName ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCredTwoLite_deleteLicense_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_disableLicense_V2 ( FliContext context , const char * licenseName ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCredTwoLite_disableLicense_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_enableLicense_V2 ( FliContext context , const char * licenseName ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCredTwoLite_enableLicense_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_softwareTrig_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_softwareTrig_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_startHttpServer_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_startHttpServer_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_stopHttpServer_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_stopHttpServer_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_startEthernetGrabber_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_startEthernetGrabber_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredTwoLite_stopEthernetGrabber_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredTwoLite_stopEthernetGrabber_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getAllTemp_V2 ( FliContext context , double * cpu , double * backend , double * interfaceTemp , double * ambiant , double * sensor ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_getAllTemp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getTint_V2 ( FliContext context , double * tint ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_getTint_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getTintMax_V2 ( FliContext context , double * tintMax ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_getTintMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getAntiBloomingState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_getAntiBloomingState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getBadPixelState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_getBadPixelState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getTempAmbiant_V2 ( FliContext context , double * temp ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_getTempAmbiant_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getTempBackEnd_V2 ( FliContext context , double * temp ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_getTempBackEnd_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getTempCpu_V2 ( FliContext context , double * temp ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_getTempCpu_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getTempInterface_V2 ( FliContext context , double * temp ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_getTempInterface_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getTempSnake_V2 ( FliContext context , double * temp ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_getTempSnake_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getTintRange_V2 ( FliContext context , double * tintMin , double * tintMax ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_getTintRange_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getAdaptBiasState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_getAdaptBiasState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getAgcState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_getAgcState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getAgcPriority_V2 ( FliContext context , char * priority , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredThree_getAgcPriority_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getAgcRoi_V2 ( FliContext context , uint16_t * col1 , uint16_t * row1 , uint16_t * col2 , uint16_t * row2 ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_getAgcRoi_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'uint16Ptr', 'uint16Ptr', 'uint16Ptr', 'uint16Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getDarkOptimLevel_V2 ( FliContext context , int * level ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_getDarkOptimLevel_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int32Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getExtSynchroExposure_V2 ( FliContext context , char * exposure , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredThree_getExtSynchroExposure_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getExtSynchroPolarity_V2 ( FliContext context , char * polarity , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredThree_getExtSynchroPolarity_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getHdrState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_getHdrState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getHdrCalibrationMode_V2 ( FliContext context , char * mode , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredThree_getHdrCalibrationMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getHdrExtendedState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_getHdrExtendedState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getLicenses_V2 ( FliContext context , char * licenses , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredThree_getLicenses_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getMaxFpsUsb_V2 ( FliContext context , double * maxFpsUsb ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_getMaxFpsUsb_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getMaxSyncDelay_V2 ( FliContext context , double * maxSyncDelay ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_getMaxSyncDelay_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getMinSyncDelay_V2 ( FliContext context , double * minSyncDelay ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_getMinSyncDelay_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getMaxTintItr_V2 ( FliContext context , double * maxTintItr ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_getMaxTintItr_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getMinFps_V2 ( FliContext context , double * minFps ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_getMinFps_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getNbFramesPerSwTrig_V2 ( FliContext context , int * nbFrames ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_getNbFramesPerSwTrig_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int32Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getPreset_V2 ( FliContext context , int * preset ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_getPreset_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int32Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getRemoteMaintenanceState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_getRemoteMaintenanceState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getStepSyncDelay_V2 ( FliContext context , double * delay ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_getStepSyncDelay_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getSwSynchroState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_getSwSynchroState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getSyncDelay_V2 ( FliContext context , double * delay ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_getSyncDelay_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getTcdsAdjustState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_getTcdsAdjustState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getTelnetState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_getTelnetState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getTintGranularityState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_getTintGranularityState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getTlsydel_V2 ( FliContext context , int * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_getTlsydel_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int32Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getVrefAdjustState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_getVrefAdjustState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getAgcParam_V2 ( FliContext context , AgcParam param , double * value ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrAgcParamvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_getAgcParam_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AgcParam', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getIpAlternateDns_V2 ( FliContext context , char * dns , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredThree_getIpAlternateDns_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getIpDns_V2 ( FliContext context , char * dns , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredThree_getIpDns_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getIpGateway_V2 ( FliContext context , char * gateway , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredThree_getIpGateway_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getIpMode_V2 ( FliContext context , char * mode , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredThree_getIpMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getIpNetmask_V2 ( FliContext context , char * netmask , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredThree_getIpNetmask_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getIpAddress_V2 ( FliContext context , char * ip , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredThree_getIpAddress_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getSnakeParam_V2 ( FliContext context , const char * parameter , uint16_t * value ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_getSnakeParam_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint16Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getUploadFirmwareConnectionInfo_V2 ( FliContext context , char * ip , size_t size , uint16_t * port ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64voidPtrThunk';fcns.name{fcnNum}='FliCredThree_getUploadFirmwareConnectionInfo_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64', 'uint16Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getConversionGain_V2 ( FliContext context , char * gain , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredThree_getConversionGain_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getTintStep_V2 ( FliContext context , double * step ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_getTintStep_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getImagePattern_V2 ( FliContext context , char * pattern , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredThree_getImagePattern_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getDate_V2 ( FliContext context , char * date , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredThree_getDate_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getUptime_V2 ( FliContext context , char * uptime , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredThree_getUptime_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getAccumulatedUptime_V2 ( FliContext context , char * uptime , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredThree_getAccumulatedUptime_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getTotalUptime_V2 ( FliContext context , char * uptime , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCredThree_getTotalUptime_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getRawImagesState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_getRawImagesState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_getUnsignedPixelsState_V2 ( FliContext context , _Bool * enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_getUnsignedPixelsState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_setTint_V2 ( FliContext context , double tint ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliCredThree_setTint_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_setConversionGain_V2 ( FliContext context , const char * gain ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCredThree_setConversionGain_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_setAgcPriorityNone_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_setAgcPriorityNone_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_setAgcPriorityOverExposed_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_setAgcPriorityOverExposed_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_setAgcPriorityUnderExposed_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_setAgcPriorityUnderExposed_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_setDarkOptimLevel_V2 ( FliContext context , int level ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint32Thunk';fcns.name{fcnNum}='FliCredThree_setDarkOptimLevel_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int32'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_setExtSynchroExposureInternal_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_setExtSynchroExposureInternal_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_setExtSynchroExposureExternal_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_setExtSynchroExposureExternal_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_setExtSynchroPolarityInverted_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_setExtSynchroPolarityInverted_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_setExtSynchroPolarityStandard_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_setExtSynchroPolarityStandard_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_setHdrCalibrationC1_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_setHdrCalibrationC1_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_setHdrCalibrationC2_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_setHdrCalibrationC2_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_setHdrCalibrationOff_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_setHdrCalibrationOff_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_setNbFramesPerSwTrig_V2 ( FliContext context , uint16_t nbFrames ); 
fcns.thunkname{fcnNum}='_BoolvoidPtruint16Thunk';fcns.name{fcnNum}='FliCredThree_setNbFramesPerSwTrig_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'uint16'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_setSyncDelay_V2 ( FliContext context , int delay ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint32Thunk';fcns.name{fcnNum}='FliCredThree_setSyncDelay_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int32'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_setTlsyDel_V2 ( FliContext context , int val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint32Thunk';fcns.name{fcnNum}='FliCredThree_setTlsyDel_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int32'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_setVoltageVref_V2 ( FliContext context , double vref ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliCredThree_setVoltageVref_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_setAgcRoi_V2 ( FliContext context , uint16_t col1 , uint16_t row1 , uint16_t col2 , uint16_t row2 ); 
fcns.thunkname{fcnNum}='_BoolvoidPtruint16uint16uint16uint16Thunk';fcns.name{fcnNum}='FliCredThree_setAgcRoi_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'uint16', 'uint16', 'uint16', 'uint16'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_setAgcParam_V2 ( FliContext context , AgcParam param , double value ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrAgcParamdoubleThunk';fcns.name{fcnNum}='FliCredThree_setAgcParam_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AgcParam', 'double'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_setPreset_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_setPreset_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_setPresetNumber_V2 ( FliContext context , uint8_t presetNumber ); 
fcns.thunkname{fcnNum}='_BoolvoidPtruint8Thunk';fcns.name{fcnNum}='FliCredThree_setPresetNumber_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'uint8'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_setSnakeParam_V2 ( FliContext context , const char * parameter , uint16_t value ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint16Thunk';fcns.name{fcnNum}='FliCredThree_setSnakeParam_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint16'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_setImagePatternRamp_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_setImagePatternRamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_setImagePatternConstant_V2 ( FliContext context , uint16_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtruint16Thunk';fcns.name{fcnNum}='FliCredThree_setImagePatternConstant_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'uint16'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_setImagePatternOff_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_setImagePatternOff_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_enableAntiBlooming_V2 ( FliContext context , _Bool enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCredThree_enableAntiBlooming_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_enableBadPixel_V2 ( FliContext context , _Bool enabled ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCredThree_enableBadPixel_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_enableAdaptbias_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCredThree_enableAdaptbias_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_enableAgc_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCredThree_enableAgc_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_enableHdrExtended_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCredThree_enableHdrExtended_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_enableHdr_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCredThree_enableHdr_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_enableRemoteMaintenance_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCredThree_enableRemoteMaintenance_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_enableSwSynchro_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCredThree_enableSwSynchro_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_enableTcdsAdjust_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCredThree_enableTcdsAdjust_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_enableTintGranularity_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCredThree_enableTintGranularity_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_enableVrefAdjust_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCredThree_enableVrefAdjust_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_enableRawImages_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCredThree_enableRawImages_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_enableUnsignedPixels_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCredThree_enableUnsignedPixels_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_reboot_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_reboot_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_buildFlatHdrC1_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_buildFlatHdrC1_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_buildFlatHdrC2_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_buildFlatHdrC2_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_sendBiasHdrC1FromUrl_V2 ( FliContext context , const char * url ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCredThree_sendBiasHdrC1FromUrl_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_sendBiasHdrC2FromUrl_V2 ( FliContext context , const char * url ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCredThree_sendBiasHdrC2FromUrl_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_sendFlatHdrC1FromUrl_V2 ( FliContext context , const char * url ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCredThree_sendFlatHdrC1FromUrl_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_sendFlatHdrC2FromUrl_V2 ( FliContext context , const char * url ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCredThree_sendFlatHdrC2FromUrl_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_sendBiasHdrC1File_V2 ( FliContext context , const char * filePath ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCredThree_sendBiasHdrC1File_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_sendBiasHdrC2File_V2 ( FliContext context , const char * filePath ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCredThree_sendBiasHdrC2File_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_sendFlatHdrC1File_V2 ( FliContext context , const char * filePath ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCredThree_sendFlatHdrC1File_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_sendFlatHdrC2File_V2 ( FliContext context , const char * filePath ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCredThree_sendFlatHdrC2File_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_xSendBiasFile_V2 ( FliContext context , const char * filePath , xModemBlockStatusReturn func ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_xSendBiasFile_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'FcnPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_xSendBiasHdrC1File_V2 ( FliContext context , const char * filePath , xModemBlockStatusReturn func ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_xSendBiasHdrC1File_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'FcnPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_xSendBiasHdrC2File_V2 ( FliContext context , const char * filePath , xModemBlockStatusReturn func ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_xSendBiasHdrC2File_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'FcnPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_xSendFlatFile_V2 ( FliContext context , const char * filePath , xModemBlockStatusReturn func ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_xSendFlatFile_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'FcnPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_xSendFlatHdrC1File_V2 ( FliContext context , const char * filePath , xModemBlockStatusReturn func ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_xSendFlatHdrC1File_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'FcnPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_xSendFlatHdrC2File_V2 ( FliContext context , const char * filePath , xModemBlockStatusReturn func ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_xSendFlatHdrC2File_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'FcnPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_sendLicenseFile_V2 ( FliContext context , const char * filePath , const char * fileName ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringcstringThunk';fcns.name{fcnNum}='FliCredThree_sendLicenseFile_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_deleteLicense_V2 ( FliContext context , const char * licenseName ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCredThree_deleteLicense_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_disableLicense_V2 ( FliContext context , const char * licenseName ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCredThree_disableLicense_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_enableLicense_V2 ( FliContext context , const char * licenseName ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCredThree_enableLicense_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_softwareTrig_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_softwareTrig_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_startHttpServer_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_startHttpServer_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_stopHttpServer_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_stopHttpServer_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_startEthernetGrabber_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_startEthernetGrabber_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCredThree_stopEthernetGrabber_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCredThree_stopEthernetGrabber_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getDeviceScanType_V2 ( FliContext context , DeviceScanTypeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_getDeviceScanType_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'DeviceScanTypeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getDeviceIndicatorMode_V2 ( FliContext context , DeviceIndicatorModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_getDeviceIndicatorMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'DeviceIndicatorModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_setDeviceIndicatorMode_V2 ( FliContext context , DeviceIndicatorModeEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrDeviceIndicatorModeEnumThunk';fcns.name{fcnNum}='FliCblueSfnc_setDeviceIndicatorMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'DeviceIndicatorModeEnum'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getSensorShutterMode_V2 ( FliContext context , SensorShutterModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_getSensorShutterMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'SensorShutterModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getRegionSelector_V2 ( FliContext context , RegionSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_getRegionSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'RegionSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_setRegionSelector_V2 ( FliContext context , RegionSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrRegionSelectorEnumThunk';fcns.name{fcnNum}='FliCblueSfnc_setRegionSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'RegionSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getRegionMode_V2 ( FliContext context , RegionModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_getRegionMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'RegionModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getRegionDestination_V2 ( FliContext context , RegionDestinationEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_getRegionDestination_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'RegionDestinationEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_setRegionDestination_V2 ( FliContext context , RegionDestinationEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrRegionDestinationEnumThunk';fcns.name{fcnNum}='FliCblueSfnc_setRegionDestination_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'RegionDestinationEnum'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getPixelFormat_V2 ( FliContext context , PixelFormatEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_getPixelFormat_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'PixelFormatEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_setPixelFormat_V2 ( FliContext context , PixelFormatEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrPixelFormatEnumThunk';fcns.name{fcnNum}='FliCblueSfnc_setPixelFormat_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'PixelFormatEnum'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getAcquisitionMode_V2 ( FliContext context , AcquisitionModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_getAcquisitionMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AcquisitionModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_setAcquisitionMode_V2 ( FliContext context , AcquisitionModeEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrAcquisitionModeEnumThunk';fcns.name{fcnNum}='FliCblueSfnc_setAcquisitionMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AcquisitionModeEnum'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getExposureMode_V2 ( FliContext context , ExposureModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_getExposureMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ExposureModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_setExposureMode_V2 ( FliContext context , ExposureModeEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrExposureModeEnumThunk';fcns.name{fcnNum}='FliCblueSfnc_setExposureMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ExposureModeEnum'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getGainSelector_V2 ( FliContext context , GainSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_getGainSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'GainSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_setGainSelector_V2 ( FliContext context , GainSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrGainSelectorEnumThunk';fcns.name{fcnNum}='FliCblueSfnc_setGainSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'GainSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getBlackLevelSelector_V2 ( FliContext context , BlackLevelSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_getBlackLevelSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'BlackLevelSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_setBlackLevelSelector_V2 ( FliContext context , BlackLevelSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrBlackLevelSelectorEnumThunk';fcns.name{fcnNum}='FliCblueSfnc_setBlackLevelSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'BlackLevelSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getBlackLevelAuto_V2 ( FliContext context , BlackLevelAutoEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_getBlackLevelAuto_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'BlackLevelAutoEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_setBlackLevelAuto_V2 ( FliContext context , BlackLevelAutoEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrBlackLevelAutoEnumThunk';fcns.name{fcnNum}='FliCblueSfnc_setBlackLevelAuto_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'BlackLevelAutoEnum'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getCxpLinkConfigurationStatus_V2 ( FliContext context , CxpLinkConfigurationStatusEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_getCxpLinkConfigurationStatus_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'CxpLinkConfigurationStatusEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getCxpLinkConfigurationPreferred_V2 ( FliContext context , CxpLinkConfigurationPreferredEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_getCxpLinkConfigurationPreferred_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'CxpLinkConfigurationPreferredEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getCxpLinkConfiguration_V2 ( FliContext context , CxpLinkConfigurationEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_getCxpLinkConfiguration_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'CxpLinkConfigurationEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getCxpConnectionTestMode_V2 ( FliContext context , CxpConnectionTestModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_getCxpConnectionTestMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'CxpConnectionTestModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_setCxpConnectionTestMode_V2 ( FliContext context , CxpConnectionTestModeEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrCxpConnectionTestModeEnumThunk';fcns.name{fcnNum}='FliCblueSfnc_setCxpConnectionTestMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'CxpConnectionTestModeEnum'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getCxpSendReceiveSelector_V2 ( FliContext context , CxpSendReceiveSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_getCxpSendReceiveSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'CxpSendReceiveSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_setCxpSendReceiveSelector_V2 ( FliContext context , CxpSendReceiveSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrCxpSendReceiveSelectorEnumThunk';fcns.name{fcnNum}='FliCblueSfnc_setCxpSendReceiveSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'CxpSendReceiveSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getCxpErrorCounterSelector_V2 ( FliContext context , CxpErrorCounterSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_getCxpErrorCounterSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'CxpErrorCounterSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_setCxpErrorCounterSelector_V2 ( FliContext context , CxpErrorCounterSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrCxpErrorCounterSelectorEnumThunk';fcns.name{fcnNum}='FliCblueSfnc_setCxpErrorCounterSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'CxpErrorCounterSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getCxpErrorCounterStatus_V2 ( FliContext context , CxpErrorCounterStatusEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_getCxpErrorCounterStatus_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'CxpErrorCounterStatusEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getSensorWidth_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_getSensorWidth_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getSensorHeight_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_getSensorHeight_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getWidthMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_getWidthMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getHeightMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_getHeightMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getWidth_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_getWidth_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_setWidth_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliCblueSfnc_setWidth_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getHeight_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_getHeight_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_setHeight_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliCblueSfnc_setHeight_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getOffsetX_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_getOffsetX_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_setOffsetX_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliCblueSfnc_setOffsetX_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getOffsetY_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_getOffsetY_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_setOffsetY_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliCblueSfnc_setOffsetY_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getAcquisitionFrameCount_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_getAcquisitionFrameCount_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_setAcquisitionFrameCount_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliCblueSfnc_setAcquisitionFrameCount_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getCxpConnectionSelector_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_getCxpConnectionSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_setCxpConnectionSelector_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliCblueSfnc_setCxpConnectionSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getCxpConnectionTestErrorCount_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_getCxpConnectionTestErrorCount_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_setCxpConnectionTestErrorCount_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliCblueSfnc_setCxpConnectionTestErrorCount_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getCxpConnectionTestPacketCount_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_getCxpConnectionTestPacketCount_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_setCxpConnectionTestPacketCount_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliCblueSfnc_setCxpConnectionTestPacketCount_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getCxpErrorCounterValue_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_getCxpErrorCounterValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_setCxpErrorCounterValue_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliCblueSfnc_setCxpErrorCounterValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getTLParamsLocked_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_getTLParamsLocked_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_setTLParamsLocked_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliCblueSfnc_setTLParamsLocked_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getDeviceVendorName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueSfnc_getDeviceVendorName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getDeviceModelName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueSfnc_getDeviceModelName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getDeviceManufacturerInfo_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueSfnc_getDeviceManufacturerInfo_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getDeviceVersion_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueSfnc_getDeviceVersion_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getDeviceFirmwareVersion_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueSfnc_getDeviceFirmwareVersion_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getDeviceSerialNumber_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueSfnc_getDeviceSerialNumber_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getDeviceUserID_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueSfnc_getDeviceUserID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_setDeviceUserID_V2 ( FliContext context , const char * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCblueSfnc_setDeviceUserID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getDeviceTemperature_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_getDeviceTemperature_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getSensorPixelWidth_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_getSensorPixelWidth_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getSensorPixelHeight_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_getSensorPixelHeight_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getAcquisitionFrameRate_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_getAcquisitionFrameRate_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_setAcquisitionFrameRate_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliCblueSfnc_setAcquisitionFrameRate_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getAcquisitionFrameRateMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_getAcquisitionFrameRateMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getAcquisitionFrameRateMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_getAcquisitionFrameRateMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getExposureTime_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_getExposureTime_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_setExposureTime_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliCblueSfnc_setExposureTime_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getExposureTimeMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_getExposureTimeMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getExposureTimeMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_getExposureTimeMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getGain_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_getGain_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_setGain_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliCblueSfnc_setGain_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getGainMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_getGainMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getGainMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_getGainMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getBlackLevel_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_getBlackLevel_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_setBlackLevel_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliCblueSfnc_setBlackLevel_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getReverseX_V2 ( FliContext context , _Bool * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_getReverseX_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_setReverseX_V2 ( FliContext context , _Bool val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCblueSfnc_setReverseX_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_getReverseY_V2 ( FliContext context , _Bool * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_getReverseY_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_setReverseY_V2 ( FliContext context , _Bool val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCblueSfnc_setReverseY_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_executeDeviceReset_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_executeDeviceReset_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_executeAcquisitionStart_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_executeAcquisitionStart_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_executeAcquisitionStop_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_executeAcquisitionStop_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_executeAcquisitionAbort_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_executeAcquisitionAbort_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_executeUserSetLoad_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_executeUserSetLoad_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_executeUserSetSave_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_executeUserSetSave_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueSfnc_executeCxpErrorCounterReset_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCblueSfnc_executeCxpErrorCounterReset_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_executeDeviceShutdown_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_executeDeviceShutdown_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceShutdownVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getDeviceShutdownVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceShutdownAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getDeviceShutdownAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceShutdownTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getDeviceShutdownTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceShutdownDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getDeviceShutdownDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceShutdownDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getDeviceShutdownDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceTemperatureSelector_V2 ( FliContext context , DeviceTemperatureSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getDeviceTemperatureSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'DeviceTemperatureSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_setDeviceTemperatureSelector_V2 ( FliContext context , DeviceTemperatureSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrDeviceTemperatureSelectorEnumThunk';fcns.name{fcnNum}='FliCblueOne_setDeviceTemperatureSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'DeviceTemperatureSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceTemperatureSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getDeviceTemperatureSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceTemperatureSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getDeviceTemperatureSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceTemperatureSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getDeviceTemperatureSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceTemperatureSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getDeviceTemperatureSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceTemperatureSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getDeviceTemperatureSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceTecSelector_V2 ( FliContext context , DeviceTecSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getDeviceTecSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'DeviceTecSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_setDeviceTecSelector_V2 ( FliContext context , DeviceTecSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrDeviceTecSelectorEnumThunk';fcns.name{fcnNum}='FliCblueOne_setDeviceTecSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'DeviceTecSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceTecSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getDeviceTecSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceTecSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getDeviceTecSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceTecSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getDeviceTecSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceTecSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getDeviceTecSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceTecSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getDeviceTecSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceTecVoltage_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getDeviceTecVoltage_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_setDeviceTecVoltage_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliCblueOne_setDeviceTecVoltage_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceTecVoltageMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getDeviceTecVoltageMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceTecVoltageMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getDeviceTecVoltageMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceTecVoltageUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getDeviceTecVoltageUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceTecVoltageVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getDeviceTecVoltageVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceTecVoltageAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getDeviceTecVoltageAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceTecVoltageTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getDeviceTecVoltageTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceTecVoltageDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getDeviceTecVoltageDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceTecVoltageDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getDeviceTecVoltageDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceTecVoltagePollingInterval_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getDeviceTecVoltagePollingInterval_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceTecCurrent_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getDeviceTecCurrent_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_setDeviceTecCurrent_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliCblueOne_setDeviceTecCurrent_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceTecCurrentMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getDeviceTecCurrentMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceTecCurrentMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getDeviceTecCurrentMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceTecCurrentUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getDeviceTecCurrentUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceTecCurrentVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getDeviceTecCurrentVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceTecCurrentAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getDeviceTecCurrentAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceTecCurrentTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getDeviceTecCurrentTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceTecCurrentDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getDeviceTecCurrentDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceTecCurrentDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getDeviceTecCurrentDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceTecCurrentPollingInterval_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getDeviceTecCurrentPollingInterval_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceTecPower_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getDeviceTecPower_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_setDeviceTecPower_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliCblueOne_setDeviceTecPower_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceTecPowerMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getDeviceTecPowerMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceTecPowerMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getDeviceTecPowerMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceTecPowerUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getDeviceTecPowerUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceTecPowerVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getDeviceTecPowerVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceTecPowerAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getDeviceTecPowerAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceTecPowerTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getDeviceTecPowerTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceTecPowerDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getDeviceTecPowerDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceTecPowerDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getDeviceTecPowerDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceTecPowerPollingInterval_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getDeviceTecPowerPollingInterval_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceFanMode_V2 ( FliContext context , DeviceFanModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getDeviceFanMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'DeviceFanModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_setDeviceFanMode_V2 ( FliContext context , DeviceFanModeEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrDeviceFanModeEnumThunk';fcns.name{fcnNum}='FliCblueOne_setDeviceFanMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'DeviceFanModeEnum'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceFanModeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getDeviceFanModeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceFanModeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getDeviceFanModeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceFanModeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getDeviceFanModeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceFanModeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getDeviceFanModeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceFanModeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getDeviceFanModeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceFanSpeed_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getDeviceFanSpeed_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_setDeviceFanSpeed_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliCblueOne_setDeviceFanSpeed_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceFanSpeedMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getDeviceFanSpeedMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceFanSpeedMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getDeviceFanSpeedMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceFanSpeedUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getDeviceFanSpeedUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceFanSpeedVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getDeviceFanSpeedVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceFanSpeedAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getDeviceFanSpeedAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceFanSpeedTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getDeviceFanSpeedTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceFanSpeedDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getDeviceFanSpeedDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceFanSpeedDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getDeviceFanSpeedDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceCoolingEnable_V2 ( FliContext context , _Bool * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getDeviceCoolingEnable_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_setDeviceCoolingEnable_V2 ( FliContext context , _Bool val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCblueOne_setDeviceCoolingEnable_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceCoolingEnableVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getDeviceCoolingEnableVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceCoolingEnableAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getDeviceCoolingEnableAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceCoolingEnableTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getDeviceCoolingEnableTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceCoolingEnableDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getDeviceCoolingEnableDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceCoolingEnableDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getDeviceCoolingEnableDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceCoolingSetpoint_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getDeviceCoolingSetpoint_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_setDeviceCoolingSetpoint_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliCblueOne_setDeviceCoolingSetpoint_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceCoolingSetpointMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getDeviceCoolingSetpointMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceCoolingSetpointMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getDeviceCoolingSetpointMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceCoolingSetpointUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getDeviceCoolingSetpointUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceCoolingSetpointVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getDeviceCoolingSetpointVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceCoolingSetpointAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getDeviceCoolingSetpointAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceCoolingSetpointTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getDeviceCoolingSetpointTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceCoolingSetpointDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getDeviceCoolingSetpointDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceCoolingSetpointDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getDeviceCoolingSetpointDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceStatus_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getDeviceStatus_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_setDeviceStatus_V2 ( FliContext context , const char * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCblueOne_setDeviceStatus_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceStatusVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getDeviceStatusVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceStatusAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getDeviceStatusAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceStatusTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getDeviceStatusTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceStatusDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getDeviceStatusDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceStatusDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getDeviceStatusDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceStatusPollingInterval_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getDeviceStatusPollingInterval_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceStatusDetailed_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getDeviceStatusDetailed_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_setDeviceStatusDetailed_V2 ( FliContext context , const char * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCblueOne_setDeviceStatusDetailed_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceStatusDetailedVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getDeviceStatusDetailedVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceStatusDetailedAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getDeviceStatusDetailedAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceStatusDetailedTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getDeviceStatusDetailedTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceStatusDetailedDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getDeviceStatusDetailedDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceStatusDetailedDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getDeviceStatusDetailedDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getDeviceStatusDetailedPollingInterval_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getDeviceStatusDetailedPollingInterval_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getFirmwareUpdateUri_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getFirmwareUpdateUri_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_setFirmwareUpdateUri_V2 ( FliContext context , const char * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCblueOne_setFirmwareUpdateUri_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getFirmwareUpdateUriVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getFirmwareUpdateUriVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getFirmwareUpdateUriAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getFirmwareUpdateUriAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getFirmwareUpdateUriTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getFirmwareUpdateUriTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getFirmwareUpdateUriDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getFirmwareUpdateUriDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getFirmwareUpdateUriDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getFirmwareUpdateUriDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_executeFirmwareUpdateExecute_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_executeFirmwareUpdateExecute_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getFirmwareUpdateExecuteVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getFirmwareUpdateExecuteVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getFirmwareUpdateExecuteAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getFirmwareUpdateExecuteAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getFirmwareUpdateExecuteTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getFirmwareUpdateExecuteTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getFirmwareUpdateExecuteDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getFirmwareUpdateExecuteDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getFirmwareUpdateExecuteDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getFirmwareUpdateExecuteDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_executeFirmwareUpdateAbort_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_executeFirmwareUpdateAbort_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getFirmwareUpdateAbortVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getFirmwareUpdateAbortVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getFirmwareUpdateAbortAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getFirmwareUpdateAbortAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getFirmwareUpdateAbortTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getFirmwareUpdateAbortTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getFirmwareUpdateAbortDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getFirmwareUpdateAbortDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getFirmwareUpdateAbortDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getFirmwareUpdateAbortDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_executeFirmwareUpdateStatusRefresh_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_executeFirmwareUpdateStatusRefresh_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getFirmwareUpdateStatusRefreshVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getFirmwareUpdateStatusRefreshVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getFirmwareUpdateStatusRefreshAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getFirmwareUpdateStatusRefreshAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getFirmwareUpdateStatusRefreshTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getFirmwareUpdateStatusRefreshTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getFirmwareUpdateStatusRefreshDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getFirmwareUpdateStatusRefreshDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getFirmwareUpdateStatusRefreshDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getFirmwareUpdateStatusRefreshDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getFirmwareUpdateStatus_V2 ( FliContext context , FirmwareUpdateStatusEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getFirmwareUpdateStatus_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'FirmwareUpdateStatusEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_setFirmwareUpdateStatus_V2 ( FliContext context , FirmwareUpdateStatusEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrFirmwareUpdateStatusEnumThunk';fcns.name{fcnNum}='FliCblueOne_setFirmwareUpdateStatus_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'FirmwareUpdateStatusEnum'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getFirmwareUpdateStatusVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getFirmwareUpdateStatusVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getFirmwareUpdateStatusAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getFirmwareUpdateStatusAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getFirmwareUpdateStatusTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getFirmwareUpdateStatusTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getFirmwareUpdateStatusDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getFirmwareUpdateStatusDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getFirmwareUpdateStatusDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getFirmwareUpdateStatusDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getFirmwareUpdateStatusPollingInterval_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getFirmwareUpdateStatusPollingInterval_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getLogHistoryDepth_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getLogHistoryDepth_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_setLogHistoryDepth_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliCblueOne_setLogHistoryDepth_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getLogHistoryDepthMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getLogHistoryDepthMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getLogHistoryDepthMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getLogHistoryDepthMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getLogHistoryDepthUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getLogHistoryDepthUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getLogHistoryDepthVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getLogHistoryDepthVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getLogHistoryDepthAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getLogHistoryDepthAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getLogHistoryDepthTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getLogHistoryDepthTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getLogHistoryDepthDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getLogHistoryDepthDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getLogHistoryDepthDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getLogHistoryDepthDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_executeLogCollect_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_executeLogCollect_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getLogCollectVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getLogCollectVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getLogCollectAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getLogCollectAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getLogCollectTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getLogCollectTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getLogCollectDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getLogCollectDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getLogCollectDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getLogCollectDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_executeLogCollectAbort_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_executeLogCollectAbort_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getLogCollectAbortVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getLogCollectAbortVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getLogCollectAbortAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getLogCollectAbortAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getLogCollectAbortTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getLogCollectAbortTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getLogCollectAbortDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getLogCollectAbortDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getLogCollectAbortDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getLogCollectAbortDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getLogCollectStatus_V2 ( FliContext context , LogCollectStatusEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getLogCollectStatus_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'LogCollectStatusEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_setLogCollectStatus_V2 ( FliContext context , LogCollectStatusEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrLogCollectStatusEnumThunk';fcns.name{fcnNum}='FliCblueOne_setLogCollectStatus_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'LogCollectStatusEnum'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getLogCollectStatusVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getLogCollectStatusVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getLogCollectStatusAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getLogCollectStatusAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getLogCollectStatusTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getLogCollectStatusTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getLogCollectStatusDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getLogCollectStatusDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getLogCollectStatusDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getLogCollectStatusDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getLogCollectStatusPollingInterval_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getLogCollectStatusPollingInterval_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_executeLogCollectStatusRefresh_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_executeLogCollectStatusRefresh_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getLogCollectStatusRefreshVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getLogCollectStatusRefreshVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getLogCollectStatusRefreshAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getLogCollectStatusRefreshAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getLogCollectStatusRefreshTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getLogCollectStatusRefreshTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getLogCollectStatusRefreshDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getLogCollectStatusRefreshDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getLogCollectStatusRefreshDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getLogCollectStatusRefreshDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_executeLogServe_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_executeLogServe_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getLogServeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getLogServeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getLogServeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getLogServeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getLogServeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getLogServeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getLogServeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getLogServeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getLogServeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getLogServeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_executeLogServeAbort_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_executeLogServeAbort_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getLogServeAbortVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getLogServeAbortVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getLogServeAbortAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getLogServeAbortAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getLogServeAbortTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getLogServeAbortTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getLogServeAbortDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getLogServeAbortDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getLogServeAbortDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getLogServeAbortDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getLogServeUri_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getLogServeUri_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_setLogServeUri_V2 ( FliContext context , const char * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCblueOne_setLogServeUri_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getLogServeUriVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getLogServeUriVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getLogServeUriAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getLogServeUriAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getLogServeUriTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getLogServeUriTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getLogServeUriDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getLogServeUriDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getLogServeUriDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getLogServeUriDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getCurrentIPAddress_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getCurrentIPAddress_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_setCurrentIPAddress_V2 ( FliContext context , const char * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCblueOne_setCurrentIPAddress_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getCurrentIPAddressVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getCurrentIPAddressVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getCurrentIPAddressAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getCurrentIPAddressAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getCurrentIPAddressTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getCurrentIPAddressTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getCurrentIPAddressDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getCurrentIPAddressDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getCurrentIPAddressDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getCurrentIPAddressDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getCurrentSubnetMask_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getCurrentSubnetMask_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_setCurrentSubnetMask_V2 ( FliContext context , const char * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCblueOne_setCurrentSubnetMask_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getCurrentSubnetMaskVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getCurrentSubnetMaskVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getCurrentSubnetMaskAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getCurrentSubnetMaskAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getCurrentSubnetMaskTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getCurrentSubnetMaskTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getCurrentSubnetMaskDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getCurrentSubnetMaskDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getCurrentSubnetMaskDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getCurrentSubnetMaskDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getIPMode_V2 ( FliContext context , IPModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getIPMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'IPModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_setIPMode_V2 ( FliContext context , IPModeEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrIPModeEnumThunk';fcns.name{fcnNum}='FliCblueOne_setIPMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'IPModeEnum'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getIPModeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getIPModeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getIPModeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getIPModeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getIPModeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getIPModeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getIPModeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getIPModeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getIPModeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getIPModeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_executeIPReconfigure_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_executeIPReconfigure_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getIPReconfigureVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getIPReconfigureVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getIPReconfigureAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getIPReconfigureAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getIPReconfigureTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getIPReconfigureTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getIPReconfigureDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getIPReconfigureDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getIPReconfigureDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getIPReconfigureDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getStaticIPAddress_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getStaticIPAddress_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_setStaticIPAddress_V2 ( FliContext context , const char * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCblueOne_setStaticIPAddress_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getStaticIPAddressVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getStaticIPAddressVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getStaticIPAddressAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getStaticIPAddressAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getStaticIPAddressTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getStaticIPAddressTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getStaticIPAddressDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getStaticIPAddressDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getStaticIPAddressDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getStaticIPAddressDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getStaticSubnetMask_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getStaticSubnetMask_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_setStaticSubnetMask_V2 ( FliContext context , const char * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCblueOne_setStaticSubnetMask_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getStaticSubnetMaskVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getStaticSubnetMaskVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getStaticSubnetMaskAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getStaticSubnetMaskAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getStaticSubnetMaskTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getStaticSubnetMaskTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getStaticSubnetMaskDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getStaticSubnetMaskDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getStaticSubnetMaskDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getStaticSubnetMaskDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getStaticDefaultGateway_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getStaticDefaultGateway_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_setStaticDefaultGateway_V2 ( FliContext context , const char * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCblueOne_setStaticDefaultGateway_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getStaticDefaultGatewayVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getStaticDefaultGatewayVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getStaticDefaultGatewayAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getStaticDefaultGatewayAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getStaticDefaultGatewayTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getStaticDefaultGatewayTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getStaticDefaultGatewayDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getStaticDefaultGatewayDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getStaticDefaultGatewayDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getStaticDefaultGatewayDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getStaticDomainNameServer_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getStaticDomainNameServer_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_setStaticDomainNameServer_V2 ( FliContext context , const char * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCblueOne_setStaticDomainNameServer_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getStaticDomainNameServerVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getStaticDomainNameServerVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getStaticDomainNameServerAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getStaticDomainNameServerAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getStaticDomainNameServerTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getStaticDomainNameServerTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getStaticDomainNameServerDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getStaticDomainNameServerDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getStaticDomainNameServerDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getStaticDomainNameServerDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getStaticAlternateDomainNameServer_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getStaticAlternateDomainNameServer_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_setStaticAlternateDomainNameServer_V2 ( FliContext context , const char * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliCblueOne_setStaticAlternateDomainNameServer_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getStaticAlternateDomainNameServerVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getStaticAlternateDomainNameServerVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getStaticAlternateDomainNameServerAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getStaticAlternateDomainNameServerAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getStaticAlternateDomainNameServerTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getStaticAlternateDomainNameServerTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getStaticAlternateDomainNameServerDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getStaticAlternateDomainNameServerDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getStaticAlternateDomainNameServerDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getStaticAlternateDomainNameServerDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparse_V2 ( FliContext context , _Bool * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getSparse_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_setSparse_V2 ( FliContext context , _Bool val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliCblueOne_setSparse_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getSparseVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getSparseAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getSparseTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getSparseDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getSparseDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseSelector_V2 ( FliContext context , SparseSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getSparseSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'SparseSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_setSparseSelector_V2 ( FliContext context , SparseSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrSparseSelectorEnumThunk';fcns.name{fcnNum}='FliCblueOne_setSparseSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'SparseSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getSparseSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getSparseSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getSparseSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getSparseSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getSparseSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseWidth_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getSparseWidth_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_setSparseWidth_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliCblueOne_setSparseWidth_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseWidthMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getSparseWidthMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseWidthMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getSparseWidthMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseWidthUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getSparseWidthUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseWidthVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getSparseWidthVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseWidthAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getSparseWidthAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseWidthTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getSparseWidthTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseWidthDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getSparseWidthDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseWidthDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getSparseWidthDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseHeight_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getSparseHeight_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_setSparseHeight_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliCblueOne_setSparseHeight_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseHeightMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getSparseHeightMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseHeightMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getSparseHeightMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseHeightUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getSparseHeightUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseHeightVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getSparseHeightVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseHeightAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getSparseHeightAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseHeightTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getSparseHeightTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseHeightDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getSparseHeightDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseHeightDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getSparseHeightDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseOffsetX_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getSparseOffsetX_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_setSparseOffsetX_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliCblueOne_setSparseOffsetX_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseOffsetXMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getSparseOffsetXMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseOffsetXMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getSparseOffsetXMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseOffsetXUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getSparseOffsetXUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseOffsetXVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getSparseOffsetXVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseOffsetXAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getSparseOffsetXAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseOffsetXTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getSparseOffsetXTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseOffsetXDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getSparseOffsetXDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseOffsetXDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getSparseOffsetXDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseOffsetY_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getSparseOffsetY_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_setSparseOffsetY_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliCblueOne_setSparseOffsetY_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseOffsetYMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getSparseOffsetYMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseOffsetYMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getSparseOffsetYMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseOffsetYUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getSparseOffsetYUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseOffsetYVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getSparseOffsetYVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseOffsetYAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getSparseOffsetYAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseOffsetYTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getSparseOffsetYTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseOffsetYDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getSparseOffsetYDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseOffsetYDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getSparseOffsetYDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseMode_V2 ( FliContext context , SparseModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getSparseMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'SparseModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_setSparseMode_V2 ( FliContext context , SparseModeEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrSparseModeEnumThunk';fcns.name{fcnNum}='FliCblueOne_setSparseMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'SparseModeEnum'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseModeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getSparseModeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseModeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getSparseModeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseModeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getSparseModeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseModeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getSparseModeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getSparseModeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getSparseModeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getTestPatternGeneratorSelector_V2 ( FliContext context , TestPatternGeneratorSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getTestPatternGeneratorSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'TestPatternGeneratorSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_setTestPatternGeneratorSelector_V2 ( FliContext context , TestPatternGeneratorSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrTestPatternGeneratorSelectorEnumThunk';fcns.name{fcnNum}='FliCblueOne_setTestPatternGeneratorSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'TestPatternGeneratorSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getTestPatternGeneratorSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getTestPatternGeneratorSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getTestPatternGeneratorSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getTestPatternGeneratorSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getTestPatternGeneratorSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getTestPatternGeneratorSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getTestPatternGeneratorSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getTestPatternGeneratorSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getTestPatternGeneratorSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getTestPatternGeneratorSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getTestPattern_V2 ( FliContext context , TestPatternEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getTestPattern_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'TestPatternEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_setTestPattern_V2 ( FliContext context , TestPatternEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrTestPatternEnumThunk';fcns.name{fcnNum}='FliCblueOne_setTestPattern_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'TestPatternEnum'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getTestPatternVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getTestPatternVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getTestPatternAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getTestPatternAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getTestPatternTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getTestPatternTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getTestPatternDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getTestPatternDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getTestPatternDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getTestPatternDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getAcquisitionFrameRateMinReg_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getAcquisitionFrameRateMinReg_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_setAcquisitionFrameRateMinReg_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliCblueOne_setAcquisitionFrameRateMinReg_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getAcquisitionFrameRateMinRegMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getAcquisitionFrameRateMinRegMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getAcquisitionFrameRateMinRegMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getAcquisitionFrameRateMinRegMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getAcquisitionFrameRateMinRegUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getAcquisitionFrameRateMinRegUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getAcquisitionFrameRateMinRegVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getAcquisitionFrameRateMinRegVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getAcquisitionFrameRateMinRegAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getAcquisitionFrameRateMinRegAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getAcquisitionFrameRateMinRegTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getAcquisitionFrameRateMinRegTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getAcquisitionFrameRateMinRegDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getAcquisitionFrameRateMinRegDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getAcquisitionFrameRateMinRegDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getAcquisitionFrameRateMinRegDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getAcquisitionFrameRateMaxReg_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getAcquisitionFrameRateMaxReg_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_setAcquisitionFrameRateMaxReg_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliCblueOne_setAcquisitionFrameRateMaxReg_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getAcquisitionFrameRateMaxRegMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getAcquisitionFrameRateMaxRegMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getAcquisitionFrameRateMaxRegMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getAcquisitionFrameRateMaxRegMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getAcquisitionFrameRateMaxRegUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getAcquisitionFrameRateMaxRegUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getAcquisitionFrameRateMaxRegVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getAcquisitionFrameRateMaxRegVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getAcquisitionFrameRateMaxRegAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getAcquisitionFrameRateMaxRegAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getAcquisitionFrameRateMaxRegTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getAcquisitionFrameRateMaxRegTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getAcquisitionFrameRateMaxRegDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getAcquisitionFrameRateMaxRegDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getAcquisitionFrameRateMaxRegDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getAcquisitionFrameRateMaxRegDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getExposureTimeMinReg_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getExposureTimeMinReg_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_setExposureTimeMinReg_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliCblueOne_setExposureTimeMinReg_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getExposureTimeMinRegMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getExposureTimeMinRegMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getExposureTimeMinRegMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getExposureTimeMinRegMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getExposureTimeMinRegUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getExposureTimeMinRegUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getExposureTimeMinRegVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getExposureTimeMinRegVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getExposureTimeMinRegAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getExposureTimeMinRegAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getExposureTimeMinRegTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getExposureTimeMinRegTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getExposureTimeMinRegDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getExposureTimeMinRegDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getExposureTimeMinRegDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getExposureTimeMinRegDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getExposureTimeMaxReg_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getExposureTimeMaxReg_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_setExposureTimeMaxReg_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliCblueOne_setExposureTimeMaxReg_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getExposureTimeMaxRegMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getExposureTimeMaxRegMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getExposureTimeMaxRegMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getExposureTimeMaxRegMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getExposureTimeMaxRegUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getExposureTimeMaxRegUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getExposureTimeMaxRegVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getExposureTimeMaxRegVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getExposureTimeMaxRegAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getExposureTimeMaxRegAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getExposureTimeMaxRegTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getExposureTimeMaxRegTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getExposureTimeMaxRegDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getExposureTimeMaxRegDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getExposureTimeMaxRegDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getExposureTimeMaxRegDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getGlowReduction_V2 ( FliContext context , GlowReductionEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getGlowReduction_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'GlowReductionEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_setGlowReduction_V2 ( FliContext context , GlowReductionEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrGlowReductionEnumThunk';fcns.name{fcnNum}='FliCblueOne_setGlowReduction_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'GlowReductionEnum'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getGlowReductionVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getGlowReductionVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getGlowReductionAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getGlowReductionAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getGlowReductionTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getGlowReductionTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getGlowReductionDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getGlowReductionDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getGlowReductionDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getGlowReductionDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getConversionEfficiency_V2 ( FliContext context , ConversionEfficiencyEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getConversionEfficiency_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ConversionEfficiencyEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_setConversionEfficiency_V2 ( FliContext context , ConversionEfficiencyEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrConversionEfficiencyEnumThunk';fcns.name{fcnNum}='FliCblueOne_setConversionEfficiency_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ConversionEfficiencyEnum'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getConversionEfficiencyVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getConversionEfficiencyVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getConversionEfficiencyAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getConversionEfficiencyAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getConversionEfficiencyTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getConversionEfficiencyTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getConversionEfficiencyDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getConversionEfficiencyDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getConversionEfficiencyDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getConversionEfficiencyDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getUserSetSelector_V2 ( FliContext context , UserSetSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getUserSetSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'UserSetSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_setUserSetSelector_V2 ( FliContext context , UserSetSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrUserSetSelectorEnumThunk';fcns.name{fcnNum}='FliCblueOne_setUserSetSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'UserSetSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getUserSetSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getUserSetSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getUserSetSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getUserSetSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getUserSetSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getUserSetSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getUserSetSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getUserSetSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getUserSetSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getUserSetSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getUserSetDefault_V2 ( FliContext context , UserSetDefaultEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getUserSetDefault_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'UserSetDefaultEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_setUserSetDefault_V2 ( FliContext context , UserSetDefaultEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrUserSetDefaultEnumThunk';fcns.name{fcnNum}='FliCblueOne_setUserSetDefault_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'UserSetDefaultEnum'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getUserSetDefaultVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getUserSetDefaultVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getUserSetDefaultAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliCblueOne_getUserSetDefaultAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getUserSetDefaultTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getUserSetDefaultTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getUserSetDefaultDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getUserSetDefaultDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliCblueOne_getUserSetDefaultDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliCblueOne_getUserSetDefaultDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliOcam2k_getAllTemp_V2 ( FliContext context , double * ccdTemp , double * cpuTemp , double * powerTemp , double * biasTemp , double * waterTemp , double * leftTemp , double * rightTemp , double * setTemp ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliOcam2k_getAllTemp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliOcam2k_setWorkMode_V2 ( FliContext context , Ocam2Mode_C mode ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrOcam2Mode_CThunk';fcns.name{fcnNum}='FliOcam2k_setWorkMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'Ocam2Mode_C'};fcnNum=fcnNum+1;
%  _Bool FliOcam2k_setStandardMode_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliOcam2k_setStandardMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliOcam2k_setCropping240x120Mode_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliOcam2k_setCropping240x120Mode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliOcam2k_setCropping240x128Mode_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliOcam2k_setCropping240x128Mode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliOcam2k_setBinning2x2Mode_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliOcam2k_setBinning2x2Mode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliOcam2k_setBinning3x3Mode_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliOcam2k_setBinning3x3Mode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliOcam2k_setBinning4x4Mode_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliOcam2k_setBinning4x4Mode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliOcam2k_getConf_V2 ( FliContext context , Ocam2Conf_C * conf ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliOcam2k_getConf_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'Ocam2Conf_CPtr'};fcnNum=fcnNum+1;
%  _Bool FliOcam2k_protectionReset_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliOcam2k_protectionReset_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliOcam2k_setBiasOffset_V2 ( FliContext context , unsigned int offset ); 
fcns.thunkname{fcnNum}='_BoolvoidPtruint32Thunk';fcns.name{fcnNum}='FliOcam2k_setBiasOffset_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'uint32'};fcnNum=fcnNum+1;
%  _Bool FliOcam2k_setFpsMax_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliOcam2k_setFpsMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliOcam2k_setGain_V2 ( FliContext context , unsigned int gain ); 
fcns.thunkname{fcnNum}='_BoolvoidPtruint32Thunk';fcns.name{fcnNum}='FliOcam2k_setGain_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'uint32'};fcnNum=fcnNum+1;
%  _Bool FliOcam2k_sendBiasFile_V2 ( FliContext context , const char * file ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliOcam2k_sendBiasFile_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliOcam2k_sendFlatFile_V2 ( FliContext context , const char * file ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliOcam2k_sendFlatFile_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliOcam2k_getCoolingState_V2 ( FliContext context , Ocam2CoolingState_C * state ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliOcam2k_getCoolingState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'Ocam2CoolingState_CPtr'};fcnNum=fcnNum+1;
%  _Bool FliOcam2k_getCoolingValue_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliOcam2k_getCoolingValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliOcam2k_setCoolingValue_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliOcam2k_setCoolingValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliOcam2k_resetCoolingAlarm_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliOcam2k_resetCoolingAlarm_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliOcam2k_disableCooling_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliOcam2k_disableCooling_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliOcam2s_enableShutter_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliOcam2s_enableShutter_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliOcam2s_setShutterInternal_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliOcam2s_setShutterInternal_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliOcam2s_setShutterExternal_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliOcam2s_setShutterExternal_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliOcam2s_setShutterSingle_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliOcam2s_setShutterSingle_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliOcam2s_setShutterBurst_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliOcam2s_setShutterBurst_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliOcam2s_setShutterSweepMode_V2 ( FliContext context , unsigned int mode ); 
fcns.thunkname{fcnNum}='_BoolvoidPtruint32Thunk';fcns.name{fcnNum}='FliOcam2s_setShutterSweepMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'uint32'};fcnNum=fcnNum+1;
%  _Bool FliOcam2s_setShutterPulseWidth_V2 ( FliContext context , unsigned int ns ); 
fcns.thunkname{fcnNum}='_BoolvoidPtruint32Thunk';fcns.name{fcnNum}='FliOcam2s_setShutterPulseWidth_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'uint32'};fcnNum=fcnNum+1;
%  _Bool FliOcam2s_setShutterBlanking_V2 ( FliContext context , unsigned int ns ); 
fcns.thunkname{fcnNum}='_BoolvoidPtruint32Thunk';fcns.name{fcnNum}='FliOcam2s_setShutterBlanking_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'uint32'};fcnNum=fcnNum+1;
%  _Bool FliOcam2s_setShutterPulsePosition_V2 ( FliContext context , unsigned int ns ); 
fcns.thunkname{fcnNum}='_BoolvoidPtruint32Thunk';fcns.name{fcnNum}='FliOcam2s_setShutterPulsePosition_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'uint32'};fcnNum=fcnNum+1;
%  _Bool FliOcam2s_setShutterStep_V2 ( FliContext context , unsigned int ns ); 
fcns.thunkname{fcnNum}='_BoolvoidPtruint32Thunk';fcns.name{fcnNum}='FliOcam2s_setShutterStep_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'uint32'};fcnNum=fcnNum+1;
%  _Bool FliOcam2s_setShutterEnd_V2 ( FliContext context , unsigned int ns ); 
fcns.thunkname{fcnNum}='_BoolvoidPtruint32Thunk';fcns.name{fcnNum}='FliOcam2s_setShutterEnd_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'uint32'};fcnNum=fcnNum+1;
%  _Bool FliOcam2s_setShutterPulseCount_V2 ( FliContext context , unsigned int count ); 
fcns.thunkname{fcnNum}='_BoolvoidPtruint32Thunk';fcns.name{fcnNum}='FliOcam2s_setShutterPulseCount_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'uint32'};fcnNum=fcnNum+1;
%  _Bool FliOcam2s_enableShutterBlockOnRead_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliOcam2s_enableShutterBlockOnRead_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliOcam2s_enableShutterCorrectGlitch_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliOcam2s_enableShutterCorrectGlitch_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliOcam2s_sendShutterBias_V2 ( FliContext context , const char * file ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliOcam2s_sendShutterBias_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliOcam2s_getShutterState_V2 ( FliContext context , Shutter_C * state ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliOcam2s_getShutterState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'Shutter_CPtr'};fcnNum=fcnNum+1;
%  _Bool FliGenicamCamera_getStringFeature_V2 ( FliContext context , const char * featureName , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringcstringuint64Thunk';fcns.name{fcnNum}='FliGenicamCamera_getStringFeature_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliGenicamCamera_setStringFeature_V2 ( FliContext context , const char * featureName , const char * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringcstringThunk';fcns.name{fcnNum}='FliGenicamCamera_setStringFeature_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliGenicamCamera_getDoubleFeature_V2 ( FliContext context , const char * featureName , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringvoidPtrThunk';fcns.name{fcnNum}='FliGenicamCamera_getDoubleFeature_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliGenicamCamera_setDoubleFeature_V2 ( FliContext context , const char * featureName , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringdoubleThunk';fcns.name{fcnNum}='FliGenicamCamera_setDoubleFeature_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'double'};fcnNum=fcnNum+1;
%  _Bool FliGenicamCamera_getIntegerFeature_V2 ( FliContext context , const char * featureName , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringvoidPtrThunk';fcns.name{fcnNum}='FliGenicamCamera_getIntegerFeature_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliGenicamCamera_setIntegerFeature_V2 ( FliContext context , const char * featureName , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringint64Thunk';fcns.name{fcnNum}='FliGenicamCamera_setIntegerFeature_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliGenicamCamera_getBooleanFeature_V2 ( FliContext context , const char * featureName , _Bool * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringvoidPtrThunk';fcns.name{fcnNum}='FliGenicamCamera_getBooleanFeature_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliGenicamCamera_setBooleanFeature_V2 ( FliContext context , const char * featureName , _Bool val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstring_BoolThunk';fcns.name{fcnNum}='FliGenicamCamera_setBooleanFeature_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliGenicamCamera_executeFeature_V2 ( FliContext context , const char * featureName ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliGenicamCamera_executeFeature_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliGenicamCamera_getDoubleMinFeature_V2 ( FliContext context , const char * featureName , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringvoidPtrThunk';fcns.name{fcnNum}='FliGenicamCamera_getDoubleMinFeature_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliGenicamCamera_getDoubleMaxFeature_V2 ( FliContext context , const char * featureName , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringvoidPtrThunk';fcns.name{fcnNum}='FliGenicamCamera_getDoubleMaxFeature_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliGenicamCamera_getIntegerMinFeature_V2 ( FliContext context , const char * featureName , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringvoidPtrThunk';fcns.name{fcnNum}='FliGenicamCamera_getIntegerMinFeature_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliGenicamCamera_getIntegerMaxFeature_V2 ( FliContext context , const char * featureName , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringvoidPtrThunk';fcns.name{fcnNum}='FliGenicamCamera_getIntegerMaxFeature_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliGenicamCamera_getIntegerIncrementFeature_V2 ( FliContext context , const char * featureName , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringvoidPtrThunk';fcns.name{fcnNum}='FliGenicamCamera_getIntegerIncrementFeature_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliGenicamCamera_getDoubleIncrementFeature_V2 ( FliContext context , const char * featureName , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringvoidPtrThunk';fcns.name{fcnNum}='FliGenicamCamera_getDoubleIncrementFeature_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliGenicamCamera_getPollingInterval_V2 ( FliContext context , const char * featureName , int64_t * interval ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringvoidPtrThunk';fcns.name{fcnNum}='FliGenicamCamera_getPollingInterval_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliGenicamCamera_getAccessMode_V2 ( FliContext context , const char * featureName , AccessModeEnum * mode ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringvoidPtrThunk';fcns.name{fcnNum}='FliGenicamCamera_getAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliGenicamCamera_getVisibility_V2 ( FliContext context , const char * featureName , VisibilityEnum * visibility ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringvoidPtrThunk';fcns.name{fcnNum}='FliGenicamCamera_getVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliGenicamCamera_setRawData_V2 ( FliContext context , const char * featureName , const unsigned char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringvoidPtruint64Thunk';fcns.name{fcnNum}='FliGenicamCamera_setRawData_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint8Ptr', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliGenicamCamera_getRawData_V2 ( FliContext context , const char * featureName , unsigned char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringvoidPtruint64Thunk';fcns.name{fcnNum}='FliGenicamCamera_getRawData_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint8Ptr', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceType_V2 ( FliContext context , DeviceTypeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceType_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'DeviceTypeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceType_V2 ( FliContext context , DeviceTypeEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrDeviceTypeEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceType_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'DeviceTypeEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTypeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTypeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTypeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTypeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTypeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTypeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTypeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTypeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTypeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTypeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceScanType_V2 ( FliContext context , DeviceScanTypeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceScanType_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'DeviceScanTypeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceScanType_V2 ( FliContext context , DeviceScanTypeEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrDeviceScanTypeEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceScanType_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'DeviceScanTypeEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceScanTypeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceScanTypeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceScanTypeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceScanTypeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceScanTypeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceScanTypeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceScanTypeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceScanTypeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceScanTypeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceScanTypeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceVendorName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceVendorName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceVendorName_V2 ( FliContext context , const char * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceVendorName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceVendorNameVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceVendorNameVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceVendorNameAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceVendorNameAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceVendorNameTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceVendorNameTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceVendorNameDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceVendorNameDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceVendorNameDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceVendorNameDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceModelName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceModelName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceModelName_V2 ( FliContext context , const char * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceModelName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceModelNameVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceModelNameVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceModelNameAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceModelNameAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceModelNameTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceModelNameTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceModelNameDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceModelNameDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceModelNameDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceModelNameDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceFamilyName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceFamilyName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceFamilyName_V2 ( FliContext context , const char * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceFamilyName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceFamilyNameVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceFamilyNameVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceFamilyNameAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceFamilyNameAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceFamilyNameTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceFamilyNameTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceFamilyNameDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceFamilyNameDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceFamilyNameDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceFamilyNameDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManufacturerInfo_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManufacturerInfo_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceManufacturerInfo_V2 ( FliContext context , const char * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceManufacturerInfo_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManufacturerInfoVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManufacturerInfoVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManufacturerInfoAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManufacturerInfoAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManufacturerInfoTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManufacturerInfoTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManufacturerInfoDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManufacturerInfoDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManufacturerInfoDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManufacturerInfoDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceVersion_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceVersion_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceVersion_V2 ( FliContext context , const char * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceVersion_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceVersionVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceVersionVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceVersionAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceVersionAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceVersionTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceVersionTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceVersionDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceVersionDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceVersionDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceVersionDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceFirmwareVersion_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceFirmwareVersion_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceFirmwareVersion_V2 ( FliContext context , const char * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceFirmwareVersion_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceFirmwareVersionVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceFirmwareVersionVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceFirmwareVersionAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceFirmwareVersionAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceFirmwareVersionTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceFirmwareVersionTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceFirmwareVersionDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceFirmwareVersionDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceFirmwareVersionDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceFirmwareVersionDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceSerialNumber_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceSerialNumber_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceSerialNumber_V2 ( FliContext context , const char * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceSerialNumber_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceSerialNumberVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceSerialNumberVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceSerialNumberAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceSerialNumberAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceSerialNumberTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceSerialNumberTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceSerialNumberDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceSerialNumberDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceSerialNumberDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceSerialNumberDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceUserID_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceUserID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceUserID_V2 ( FliContext context , const char * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceUserID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceUserIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceUserIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceUserIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceUserIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceUserIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceUserIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceUserIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceUserIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceUserIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceUserIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceSFNCVersionMajor_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceSFNCVersionMajor_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceSFNCVersionMajor_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceSFNCVersionMajor_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceSFNCVersionMajorMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceSFNCVersionMajorMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceSFNCVersionMajorMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceSFNCVersionMajorMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceSFNCVersionMajorUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceSFNCVersionMajorUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceSFNCVersionMajorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceSFNCVersionMajorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceSFNCVersionMajorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceSFNCVersionMajorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceSFNCVersionMajorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceSFNCVersionMajorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceSFNCVersionMajorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceSFNCVersionMajorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceSFNCVersionMajorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceSFNCVersionMajorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceSFNCVersionMinor_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceSFNCVersionMinor_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceSFNCVersionMinor_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceSFNCVersionMinor_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceSFNCVersionMinorMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceSFNCVersionMinorMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceSFNCVersionMinorMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceSFNCVersionMinorMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceSFNCVersionMinorUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceSFNCVersionMinorUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceSFNCVersionMinorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceSFNCVersionMinorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceSFNCVersionMinorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceSFNCVersionMinorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceSFNCVersionMinorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceSFNCVersionMinorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceSFNCVersionMinorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceSFNCVersionMinorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceSFNCVersionMinorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceSFNCVersionMinorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceSFNCVersionSubMinor_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceSFNCVersionSubMinor_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceSFNCVersionSubMinor_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceSFNCVersionSubMinor_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceSFNCVersionSubMinorMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceSFNCVersionSubMinorMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceSFNCVersionSubMinorMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceSFNCVersionSubMinorMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceSFNCVersionSubMinorUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceSFNCVersionSubMinorUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceSFNCVersionSubMinorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceSFNCVersionSubMinorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceSFNCVersionSubMinorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceSFNCVersionSubMinorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceSFNCVersionSubMinorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceSFNCVersionSubMinorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceSFNCVersionSubMinorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceSFNCVersionSubMinorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceSFNCVersionSubMinorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceSFNCVersionSubMinorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestEntrySelector_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestEntrySelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceManifestEntrySelector_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceManifestEntrySelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestEntrySelectorMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestEntrySelectorMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestEntrySelectorMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestEntrySelectorMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestEntrySelectorUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestEntrySelectorUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestEntrySelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestEntrySelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestEntrySelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestEntrySelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestEntrySelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestEntrySelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestEntrySelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestEntrySelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestEntrySelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestEntrySelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestXMLMajorVersion_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestXMLMajorVersion_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceManifestXMLMajorVersion_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceManifestXMLMajorVersion_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestXMLMajorVersionMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestXMLMajorVersionMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestXMLMajorVersionMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestXMLMajorVersionMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestXMLMajorVersionUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestXMLMajorVersionUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestXMLMajorVersionVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestXMLMajorVersionVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestXMLMajorVersionAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestXMLMajorVersionAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestXMLMajorVersionTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestXMLMajorVersionTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestXMLMajorVersionDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestXMLMajorVersionDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestXMLMajorVersionDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestXMLMajorVersionDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestXMLMinorVersion_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestXMLMinorVersion_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceManifestXMLMinorVersion_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceManifestXMLMinorVersion_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestXMLMinorVersionMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestXMLMinorVersionMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestXMLMinorVersionMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestXMLMinorVersionMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestXMLMinorVersionUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestXMLMinorVersionUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestXMLMinorVersionVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestXMLMinorVersionVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestXMLMinorVersionAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestXMLMinorVersionAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestXMLMinorVersionTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestXMLMinorVersionTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestXMLMinorVersionDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestXMLMinorVersionDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestXMLMinorVersionDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestXMLMinorVersionDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestXMLSubMinorVersion_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestXMLSubMinorVersion_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceManifestXMLSubMinorVersion_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceManifestXMLSubMinorVersion_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestXMLSubMinorVersionMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestXMLSubMinorVersionMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestXMLSubMinorVersionMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestXMLSubMinorVersionMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestXMLSubMinorVersionUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestXMLSubMinorVersionUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestXMLSubMinorVersionVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestXMLSubMinorVersionVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestXMLSubMinorVersionAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestXMLSubMinorVersionAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestXMLSubMinorVersionTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestXMLSubMinorVersionTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestXMLSubMinorVersionDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestXMLSubMinorVersionDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestXMLSubMinorVersionDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestXMLSubMinorVersionDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestSchemaMajorVersion_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestSchemaMajorVersion_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceManifestSchemaMajorVersion_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceManifestSchemaMajorVersion_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestSchemaMajorVersionMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestSchemaMajorVersionMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestSchemaMajorVersionMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestSchemaMajorVersionMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestSchemaMajorVersionUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestSchemaMajorVersionUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestSchemaMajorVersionVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestSchemaMajorVersionVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestSchemaMajorVersionAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestSchemaMajorVersionAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestSchemaMajorVersionTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestSchemaMajorVersionTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestSchemaMajorVersionDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestSchemaMajorVersionDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestSchemaMajorVersionDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestSchemaMajorVersionDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestSchemaMinorVersion_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestSchemaMinorVersion_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceManifestSchemaMinorVersion_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceManifestSchemaMinorVersion_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestSchemaMinorVersionMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestSchemaMinorVersionMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestSchemaMinorVersionMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestSchemaMinorVersionMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestSchemaMinorVersionUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestSchemaMinorVersionUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestSchemaMinorVersionVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestSchemaMinorVersionVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestSchemaMinorVersionAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestSchemaMinorVersionAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestSchemaMinorVersionTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestSchemaMinorVersionTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestSchemaMinorVersionDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestSchemaMinorVersionDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestSchemaMinorVersionDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestSchemaMinorVersionDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestPrimaryURL_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestPrimaryURL_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceManifestPrimaryURL_V2 ( FliContext context , const char * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceManifestPrimaryURL_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestPrimaryURLVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestPrimaryURLVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestPrimaryURLAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestPrimaryURLAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestPrimaryURLTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestPrimaryURLTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestPrimaryURLDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestPrimaryURLDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestPrimaryURLDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestPrimaryURLDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestSecondaryURL_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestSecondaryURL_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceManifestSecondaryURL_V2 ( FliContext context , const char * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceManifestSecondaryURL_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestSecondaryURLVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestSecondaryURLVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestSecondaryURLAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestSecondaryURLAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestSecondaryURLTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestSecondaryURLTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestSecondaryURLDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestSecondaryURLDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceManifestSecondaryURLDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceManifestSecondaryURLDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTLType_V2 ( FliContext context , DeviceTLTypeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTLType_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'DeviceTLTypeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceTLType_V2 ( FliContext context , DeviceTLTypeEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrDeviceTLTypeEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceTLType_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'DeviceTLTypeEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTLTypeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTLTypeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTLTypeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTLTypeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTLTypeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTLTypeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTLTypeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTLTypeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTLTypeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTLTypeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTLVersionMajor_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTLVersionMajor_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceTLVersionMajor_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceTLVersionMajor_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTLVersionMajorMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTLVersionMajorMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTLVersionMajorMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTLVersionMajorMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTLVersionMajorUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTLVersionMajorUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTLVersionMajorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTLVersionMajorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTLVersionMajorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTLVersionMajorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTLVersionMajorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTLVersionMajorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTLVersionMajorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTLVersionMajorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTLVersionMajorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTLVersionMajorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTLVersionMinor_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTLVersionMinor_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceTLVersionMinor_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceTLVersionMinor_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTLVersionMinorMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTLVersionMinorMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTLVersionMinorMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTLVersionMinorMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTLVersionMinorUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTLVersionMinorUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTLVersionMinorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTLVersionMinorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTLVersionMinorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTLVersionMinorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTLVersionMinorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTLVersionMinorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTLVersionMinorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTLVersionMinorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTLVersionMinorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTLVersionMinorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTLVersionSubMinor_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTLVersionSubMinor_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceTLVersionSubMinor_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceTLVersionSubMinor_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTLVersionSubMinorMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTLVersionSubMinorMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTLVersionSubMinorMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTLVersionSubMinorMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTLVersionSubMinorUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTLVersionSubMinorUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTLVersionSubMinorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTLVersionSubMinorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTLVersionSubMinorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTLVersionSubMinorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTLVersionSubMinorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTLVersionSubMinorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTLVersionSubMinorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTLVersionSubMinorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTLVersionSubMinorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTLVersionSubMinorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceGenCPVersionMajor_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceGenCPVersionMajor_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceGenCPVersionMajor_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceGenCPVersionMajor_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceGenCPVersionMajorMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceGenCPVersionMajorMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceGenCPVersionMajorMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceGenCPVersionMajorMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceGenCPVersionMajorUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceGenCPVersionMajorUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceGenCPVersionMajorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceGenCPVersionMajorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceGenCPVersionMajorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceGenCPVersionMajorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceGenCPVersionMajorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceGenCPVersionMajorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceGenCPVersionMajorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceGenCPVersionMajorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceGenCPVersionMajorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceGenCPVersionMajorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceGenCPVersionMinor_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceGenCPVersionMinor_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceGenCPVersionMinor_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceGenCPVersionMinor_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceGenCPVersionMinorMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceGenCPVersionMinorMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceGenCPVersionMinorMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceGenCPVersionMinorMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceGenCPVersionMinorUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceGenCPVersionMinorUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceGenCPVersionMinorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceGenCPVersionMinorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceGenCPVersionMinorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceGenCPVersionMinorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceGenCPVersionMinorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceGenCPVersionMinorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceGenCPVersionMinorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceGenCPVersionMinorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceGenCPVersionMinorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceGenCPVersionMinorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceMaxThroughput_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceMaxThroughput_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceMaxThroughput_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceMaxThroughput_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceMaxThroughputMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceMaxThroughputMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceMaxThroughputMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceMaxThroughputMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceMaxThroughputUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceMaxThroughputUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceMaxThroughputVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceMaxThroughputVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceMaxThroughputAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceMaxThroughputAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceMaxThroughputTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceMaxThroughputTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceMaxThroughputDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceMaxThroughputDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceMaxThroughputDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceMaxThroughputDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceConnectionSelector_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceConnectionSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceConnectionSelector_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceConnectionSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceConnectionSelectorMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceConnectionSelectorMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceConnectionSelectorMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceConnectionSelectorMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceConnectionSelectorUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceConnectionSelectorUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceConnectionSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceConnectionSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceConnectionSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceConnectionSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceConnectionSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceConnectionSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceConnectionSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceConnectionSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceConnectionSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceConnectionSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceConnectionSpeed_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceConnectionSpeed_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceConnectionSpeed_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceConnectionSpeed_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceConnectionSpeedMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceConnectionSpeedMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceConnectionSpeedMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceConnectionSpeedMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceConnectionSpeedUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceConnectionSpeedUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceConnectionSpeedVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceConnectionSpeedVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceConnectionSpeedAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceConnectionSpeedAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceConnectionSpeedTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceConnectionSpeedTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceConnectionSpeedDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceConnectionSpeedDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceConnectionSpeedDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceConnectionSpeedDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceConnectionStatus_V2 ( FliContext context , DeviceConnectionStatusEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceConnectionStatus_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'DeviceConnectionStatusEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceConnectionStatus_V2 ( FliContext context , DeviceConnectionStatusEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrDeviceConnectionStatusEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceConnectionStatus_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'DeviceConnectionStatusEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceConnectionStatusVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceConnectionStatusVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceConnectionStatusAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceConnectionStatusAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceConnectionStatusTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceConnectionStatusTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceConnectionStatusDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceConnectionStatusDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceConnectionStatusDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceConnectionStatusDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkSelector_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceLinkSelector_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceLinkSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkSelectorMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkSelectorMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkSelectorMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkSelectorMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkSelectorUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkSelectorUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkSpeed_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkSpeed_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceLinkSpeed_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceLinkSpeed_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkSpeedMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkSpeedMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkSpeedMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkSpeedMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkSpeedUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkSpeedUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkSpeedVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkSpeedVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkSpeedAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkSpeedAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkSpeedTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkSpeedTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkSpeedDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkSpeedDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkSpeedDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkSpeedDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkThroughputLimitMode_V2 ( FliContext context , DeviceLinkThroughputLimitModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkThroughputLimitMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'DeviceLinkThroughputLimitModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceLinkThroughputLimitMode_V2 ( FliContext context , DeviceLinkThroughputLimitModeEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrDeviceLinkThroughputLimitModeEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceLinkThroughputLimitMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'DeviceLinkThroughputLimitModeEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkThroughputLimitModeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkThroughputLimitModeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkThroughputLimitModeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkThroughputLimitModeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkThroughputLimitModeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkThroughputLimitModeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkThroughputLimitModeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkThroughputLimitModeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkThroughputLimitModeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkThroughputLimitModeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkThroughputLimit_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkThroughputLimit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceLinkThroughputLimit_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceLinkThroughputLimit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkThroughputLimitMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkThroughputLimitMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkThroughputLimitMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkThroughputLimitMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkThroughputLimitUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkThroughputLimitUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkThroughputLimitVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkThroughputLimitVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkThroughputLimitAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkThroughputLimitAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkThroughputLimitTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkThroughputLimitTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkThroughputLimitDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkThroughputLimitDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkThroughputLimitDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkThroughputLimitDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkConnectionCount_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkConnectionCount_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceLinkConnectionCount_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceLinkConnectionCount_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkConnectionCountMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkConnectionCountMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkConnectionCountMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkConnectionCountMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkConnectionCountUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkConnectionCountUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkConnectionCountVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkConnectionCountVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkConnectionCountAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkConnectionCountAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkConnectionCountTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkConnectionCountTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkConnectionCountDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkConnectionCountDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkConnectionCountDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkConnectionCountDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkHeartbeatMode_V2 ( FliContext context , DeviceLinkHeartbeatModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkHeartbeatMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'DeviceLinkHeartbeatModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceLinkHeartbeatMode_V2 ( FliContext context , DeviceLinkHeartbeatModeEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrDeviceLinkHeartbeatModeEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceLinkHeartbeatMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'DeviceLinkHeartbeatModeEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkHeartbeatModeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkHeartbeatModeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkHeartbeatModeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkHeartbeatModeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkHeartbeatModeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkHeartbeatModeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkHeartbeatModeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkHeartbeatModeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkHeartbeatModeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkHeartbeatModeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkHeartbeatTimeout_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkHeartbeatTimeout_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceLinkHeartbeatTimeout_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceLinkHeartbeatTimeout_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkHeartbeatTimeoutMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkHeartbeatTimeoutMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkHeartbeatTimeoutMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkHeartbeatTimeoutMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkHeartbeatTimeoutUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkHeartbeatTimeoutUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkHeartbeatTimeoutVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkHeartbeatTimeoutVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkHeartbeatTimeoutAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkHeartbeatTimeoutAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkHeartbeatTimeoutTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkHeartbeatTimeoutTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkHeartbeatTimeoutDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkHeartbeatTimeoutDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkHeartbeatTimeoutDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkHeartbeatTimeoutDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkCommandTimeout_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkCommandTimeout_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceLinkCommandTimeout_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceLinkCommandTimeout_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkCommandTimeoutMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkCommandTimeoutMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkCommandTimeoutMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkCommandTimeoutMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkCommandTimeoutUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkCommandTimeoutUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkCommandTimeoutVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkCommandTimeoutVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkCommandTimeoutAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkCommandTimeoutAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkCommandTimeoutTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkCommandTimeoutTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkCommandTimeoutDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkCommandTimeoutDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceLinkCommandTimeoutDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceLinkCommandTimeoutDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceStreamChannelCount_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceStreamChannelCount_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceStreamChannelCount_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceStreamChannelCount_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceStreamChannelCountMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceStreamChannelCountMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceStreamChannelCountMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceStreamChannelCountMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceStreamChannelCountUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceStreamChannelCountUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceStreamChannelCountVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceStreamChannelCountVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceStreamChannelCountAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceStreamChannelCountAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceStreamChannelCountTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceStreamChannelCountTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceStreamChannelCountDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceStreamChannelCountDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceStreamChannelCountDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceStreamChannelCountDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceStreamChannelSelector_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceStreamChannelSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceStreamChannelSelector_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceStreamChannelSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceStreamChannelSelectorMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceStreamChannelSelectorMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceStreamChannelSelectorMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceStreamChannelSelectorMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceStreamChannelSelectorUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceStreamChannelSelectorUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceStreamChannelSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceStreamChannelSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceStreamChannelSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceStreamChannelSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceStreamChannelSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceStreamChannelSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceStreamChannelSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceStreamChannelSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceStreamChannelSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceStreamChannelSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceStreamChannelType_V2 ( FliContext context , DeviceStreamChannelTypeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceStreamChannelType_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'DeviceStreamChannelTypeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceStreamChannelType_V2 ( FliContext context , DeviceStreamChannelTypeEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrDeviceStreamChannelTypeEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceStreamChannelType_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'DeviceStreamChannelTypeEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceStreamChannelTypeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceStreamChannelTypeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceStreamChannelTypeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceStreamChannelTypeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceStreamChannelTypeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceStreamChannelTypeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceStreamChannelTypeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceStreamChannelTypeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceStreamChannelTypeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceStreamChannelTypeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceStreamChannelLink_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceStreamChannelLink_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceStreamChannelLink_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceStreamChannelLink_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceStreamChannelLinkMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceStreamChannelLinkMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceStreamChannelLinkMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceStreamChannelLinkMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceStreamChannelLinkUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceStreamChannelLinkUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceStreamChannelLinkVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceStreamChannelLinkVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceStreamChannelLinkAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceStreamChannelLinkAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceStreamChannelLinkTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceStreamChannelLinkTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceStreamChannelLinkDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceStreamChannelLinkDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceStreamChannelLinkDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceStreamChannelLinkDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceStreamChannelEndianness_V2 ( FliContext context , DeviceStreamChannelEndiannessEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceStreamChannelEndianness_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'DeviceStreamChannelEndiannessEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceStreamChannelEndianness_V2 ( FliContext context , DeviceStreamChannelEndiannessEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrDeviceStreamChannelEndiannessEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceStreamChannelEndianness_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'DeviceStreamChannelEndiannessEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceStreamChannelEndiannessVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceStreamChannelEndiannessVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceStreamChannelEndiannessAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceStreamChannelEndiannessAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceStreamChannelEndiannessTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceStreamChannelEndiannessTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceStreamChannelEndiannessDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceStreamChannelEndiannessDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceStreamChannelEndiannessDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceStreamChannelEndiannessDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceStreamChannelPacketSize_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceStreamChannelPacketSize_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceStreamChannelPacketSize_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceStreamChannelPacketSize_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceStreamChannelPacketSizeMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceStreamChannelPacketSizeMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceStreamChannelPacketSizeMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceStreamChannelPacketSizeMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceStreamChannelPacketSizeUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceStreamChannelPacketSizeUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceStreamChannelPacketSizeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceStreamChannelPacketSizeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceStreamChannelPacketSizeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceStreamChannelPacketSizeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceStreamChannelPacketSizeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceStreamChannelPacketSizeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceStreamChannelPacketSizeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceStreamChannelPacketSizeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceStreamChannelPacketSizeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceStreamChannelPacketSizeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceEventChannelCount_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceEventChannelCount_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceEventChannelCount_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceEventChannelCount_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceEventChannelCountMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceEventChannelCountMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceEventChannelCountMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceEventChannelCountMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceEventChannelCountUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceEventChannelCountUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceEventChannelCountVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceEventChannelCountVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceEventChannelCountAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceEventChannelCountAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceEventChannelCountTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceEventChannelCountTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceEventChannelCountDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceEventChannelCountDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceEventChannelCountDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceEventChannelCountDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceCharacterSet_V2 ( FliContext context , DeviceCharacterSetEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceCharacterSet_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'DeviceCharacterSetEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceCharacterSet_V2 ( FliContext context , DeviceCharacterSetEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrDeviceCharacterSetEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceCharacterSet_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'DeviceCharacterSetEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceCharacterSetVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceCharacterSetVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceCharacterSetAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceCharacterSetAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceCharacterSetTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceCharacterSetTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceCharacterSetDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceCharacterSetDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceCharacterSetDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceCharacterSetDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_executeDeviceReset_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_executeDeviceReset_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceResetVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceResetVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceResetAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceResetAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceResetTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceResetTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceResetDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceResetDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceResetDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceResetDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceIndicatorMode_V2 ( FliContext context , DeviceIndicatorModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceIndicatorMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'DeviceIndicatorModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceIndicatorMode_V2 ( FliContext context , DeviceIndicatorModeEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrDeviceIndicatorModeEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceIndicatorMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'DeviceIndicatorModeEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceIndicatorModeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceIndicatorModeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceIndicatorModeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceIndicatorModeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceIndicatorModeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceIndicatorModeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceIndicatorModeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceIndicatorModeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceIndicatorModeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceIndicatorModeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_executeDeviceFeaturePersistenceStart_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_executeDeviceFeaturePersistenceStart_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceFeaturePersistenceStartVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceFeaturePersistenceStartVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceFeaturePersistenceStartAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceFeaturePersistenceStartAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceFeaturePersistenceStartTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceFeaturePersistenceStartTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceFeaturePersistenceStartDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceFeaturePersistenceStartDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceFeaturePersistenceStartDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceFeaturePersistenceStartDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_executeDeviceFeaturePersistenceEnd_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_executeDeviceFeaturePersistenceEnd_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceFeaturePersistenceEndVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceFeaturePersistenceEndVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceFeaturePersistenceEndAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceFeaturePersistenceEndAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceFeaturePersistenceEndTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceFeaturePersistenceEndTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceFeaturePersistenceEndDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceFeaturePersistenceEndDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceFeaturePersistenceEndDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceFeaturePersistenceEndDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_executeDeviceRegistersStreamingStart_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_executeDeviceRegistersStreamingStart_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceRegistersStreamingStartVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceRegistersStreamingStartVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceRegistersStreamingStartAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceRegistersStreamingStartAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceRegistersStreamingStartTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceRegistersStreamingStartTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceRegistersStreamingStartDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceRegistersStreamingStartDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceRegistersStreamingStartDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceRegistersStreamingStartDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_executeDeviceRegistersStreamingEnd_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_executeDeviceRegistersStreamingEnd_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceRegistersStreamingEndVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceRegistersStreamingEndVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceRegistersStreamingEndAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceRegistersStreamingEndAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceRegistersStreamingEndTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceRegistersStreamingEndTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceRegistersStreamingEndDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceRegistersStreamingEndDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceRegistersStreamingEndDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceRegistersStreamingEndDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_executeDeviceRegistersCheck_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_executeDeviceRegistersCheck_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceRegistersCheckVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceRegistersCheckVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceRegistersCheckAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceRegistersCheckAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceRegistersCheckTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceRegistersCheckTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceRegistersCheckDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceRegistersCheckDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceRegistersCheckDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceRegistersCheckDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceRegistersValid_V2 ( FliContext context , _Bool * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceRegistersValid_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceRegistersValid_V2 ( FliContext context , _Bool val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceRegistersValid_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceRegistersValidVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceRegistersValidVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceRegistersValidAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceRegistersValidAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceRegistersValidTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceRegistersValidTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceRegistersValidDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceRegistersValidDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceRegistersValidDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceRegistersValidDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceRegistersEndianness_V2 ( FliContext context , DeviceRegistersEndiannessEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceRegistersEndianness_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'DeviceRegistersEndiannessEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceRegistersEndianness_V2 ( FliContext context , DeviceRegistersEndiannessEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrDeviceRegistersEndiannessEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceRegistersEndianness_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'DeviceRegistersEndiannessEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceRegistersEndiannessVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceRegistersEndiannessVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceRegistersEndiannessAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceRegistersEndiannessAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceRegistersEndiannessTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceRegistersEndiannessTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceRegistersEndiannessDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceRegistersEndiannessDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceRegistersEndiannessDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceRegistersEndiannessDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTemperatureSelector_V2 ( FliContext context , DeviceTemperatureSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTemperatureSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'DeviceTemperatureSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceTemperatureSelector_V2 ( FliContext context , DeviceTemperatureSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrDeviceTemperatureSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceTemperatureSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'DeviceTemperatureSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTemperatureSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTemperatureSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTemperatureSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTemperatureSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTemperatureSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTemperatureSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTemperatureSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTemperatureSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTemperatureSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTemperatureSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTemperature_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTemperature_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceTemperature_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceTemperature_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTemperatureMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTemperatureMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTemperatureMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTemperatureMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTemperatureUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTemperatureUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTemperatureVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTemperatureVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTemperatureAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTemperatureAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTemperatureTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTemperatureTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTemperatureDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTemperatureDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTemperatureDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTemperatureDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceClockSelector_V2 ( FliContext context , DeviceClockSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceClockSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'DeviceClockSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceClockSelector_V2 ( FliContext context , DeviceClockSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrDeviceClockSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceClockSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'DeviceClockSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceClockSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceClockSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceClockSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceClockSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceClockSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceClockSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceClockSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceClockSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceClockSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceClockSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceClockFrequency_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceClockFrequency_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceClockFrequency_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceClockFrequency_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceClockFrequencyMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceClockFrequencyMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceClockFrequencyMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceClockFrequencyMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceClockFrequencyUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceClockFrequencyUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceClockFrequencyVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceClockFrequencyVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceClockFrequencyAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceClockFrequencyAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceClockFrequencyTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceClockFrequencyTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceClockFrequencyDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceClockFrequencyDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceClockFrequencyDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceClockFrequencyDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceSerialPortSelector_V2 ( FliContext context , DeviceSerialPortSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceSerialPortSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'DeviceSerialPortSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceSerialPortSelector_V2 ( FliContext context , DeviceSerialPortSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrDeviceSerialPortSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceSerialPortSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'DeviceSerialPortSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceSerialPortSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceSerialPortSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceSerialPortSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceSerialPortSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceSerialPortSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceSerialPortSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceSerialPortSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceSerialPortSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceSerialPortSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceSerialPortSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceSerialPortBaudRate_V2 ( FliContext context , DeviceSerialPortBaudRateEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceSerialPortBaudRate_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'DeviceSerialPortBaudRateEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceSerialPortBaudRate_V2 ( FliContext context , DeviceSerialPortBaudRateEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrDeviceSerialPortBaudRateEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceSerialPortBaudRate_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'DeviceSerialPortBaudRateEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceSerialPortBaudRateVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceSerialPortBaudRateVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceSerialPortBaudRateAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceSerialPortBaudRateAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceSerialPortBaudRateTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceSerialPortBaudRateTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceSerialPortBaudRateDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceSerialPortBaudRateDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceSerialPortBaudRateDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceSerialPortBaudRateDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_executeTimestampReset_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_executeTimestampReset_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimestampResetVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTimestampResetVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimestampResetAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTimestampResetAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimestampResetTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTimestampResetTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimestampResetDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTimestampResetDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimestampResetDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTimestampResetDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_executeTimestampLatch_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_executeTimestampLatch_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimestampLatchVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTimestampLatchVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimestampLatchAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTimestampLatchAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimestampLatchTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTimestampLatchTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimestampLatchDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTimestampLatchDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimestampLatchDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTimestampLatchDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimestampLatchValue_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTimestampLatchValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setTimestampLatchValue_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setTimestampLatchValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimestampLatchValueMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTimestampLatchValueMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimestampLatchValueMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTimestampLatchValueMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimestampLatchValueUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTimestampLatchValueUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimestampLatchValueVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTimestampLatchValueVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimestampLatchValueAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTimestampLatchValueAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimestampLatchValueTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTimestampLatchValueTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimestampLatchValueDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTimestampLatchValueDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimestampLatchValueDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTimestampLatchValueDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserSetDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getUserSetDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setUserSetDescription_V2 ( FliContext context , const char * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliSfncCamera_setUserSetDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserSetDescriptionVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getUserSetDescriptionVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserSetDescriptionAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getUserSetDescriptionAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserSetDescriptionTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getUserSetDescriptionTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserSetDescriptionDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getUserSetDescriptionDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserSetDescriptionDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getUserSetDescriptionDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorWidth_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSensorWidth_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setSensorWidth_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setSensorWidth_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorWidthMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSensorWidthMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorWidthMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSensorWidthMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorWidthUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSensorWidthUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorWidthVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSensorWidthVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorWidthAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSensorWidthAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorWidthTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSensorWidthTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorWidthDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSensorWidthDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorWidthDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSensorWidthDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorHeight_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSensorHeight_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setSensorHeight_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setSensorHeight_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorHeightMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSensorHeightMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorHeightMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSensorHeightMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorHeightUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSensorHeightUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorHeightVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSensorHeightVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorHeightAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSensorHeightAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorHeightTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSensorHeightTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorHeightDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSensorHeightDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorHeightDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSensorHeightDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorPixelWidth_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSensorPixelWidth_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setSensorPixelWidth_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setSensorPixelWidth_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorPixelWidthMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSensorPixelWidthMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorPixelWidthMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSensorPixelWidthMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorPixelWidthUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSensorPixelWidthUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorPixelWidthVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSensorPixelWidthVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorPixelWidthAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSensorPixelWidthAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorPixelWidthTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSensorPixelWidthTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorPixelWidthDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSensorPixelWidthDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorPixelWidthDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSensorPixelWidthDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorPixelHeight_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSensorPixelHeight_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setSensorPixelHeight_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setSensorPixelHeight_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorPixelHeightMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSensorPixelHeightMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorPixelHeightMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSensorPixelHeightMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorPixelHeightUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSensorPixelHeightUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorPixelHeightVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSensorPixelHeightVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorPixelHeightAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSensorPixelHeightAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorPixelHeightTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSensorPixelHeightTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorPixelHeightDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSensorPixelHeightDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorPixelHeightDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSensorPixelHeightDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSensorName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setSensorName_V2 ( FliContext context , const char * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliSfncCamera_setSensorName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorNameVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSensorNameVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorNameAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSensorNameAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorNameTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSensorNameTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorNameDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSensorNameDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorNameDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSensorNameDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorShutterMode_V2 ( FliContext context , SensorShutterModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSensorShutterMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'SensorShutterModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setSensorShutterMode_V2 ( FliContext context , SensorShutterModeEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrSensorShutterModeEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setSensorShutterMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'SensorShutterModeEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorShutterModeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSensorShutterModeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorShutterModeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSensorShutterModeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorShutterModeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSensorShutterModeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorShutterModeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSensorShutterModeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorShutterModeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSensorShutterModeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorTaps_V2 ( FliContext context , SensorTapsEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSensorTaps_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'SensorTapsEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setSensorTaps_V2 ( FliContext context , SensorTapsEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrSensorTapsEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setSensorTaps_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'SensorTapsEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorTapsVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSensorTapsVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorTapsAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSensorTapsAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorTapsTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSensorTapsTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorTapsDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSensorTapsDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorTapsDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSensorTapsDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorDigitizationTaps_V2 ( FliContext context , SensorDigitizationTapsEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSensorDigitizationTaps_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'SensorDigitizationTapsEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setSensorDigitizationTaps_V2 ( FliContext context , SensorDigitizationTapsEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrSensorDigitizationTapsEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setSensorDigitizationTaps_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'SensorDigitizationTapsEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorDigitizationTapsVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSensorDigitizationTapsVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorDigitizationTapsAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSensorDigitizationTapsAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorDigitizationTapsTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSensorDigitizationTapsTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorDigitizationTapsDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSensorDigitizationTapsDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSensorDigitizationTapsDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSensorDigitizationTapsDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getWidthMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getWidthMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setWidthMax_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setWidthMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getWidthMaxMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getWidthMaxMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getWidthMaxMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getWidthMaxMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getWidthMaxUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getWidthMaxUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getWidthMaxVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getWidthMaxVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getWidthMaxAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getWidthMaxAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getWidthMaxTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getWidthMaxTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getWidthMaxDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getWidthMaxDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getWidthMaxDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getWidthMaxDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getHeightMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getHeightMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setHeightMax_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setHeightMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getHeightMaxMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getHeightMaxMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getHeightMaxMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getHeightMaxMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getHeightMaxUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getHeightMaxUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getHeightMaxVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getHeightMaxVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getHeightMaxAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getHeightMaxAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getHeightMaxTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getHeightMaxTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getHeightMaxDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getHeightMaxDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getHeightMaxDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getHeightMaxDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getRegionSelector_V2 ( FliContext context , RegionSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getRegionSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'RegionSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setRegionSelector_V2 ( FliContext context , RegionSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrRegionSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setRegionSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'RegionSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getRegionSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getRegionSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getRegionSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getRegionSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getRegionSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getRegionSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getRegionSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getRegionSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getRegionSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getRegionSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getRegionMode_V2 ( FliContext context , RegionModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getRegionMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'RegionModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setRegionMode_V2 ( FliContext context , RegionModeEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrRegionModeEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setRegionMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'RegionModeEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getRegionModeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getRegionModeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getRegionModeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getRegionModeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getRegionModeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getRegionModeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getRegionModeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getRegionModeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getRegionModeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getRegionModeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getRegionDestination_V2 ( FliContext context , RegionDestinationEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getRegionDestination_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'RegionDestinationEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setRegionDestination_V2 ( FliContext context , RegionDestinationEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrRegionDestinationEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setRegionDestination_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'RegionDestinationEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getRegionDestinationVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getRegionDestinationVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getRegionDestinationAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getRegionDestinationAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getRegionDestinationTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getRegionDestinationTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getRegionDestinationDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getRegionDestinationDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getRegionDestinationDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getRegionDestinationDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getRegionIDValue_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getRegionIDValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setRegionIDValue_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setRegionIDValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getRegionIDValueMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getRegionIDValueMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getRegionIDValueMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getRegionIDValueMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getRegionIDValueUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getRegionIDValueUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getRegionIDValueVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getRegionIDValueVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getRegionIDValueAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getRegionIDValueAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getRegionIDValueTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getRegionIDValueTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getRegionIDValueDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getRegionIDValueDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getRegionIDValueDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getRegionIDValueDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getComponentSelector_V2 ( FliContext context , ComponentSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getComponentSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ComponentSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setComponentSelector_V2 ( FliContext context , ComponentSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrComponentSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setComponentSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ComponentSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getComponentSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getComponentSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getComponentSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getComponentSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getComponentSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getComponentSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getComponentSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getComponentSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getComponentSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getComponentSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getComponentEnable_V2 ( FliContext context , _Bool * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getComponentEnable_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setComponentEnable_V2 ( FliContext context , _Bool val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliSfncCamera_setComponentEnable_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getComponentEnableVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getComponentEnableVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getComponentEnableAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getComponentEnableAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getComponentEnableTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getComponentEnableTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getComponentEnableDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getComponentEnableDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getComponentEnableDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getComponentEnableDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getComponentIDValue_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getComponentIDValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setComponentIDValue_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setComponentIDValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getComponentIDValueMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getComponentIDValueMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getComponentIDValueMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getComponentIDValueMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getComponentIDValueUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getComponentIDValueUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getComponentIDValueVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getComponentIDValueVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getComponentIDValueAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getComponentIDValueAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getComponentIDValueTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getComponentIDValueTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getComponentIDValueDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getComponentIDValueDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getComponentIDValueDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getComponentIDValueDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGroupSelector_V2 ( FliContext context , GroupSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGroupSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'GroupSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGroupSelector_V2 ( FliContext context , GroupSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrGroupSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setGroupSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'GroupSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGroupSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGroupSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGroupSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGroupSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGroupSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGroupSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGroupSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGroupSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGroupSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGroupSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGroupIDValue_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGroupIDValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGroupIDValue_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setGroupIDValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGroupIDValueMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGroupIDValueMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGroupIDValueMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGroupIDValueMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGroupIDValueUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGroupIDValueUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGroupIDValueVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGroupIDValueVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGroupIDValueAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGroupIDValueAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGroupIDValueTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGroupIDValueTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGroupIDValueDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGroupIDValueDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGroupIDValueDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGroupIDValueDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getWidth_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getWidth_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setWidth_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setWidth_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getWidthMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getWidthMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getWidthUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getWidthUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getWidthVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getWidthVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getWidthAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getWidthAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getWidthTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getWidthTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getWidthDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getWidthDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getWidthDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getWidthDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getHeight_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getHeight_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setHeight_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setHeight_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getHeightMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getHeightMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getHeightUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getHeightUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getHeightVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getHeightVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getHeightAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getHeightAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getHeightTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getHeightTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getHeightDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getHeightDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getHeightDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getHeightDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getOffsetX_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getOffsetX_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setOffsetX_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setOffsetX_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getOffsetXMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getOffsetXMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getOffsetXMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getOffsetXMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getOffsetXUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getOffsetXUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getOffsetXVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getOffsetXVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getOffsetXAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getOffsetXAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getOffsetXTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getOffsetXTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getOffsetXDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getOffsetXDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getOffsetXDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getOffsetXDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getOffsetY_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getOffsetY_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setOffsetY_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setOffsetY_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getOffsetYMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getOffsetYMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getOffsetYMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getOffsetYMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getOffsetYUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getOffsetYUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getOffsetYVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getOffsetYVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getOffsetYAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getOffsetYAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getOffsetYTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getOffsetYTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getOffsetYDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getOffsetYDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getOffsetYDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getOffsetYDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLinePitchEnable_V2 ( FliContext context , _Bool * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLinePitchEnable_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setLinePitchEnable_V2 ( FliContext context , _Bool val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliSfncCamera_setLinePitchEnable_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLinePitchEnableVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLinePitchEnableVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLinePitchEnableAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLinePitchEnableAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLinePitchEnableTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLinePitchEnableTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLinePitchEnableDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLinePitchEnableDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLinePitchEnableDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLinePitchEnableDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLinePitch_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLinePitch_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setLinePitch_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setLinePitch_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLinePitchMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLinePitchMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLinePitchMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLinePitchMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLinePitchUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLinePitchUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLinePitchVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLinePitchVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLinePitchAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLinePitchAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLinePitchTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLinePitchTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLinePitchDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLinePitchDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLinePitchDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLinePitchDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBinningSelector_V2 ( FliContext context , BinningSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getBinningSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'BinningSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setBinningSelector_V2 ( FliContext context , BinningSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrBinningSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setBinningSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'BinningSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBinningSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getBinningSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBinningSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getBinningSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBinningSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getBinningSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBinningSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getBinningSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBinningSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getBinningSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBinningHorizontalMode_V2 ( FliContext context , BinningHorizontalModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getBinningHorizontalMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'BinningHorizontalModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setBinningHorizontalMode_V2 ( FliContext context , BinningHorizontalModeEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrBinningHorizontalModeEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setBinningHorizontalMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'BinningHorizontalModeEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBinningHorizontalModeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getBinningHorizontalModeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBinningHorizontalModeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getBinningHorizontalModeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBinningHorizontalModeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getBinningHorizontalModeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBinningHorizontalModeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getBinningHorizontalModeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBinningHorizontalModeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getBinningHorizontalModeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBinningHorizontal_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getBinningHorizontal_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setBinningHorizontal_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setBinningHorizontal_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBinningHorizontalMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getBinningHorizontalMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBinningHorizontalMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getBinningHorizontalMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBinningHorizontalUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getBinningHorizontalUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBinningHorizontalVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getBinningHorizontalVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBinningHorizontalAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getBinningHorizontalAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBinningHorizontalTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getBinningHorizontalTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBinningHorizontalDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getBinningHorizontalDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBinningHorizontalDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getBinningHorizontalDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBinningVerticalMode_V2 ( FliContext context , BinningVerticalModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getBinningVerticalMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'BinningVerticalModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setBinningVerticalMode_V2 ( FliContext context , BinningVerticalModeEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrBinningVerticalModeEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setBinningVerticalMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'BinningVerticalModeEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBinningVerticalModeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getBinningVerticalModeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBinningVerticalModeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getBinningVerticalModeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBinningVerticalModeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getBinningVerticalModeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBinningVerticalModeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getBinningVerticalModeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBinningVerticalModeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getBinningVerticalModeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBinningVertical_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getBinningVertical_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setBinningVertical_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setBinningVertical_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBinningVerticalMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getBinningVerticalMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBinningVerticalMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getBinningVerticalMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBinningVerticalUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getBinningVerticalUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBinningVerticalVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getBinningVerticalVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBinningVerticalAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getBinningVerticalAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBinningVerticalTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getBinningVerticalTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBinningVerticalDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getBinningVerticalDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBinningVerticalDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getBinningVerticalDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDecimationHorizontalMode_V2 ( FliContext context , DecimationHorizontalModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDecimationHorizontalMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'DecimationHorizontalModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDecimationHorizontalMode_V2 ( FliContext context , DecimationHorizontalModeEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrDecimationHorizontalModeEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setDecimationHorizontalMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'DecimationHorizontalModeEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDecimationHorizontalModeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDecimationHorizontalModeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDecimationHorizontalModeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDecimationHorizontalModeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDecimationHorizontalModeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDecimationHorizontalModeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDecimationHorizontalModeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDecimationHorizontalModeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDecimationHorizontalModeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDecimationHorizontalModeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDecimationHorizontal_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDecimationHorizontal_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDecimationHorizontal_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setDecimationHorizontal_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDecimationHorizontalMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDecimationHorizontalMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDecimationHorizontalMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDecimationHorizontalMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDecimationHorizontalUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDecimationHorizontalUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDecimationHorizontalVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDecimationHorizontalVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDecimationHorizontalAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDecimationHorizontalAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDecimationHorizontalTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDecimationHorizontalTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDecimationHorizontalDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDecimationHorizontalDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDecimationHorizontalDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDecimationHorizontalDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDecimationVerticalMode_V2 ( FliContext context , DecimationVerticalModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDecimationVerticalMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'DecimationVerticalModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDecimationVerticalMode_V2 ( FliContext context , DecimationVerticalModeEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrDecimationVerticalModeEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setDecimationVerticalMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'DecimationVerticalModeEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDecimationVerticalModeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDecimationVerticalModeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDecimationVerticalModeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDecimationVerticalModeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDecimationVerticalModeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDecimationVerticalModeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDecimationVerticalModeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDecimationVerticalModeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDecimationVerticalModeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDecimationVerticalModeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDecimationVertical_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDecimationVertical_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDecimationVertical_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setDecimationVertical_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDecimationVerticalMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDecimationVerticalMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDecimationVerticalMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDecimationVerticalMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDecimationVerticalUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDecimationVerticalUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDecimationVerticalVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDecimationVerticalVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDecimationVerticalAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDecimationVerticalAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDecimationVerticalTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDecimationVerticalTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDecimationVerticalDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDecimationVerticalDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDecimationVerticalDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDecimationVerticalDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getReverseX_V2 ( FliContext context , _Bool * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getReverseX_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setReverseX_V2 ( FliContext context , _Bool val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliSfncCamera_setReverseX_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getReverseXVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getReverseXVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getReverseXAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getReverseXAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getReverseXTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getReverseXTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getReverseXDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getReverseXDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getReverseXDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getReverseXDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getReverseY_V2 ( FliContext context , _Bool * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getReverseY_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setReverseY_V2 ( FliContext context , _Bool val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliSfncCamera_setReverseY_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getReverseYVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getReverseYVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getReverseYAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getReverseYAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getReverseYTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getReverseYTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getReverseYDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getReverseYDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getReverseYDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getReverseYDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPixelFormat_V2 ( FliContext context , PixelFormatEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPixelFormat_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'PixelFormatEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setPixelFormat_V2 ( FliContext context , PixelFormatEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrPixelFormatEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setPixelFormat_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'PixelFormatEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPixelFormatVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPixelFormatVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPixelFormatAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPixelFormatAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPixelFormatTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPixelFormatTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPixelFormatDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPixelFormatDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPixelFormatDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPixelFormatDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPixelFormatInfoSelector_V2 ( FliContext context , PixelFormatInfoSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPixelFormatInfoSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'PixelFormatInfoSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setPixelFormatInfoSelector_V2 ( FliContext context , PixelFormatInfoSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrPixelFormatInfoSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setPixelFormatInfoSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'PixelFormatInfoSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPixelFormatInfoSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPixelFormatInfoSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPixelFormatInfoSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPixelFormatInfoSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPixelFormatInfoSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPixelFormatInfoSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPixelFormatInfoSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPixelFormatInfoSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPixelFormatInfoSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPixelFormatInfoSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPixelFormatInfoID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPixelFormatInfoID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setPixelFormatInfoID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setPixelFormatInfoID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPixelFormatInfoIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPixelFormatInfoIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPixelFormatInfoIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPixelFormatInfoIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPixelFormatInfoIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPixelFormatInfoIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPixelFormatInfoIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPixelFormatInfoIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPixelFormatInfoIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPixelFormatInfoIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPixelFormatInfoIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPixelFormatInfoIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPixelFormatInfoIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPixelFormatInfoIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPixelFormatInfoIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPixelFormatInfoIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPixelSize_V2 ( FliContext context , PixelSizeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPixelSize_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'PixelSizeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setPixelSize_V2 ( FliContext context , PixelSizeEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrPixelSizeEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setPixelSize_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'PixelSizeEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPixelSizeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPixelSizeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPixelSizeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPixelSizeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPixelSizeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPixelSizeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPixelSizeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPixelSizeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPixelSizeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPixelSizeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPixelColorFilter_V2 ( FliContext context , PixelColorFilterEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPixelColorFilter_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'PixelColorFilterEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setPixelColorFilter_V2 ( FliContext context , PixelColorFilterEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrPixelColorFilterEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setPixelColorFilter_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'PixelColorFilterEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPixelColorFilterVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPixelColorFilterVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPixelColorFilterAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPixelColorFilterAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPixelColorFilterTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPixelColorFilterTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPixelColorFilterDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPixelColorFilterDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPixelColorFilterDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPixelColorFilterDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPixelDynamicRangeMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPixelDynamicRangeMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setPixelDynamicRangeMin_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setPixelDynamicRangeMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPixelDynamicRangeMinMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPixelDynamicRangeMinMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPixelDynamicRangeMinMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPixelDynamicRangeMinMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPixelDynamicRangeMinUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPixelDynamicRangeMinUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPixelDynamicRangeMinVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPixelDynamicRangeMinVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPixelDynamicRangeMinAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPixelDynamicRangeMinAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPixelDynamicRangeMinTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPixelDynamicRangeMinTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPixelDynamicRangeMinDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPixelDynamicRangeMinDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPixelDynamicRangeMinDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPixelDynamicRangeMinDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPixelDynamicRangeMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPixelDynamicRangeMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setPixelDynamicRangeMax_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setPixelDynamicRangeMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPixelDynamicRangeMaxMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPixelDynamicRangeMaxMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPixelDynamicRangeMaxMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPixelDynamicRangeMaxMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPixelDynamicRangeMaxUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPixelDynamicRangeMaxUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPixelDynamicRangeMaxVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPixelDynamicRangeMaxVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPixelDynamicRangeMaxAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPixelDynamicRangeMaxAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPixelDynamicRangeMaxTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPixelDynamicRangeMaxTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPixelDynamicRangeMaxDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPixelDynamicRangeMaxDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPixelDynamicRangeMaxDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPixelDynamicRangeMaxDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTestPatternGeneratorSelector_V2 ( FliContext context , TestPatternGeneratorSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTestPatternGeneratorSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'TestPatternGeneratorSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setTestPatternGeneratorSelector_V2 ( FliContext context , TestPatternGeneratorSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrTestPatternGeneratorSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setTestPatternGeneratorSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'TestPatternGeneratorSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTestPatternGeneratorSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTestPatternGeneratorSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTestPatternGeneratorSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTestPatternGeneratorSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTestPatternGeneratorSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTestPatternGeneratorSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTestPatternGeneratorSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTestPatternGeneratorSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTestPatternGeneratorSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTestPatternGeneratorSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTestPattern_V2 ( FliContext context , TestPatternEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTestPattern_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'TestPatternEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setTestPattern_V2 ( FliContext context , TestPatternEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrTestPatternEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setTestPattern_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'TestPatternEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTestPatternVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTestPatternVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTestPatternAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTestPatternAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTestPatternTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTestPatternTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTestPatternDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTestPatternDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTestPatternDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTestPatternDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeinterlacing_V2 ( FliContext context , DeinterlacingEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeinterlacing_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'DeinterlacingEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeinterlacing_V2 ( FliContext context , DeinterlacingEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrDeinterlacingEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setDeinterlacing_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'DeinterlacingEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeinterlacingVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeinterlacingVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeinterlacingAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeinterlacingAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeinterlacingTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeinterlacingTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeinterlacingDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeinterlacingDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeinterlacingDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeinterlacingDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getImageCompressionMode_V2 ( FliContext context , ImageCompressionModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getImageCompressionMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ImageCompressionModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setImageCompressionMode_V2 ( FliContext context , ImageCompressionModeEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrImageCompressionModeEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setImageCompressionMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ImageCompressionModeEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getImageCompressionModeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getImageCompressionModeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getImageCompressionModeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getImageCompressionModeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getImageCompressionModeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getImageCompressionModeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getImageCompressionModeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getImageCompressionModeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getImageCompressionModeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getImageCompressionModeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getImageCompressionRateOption_V2 ( FliContext context , ImageCompressionRateOptionEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getImageCompressionRateOption_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ImageCompressionRateOptionEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setImageCompressionRateOption_V2 ( FliContext context , ImageCompressionRateOptionEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrImageCompressionRateOptionEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setImageCompressionRateOption_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ImageCompressionRateOptionEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getImageCompressionRateOptionVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getImageCompressionRateOptionVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getImageCompressionRateOptionAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getImageCompressionRateOptionAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getImageCompressionRateOptionTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getImageCompressionRateOptionTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getImageCompressionRateOptionDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getImageCompressionRateOptionDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getImageCompressionRateOptionDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getImageCompressionRateOptionDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getImageCompressionQuality_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getImageCompressionQuality_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setImageCompressionQuality_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setImageCompressionQuality_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getImageCompressionQualityMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getImageCompressionQualityMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getImageCompressionQualityMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getImageCompressionQualityMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getImageCompressionQualityUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getImageCompressionQualityUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getImageCompressionQualityVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getImageCompressionQualityVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getImageCompressionQualityAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getImageCompressionQualityAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getImageCompressionQualityTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getImageCompressionQualityTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getImageCompressionQualityDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getImageCompressionQualityDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getImageCompressionQualityDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getImageCompressionQualityDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getImageCompressionBitrate_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getImageCompressionBitrate_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setImageCompressionBitrate_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setImageCompressionBitrate_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getImageCompressionBitrateMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getImageCompressionBitrateMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getImageCompressionBitrateMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getImageCompressionBitrateMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getImageCompressionBitrateUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getImageCompressionBitrateUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getImageCompressionBitrateVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getImageCompressionBitrateVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getImageCompressionBitrateAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getImageCompressionBitrateAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getImageCompressionBitrateTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getImageCompressionBitrateTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getImageCompressionBitrateDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getImageCompressionBitrateDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getImageCompressionBitrateDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getImageCompressionBitrateDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getImageCompressionJPEGFormatOption_V2 ( FliContext context , ImageCompressionJPEGFormatOptionEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getImageCompressionJPEGFormatOption_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ImageCompressionJPEGFormatOptionEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setImageCompressionJPEGFormatOption_V2 ( FliContext context , ImageCompressionJPEGFormatOptionEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrImageCompressionJPEGFormatOptionEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setImageCompressionJPEGFormatOption_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ImageCompressionJPEGFormatOptionEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getImageCompressionJPEGFormatOptionVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getImageCompressionJPEGFormatOptionVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getImageCompressionJPEGFormatOptionAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getImageCompressionJPEGFormatOptionAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getImageCompressionJPEGFormatOptionTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getImageCompressionJPEGFormatOptionTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getImageCompressionJPEGFormatOptionDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getImageCompressionJPEGFormatOptionDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getImageCompressionJPEGFormatOptionDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getImageCompressionJPEGFormatOptionDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionMode_V2 ( FliContext context , AcquisitionModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AcquisitionModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setAcquisitionMode_V2 ( FliContext context , AcquisitionModeEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrAcquisitionModeEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setAcquisitionMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AcquisitionModeEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionModeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionModeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionModeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionModeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionModeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionModeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionModeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionModeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionModeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionModeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_executeAcquisitionStart_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_executeAcquisitionStart_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionStartVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionStartVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionStartAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionStartAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionStartTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionStartTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionStartDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionStartDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionStartDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionStartDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_executeAcquisitionStop_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_executeAcquisitionStop_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionStopVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionStopVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionStopAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionStopAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionStopTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionStopTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionStopDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionStopDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionStopDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionStopDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionStopMode_V2 ( FliContext context , AcquisitionStopModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionStopMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AcquisitionStopModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setAcquisitionStopMode_V2 ( FliContext context , AcquisitionStopModeEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrAcquisitionStopModeEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setAcquisitionStopMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AcquisitionStopModeEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionStopModeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionStopModeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionStopModeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionStopModeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionStopModeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionStopModeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionStopModeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionStopModeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionStopModeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionStopModeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_executeAcquisitionAbort_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_executeAcquisitionAbort_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionAbortVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionAbortVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionAbortAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionAbortAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionAbortTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionAbortTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionAbortDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionAbortDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionAbortDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionAbortDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_executeAcquisitionArm_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_executeAcquisitionArm_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionArmVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionArmVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionArmAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionArmAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionArmTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionArmTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionArmDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionArmDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionArmDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionArmDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionFrameCount_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionFrameCount_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setAcquisitionFrameCount_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setAcquisitionFrameCount_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionFrameCountMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionFrameCountMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionFrameCountMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionFrameCountMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionFrameCountUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionFrameCountUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionFrameCountVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionFrameCountVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionFrameCountAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionFrameCountAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionFrameCountTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionFrameCountTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionFrameCountDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionFrameCountDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionFrameCountDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionFrameCountDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionBurstFrameCount_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionBurstFrameCount_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setAcquisitionBurstFrameCount_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setAcquisitionBurstFrameCount_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionBurstFrameCountMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionBurstFrameCountMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionBurstFrameCountMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionBurstFrameCountMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionBurstFrameCountUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionBurstFrameCountUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionBurstFrameCountVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionBurstFrameCountVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionBurstFrameCountAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionBurstFrameCountAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionBurstFrameCountTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionBurstFrameCountTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionBurstFrameCountDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionBurstFrameCountDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionBurstFrameCountDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionBurstFrameCountDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionFrameRate_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionFrameRate_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setAcquisitionFrameRate_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setAcquisitionFrameRate_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionFrameRateMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionFrameRateMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionFrameRateMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionFrameRateMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionFrameRateUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionFrameRateUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionFrameRateVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionFrameRateVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionFrameRateAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionFrameRateAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionFrameRateTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionFrameRateTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionFrameRateDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionFrameRateDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionFrameRateDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionFrameRateDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionFrameRateEnable_V2 ( FliContext context , _Bool * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionFrameRateEnable_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setAcquisitionFrameRateEnable_V2 ( FliContext context , _Bool val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliSfncCamera_setAcquisitionFrameRateEnable_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionFrameRateEnableVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionFrameRateEnableVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionFrameRateEnableAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionFrameRateEnableAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionFrameRateEnableTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionFrameRateEnableTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionFrameRateEnableDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionFrameRateEnableDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionFrameRateEnableDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionFrameRateEnableDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionLineRate_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionLineRate_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setAcquisitionLineRate_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setAcquisitionLineRate_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionLineRateMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionLineRateMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionLineRateMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionLineRateMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionLineRateUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionLineRateUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionLineRateVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionLineRateVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionLineRateAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionLineRateAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionLineRateTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionLineRateTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionLineRateDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionLineRateDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionLineRateDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionLineRateDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionLineRateEnable_V2 ( FliContext context , _Bool * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionLineRateEnable_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setAcquisitionLineRateEnable_V2 ( FliContext context , _Bool val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliSfncCamera_setAcquisitionLineRateEnable_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionLineRateEnableVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionLineRateEnableVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionLineRateEnableAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionLineRateEnableAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionLineRateEnableTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionLineRateEnableTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionLineRateEnableDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionLineRateEnableDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionLineRateEnableDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionLineRateEnableDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionStatusSelector_V2 ( FliContext context , AcquisitionStatusSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionStatusSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AcquisitionStatusSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setAcquisitionStatusSelector_V2 ( FliContext context , AcquisitionStatusSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrAcquisitionStatusSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setAcquisitionStatusSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AcquisitionStatusSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionStatusSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionStatusSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionStatusSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionStatusSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionStatusSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionStatusSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionStatusSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionStatusSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionStatusSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionStatusSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionStatus_V2 ( FliContext context , _Bool * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionStatus_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setAcquisitionStatus_V2 ( FliContext context , _Bool val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliSfncCamera_setAcquisitionStatus_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionStatusVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionStatusVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionStatusAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionStatusAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionStatusTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionStatusTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionStatusDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionStatusDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getAcquisitionStatusDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getAcquisitionStatusDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerSelector_V2 ( FliContext context , TriggerSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'TriggerSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setTriggerSelector_V2 ( FliContext context , TriggerSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrTriggerSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setTriggerSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'TriggerSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerMode_V2 ( FliContext context , TriggerModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'TriggerModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setTriggerMode_V2 ( FliContext context , TriggerModeEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrTriggerModeEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setTriggerMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'TriggerModeEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerModeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerModeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerModeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerModeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerModeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerModeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerModeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerModeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerModeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerModeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_executeTriggerSoftware_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_executeTriggerSoftware_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerSoftwareVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerSoftwareVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerSoftwareAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerSoftwareAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerSoftwareTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerSoftwareTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerSoftwareDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerSoftwareDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerSoftwareDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerSoftwareDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerSource_V2 ( FliContext context , TriggerSourceEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerSource_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'TriggerSourceEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setTriggerSource_V2 ( FliContext context , TriggerSourceEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrTriggerSourceEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setTriggerSource_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'TriggerSourceEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerSourceVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerSourceVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerSourceAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerSourceAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerSourceTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerSourceTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerSourceDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerSourceDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerSourceDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerSourceDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerActivation_V2 ( FliContext context , TriggerActivationEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerActivation_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'TriggerActivationEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setTriggerActivation_V2 ( FliContext context , TriggerActivationEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrTriggerActivationEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setTriggerActivation_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'TriggerActivationEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerActivationVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerActivationVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerActivationAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerActivationAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerActivationTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerActivationTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerActivationDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerActivationDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerActivationDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerActivationDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerOverlap_V2 ( FliContext context , TriggerOverlapEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerOverlap_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'TriggerOverlapEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setTriggerOverlap_V2 ( FliContext context , TriggerOverlapEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrTriggerOverlapEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setTriggerOverlap_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'TriggerOverlapEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerOverlapVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerOverlapVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerOverlapAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerOverlapAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerOverlapTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerOverlapTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerOverlapDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerOverlapDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerOverlapDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerOverlapDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerDelay_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerDelay_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setTriggerDelay_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setTriggerDelay_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerDelayMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerDelayMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerDelayMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerDelayMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerDelayUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerDelayUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerDelayVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerDelayVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerDelayAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerDelayAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerDelayTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerDelayTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerDelayDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerDelayDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerDelayDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerDelayDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerDivider_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerDivider_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setTriggerDivider_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setTriggerDivider_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerDividerMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerDividerMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerDividerMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerDividerMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerDividerUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerDividerUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerDividerVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerDividerVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerDividerAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerDividerAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerDividerTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerDividerTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerDividerDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerDividerDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerDividerDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerDividerDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerMultiplier_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerMultiplier_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setTriggerMultiplier_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setTriggerMultiplier_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerMultiplierMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerMultiplierMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerMultiplierMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerMultiplierMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerMultiplierUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerMultiplierUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerMultiplierVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerMultiplierVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerMultiplierAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerMultiplierAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerMultiplierTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerMultiplierTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerMultiplierDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerMultiplierDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTriggerMultiplierDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTriggerMultiplierDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getExposureMode_V2 ( FliContext context , ExposureModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getExposureMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ExposureModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setExposureMode_V2 ( FliContext context , ExposureModeEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrExposureModeEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setExposureMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ExposureModeEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getExposureModeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getExposureModeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getExposureModeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getExposureModeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getExposureModeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getExposureModeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getExposureModeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getExposureModeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getExposureModeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getExposureModeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getExposureTimeMode_V2 ( FliContext context , ExposureTimeModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getExposureTimeMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ExposureTimeModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setExposureTimeMode_V2 ( FliContext context , ExposureTimeModeEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrExposureTimeModeEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setExposureTimeMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ExposureTimeModeEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getExposureTimeModeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getExposureTimeModeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getExposureTimeModeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getExposureTimeModeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getExposureTimeModeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getExposureTimeModeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getExposureTimeModeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getExposureTimeModeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getExposureTimeModeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getExposureTimeModeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getExposureTimeSelector_V2 ( FliContext context , ExposureTimeSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getExposureTimeSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ExposureTimeSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setExposureTimeSelector_V2 ( FliContext context , ExposureTimeSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrExposureTimeSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setExposureTimeSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ExposureTimeSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getExposureTimeSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getExposureTimeSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getExposureTimeSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getExposureTimeSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getExposureTimeSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getExposureTimeSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getExposureTimeSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getExposureTimeSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getExposureTimeSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getExposureTimeSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getExposureTime_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getExposureTime_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setExposureTime_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setExposureTime_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getExposureTimeMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getExposureTimeMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getExposureTimeMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getExposureTimeMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getExposureTimeUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getExposureTimeUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getExposureTimeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getExposureTimeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getExposureTimeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getExposureTimeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getExposureTimeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getExposureTimeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getExposureTimeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getExposureTimeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getExposureTimeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getExposureTimeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getExposureAuto_V2 ( FliContext context , ExposureAutoEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getExposureAuto_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ExposureAutoEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setExposureAuto_V2 ( FliContext context , ExposureAutoEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrExposureAutoEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setExposureAuto_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ExposureAutoEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getExposureAutoVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getExposureAutoVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getExposureAutoAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getExposureAutoAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getExposureAutoTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getExposureAutoTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getExposureAutoDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getExposureAutoDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getExposureAutoDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getExposureAutoDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeMode_V2 ( FliContext context , MultiSlopeModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'MultiSlopeModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setMultiSlopeMode_V2 ( FliContext context , MultiSlopeModeEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrMultiSlopeModeEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setMultiSlopeMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'MultiSlopeModeEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeModeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeModeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeModeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeModeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeModeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeModeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeModeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeModeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeModeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeModeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeKneePointCount_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeKneePointCount_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setMultiSlopeKneePointCount_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setMultiSlopeKneePointCount_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeKneePointCountMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeKneePointCountMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeKneePointCountMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeKneePointCountMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeKneePointCountUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeKneePointCountUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeKneePointCountVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeKneePointCountVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeKneePointCountAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeKneePointCountAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeKneePointCountTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeKneePointCountTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeKneePointCountDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeKneePointCountDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeKneePointCountDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeKneePointCountDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeKneePointSelector_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeKneePointSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setMultiSlopeKneePointSelector_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setMultiSlopeKneePointSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeKneePointSelectorMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeKneePointSelectorMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeKneePointSelectorMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeKneePointSelectorMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeKneePointSelectorUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeKneePointSelectorUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeKneePointSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeKneePointSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeKneePointSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeKneePointSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeKneePointSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeKneePointSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeKneePointSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeKneePointSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeKneePointSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeKneePointSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeExposureLimit_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeExposureLimit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setMultiSlopeExposureLimit_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setMultiSlopeExposureLimit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeExposureLimitMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeExposureLimitMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeExposureLimitMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeExposureLimitMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeExposureLimitUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeExposureLimitUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeExposureLimitVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeExposureLimitVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeExposureLimitAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeExposureLimitAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeExposureLimitTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeExposureLimitTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeExposureLimitDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeExposureLimitDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeExposureLimitDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeExposureLimitDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeSaturationThreshold_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeSaturationThreshold_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setMultiSlopeSaturationThreshold_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setMultiSlopeSaturationThreshold_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeSaturationThresholdMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeSaturationThresholdMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeSaturationThresholdMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeSaturationThresholdMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeSaturationThresholdUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeSaturationThresholdUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeSaturationThresholdVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeSaturationThresholdVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeSaturationThresholdAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeSaturationThresholdAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeSaturationThresholdTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeSaturationThresholdTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeSaturationThresholdDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeSaturationThresholdDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeSaturationThresholdDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeSaturationThresholdDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeIntensityLimit_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeIntensityLimit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setMultiSlopeIntensityLimit_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setMultiSlopeIntensityLimit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeIntensityLimitMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeIntensityLimitMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeIntensityLimitMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeIntensityLimitMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeIntensityLimitUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeIntensityLimitUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeIntensityLimitVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeIntensityLimitVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeIntensityLimitAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeIntensityLimitAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeIntensityLimitTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeIntensityLimitTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeIntensityLimitDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeIntensityLimitDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeIntensityLimitDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeIntensityLimitDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeExposureGradient_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeExposureGradient_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setMultiSlopeExposureGradient_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setMultiSlopeExposureGradient_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeExposureGradientMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeExposureGradientMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeExposureGradientMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeExposureGradientMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeExposureGradientUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeExposureGradientUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeExposureGradientVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeExposureGradientVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeExposureGradientAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeExposureGradientAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeExposureGradientTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeExposureGradientTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeExposureGradientDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeExposureGradientDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getMultiSlopeExposureGradientDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getMultiSlopeExposureGradientDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpFirstLineTriggerWithFrameStart_V2 ( FliContext context , _Bool * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpFirstLineTriggerWithFrameStart_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setCxpFirstLineTriggerWithFrameStart_V2 ( FliContext context , _Bool val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliSfncCamera_setCxpFirstLineTriggerWithFrameStart_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpFirstLineTriggerWithFrameStartVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpFirstLineTriggerWithFrameStartVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpFirstLineTriggerWithFrameStartAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpFirstLineTriggerWithFrameStartAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpFirstLineTriggerWithFrameStartTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpFirstLineTriggerWithFrameStartTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpFirstLineTriggerWithFrameStartDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpFirstLineTriggerWithFrameStartDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpFirstLineTriggerWithFrameStartDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpFirstLineTriggerWithFrameStartDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGainSelector_V2 ( FliContext context , GainSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGainSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'GainSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGainSelector_V2 ( FliContext context , GainSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrGainSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setGainSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'GainSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGainSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGainSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGainSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGainSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGainSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGainSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGainSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGainSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGainSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGainSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGain_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGain_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGain_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setGain_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGainMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGainMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGainMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGainMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGainUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGainUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGainVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGainVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGainAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGainAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGainTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGainTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGainDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGainDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGainDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGainDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGainAuto_V2 ( FliContext context , GainAutoEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGainAuto_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'GainAutoEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGainAuto_V2 ( FliContext context , GainAutoEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrGainAutoEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setGainAuto_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'GainAutoEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGainAutoVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGainAutoVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGainAutoAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGainAutoAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGainAutoTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGainAutoTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGainAutoDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGainAutoDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGainAutoDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGainAutoDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGainAutoBalance_V2 ( FliContext context , GainAutoBalanceEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGainAutoBalance_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'GainAutoBalanceEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGainAutoBalance_V2 ( FliContext context , GainAutoBalanceEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrGainAutoBalanceEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setGainAutoBalance_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'GainAutoBalanceEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGainAutoBalanceVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGainAutoBalanceVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGainAutoBalanceAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGainAutoBalanceAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGainAutoBalanceTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGainAutoBalanceTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGainAutoBalanceDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGainAutoBalanceDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGainAutoBalanceDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGainAutoBalanceDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBlackLevelSelector_V2 ( FliContext context , BlackLevelSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getBlackLevelSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'BlackLevelSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setBlackLevelSelector_V2 ( FliContext context , BlackLevelSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrBlackLevelSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setBlackLevelSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'BlackLevelSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBlackLevelSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getBlackLevelSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBlackLevelSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getBlackLevelSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBlackLevelSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getBlackLevelSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBlackLevelSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getBlackLevelSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBlackLevelSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getBlackLevelSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBlackLevel_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getBlackLevel_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setBlackLevel_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setBlackLevel_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBlackLevelMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getBlackLevelMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBlackLevelMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getBlackLevelMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBlackLevelUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getBlackLevelUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBlackLevelVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getBlackLevelVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBlackLevelAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getBlackLevelAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBlackLevelTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getBlackLevelTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBlackLevelDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getBlackLevelDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBlackLevelDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getBlackLevelDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBlackLevelAuto_V2 ( FliContext context , BlackLevelAutoEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getBlackLevelAuto_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'BlackLevelAutoEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setBlackLevelAuto_V2 ( FliContext context , BlackLevelAutoEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrBlackLevelAutoEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setBlackLevelAuto_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'BlackLevelAutoEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBlackLevelAutoVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getBlackLevelAutoVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBlackLevelAutoAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getBlackLevelAutoAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBlackLevelAutoTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getBlackLevelAutoTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBlackLevelAutoDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getBlackLevelAutoDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBlackLevelAutoDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getBlackLevelAutoDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBlackLevelAutoBalance_V2 ( FliContext context , BlackLevelAutoBalanceEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getBlackLevelAutoBalance_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'BlackLevelAutoBalanceEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setBlackLevelAutoBalance_V2 ( FliContext context , BlackLevelAutoBalanceEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrBlackLevelAutoBalanceEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setBlackLevelAutoBalance_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'BlackLevelAutoBalanceEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBlackLevelAutoBalanceVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getBlackLevelAutoBalanceVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBlackLevelAutoBalanceAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getBlackLevelAutoBalanceAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBlackLevelAutoBalanceTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getBlackLevelAutoBalanceTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBlackLevelAutoBalanceDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getBlackLevelAutoBalanceDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBlackLevelAutoBalanceDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getBlackLevelAutoBalanceDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getWhiteClipSelector_V2 ( FliContext context , WhiteClipSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getWhiteClipSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'WhiteClipSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setWhiteClipSelector_V2 ( FliContext context , WhiteClipSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrWhiteClipSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setWhiteClipSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'WhiteClipSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getWhiteClipSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getWhiteClipSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getWhiteClipSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getWhiteClipSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getWhiteClipSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getWhiteClipSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getWhiteClipSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getWhiteClipSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getWhiteClipSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getWhiteClipSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getWhiteClip_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getWhiteClip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setWhiteClip_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setWhiteClip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getWhiteClipMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getWhiteClipMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getWhiteClipMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getWhiteClipMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getWhiteClipUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getWhiteClipUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getWhiteClipVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getWhiteClipVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getWhiteClipAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getWhiteClipAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getWhiteClipTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getWhiteClipTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getWhiteClipDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getWhiteClipDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getWhiteClipDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getWhiteClipDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBalanceRatioSelector_V2 ( FliContext context , BalanceRatioSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getBalanceRatioSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'BalanceRatioSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setBalanceRatioSelector_V2 ( FliContext context , BalanceRatioSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrBalanceRatioSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setBalanceRatioSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'BalanceRatioSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBalanceRatioSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getBalanceRatioSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBalanceRatioSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getBalanceRatioSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBalanceRatioSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getBalanceRatioSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBalanceRatioSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getBalanceRatioSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBalanceRatioSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getBalanceRatioSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBalanceRatio_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getBalanceRatio_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setBalanceRatio_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setBalanceRatio_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBalanceRatioMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getBalanceRatioMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBalanceRatioMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getBalanceRatioMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBalanceRatioUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getBalanceRatioUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBalanceRatioVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getBalanceRatioVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBalanceRatioAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getBalanceRatioAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBalanceRatioTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getBalanceRatioTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBalanceRatioDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getBalanceRatioDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBalanceRatioDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getBalanceRatioDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBalanceWhiteAuto_V2 ( FliContext context , BalanceWhiteAutoEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getBalanceWhiteAuto_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'BalanceWhiteAutoEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setBalanceWhiteAuto_V2 ( FliContext context , BalanceWhiteAutoEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrBalanceWhiteAutoEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setBalanceWhiteAuto_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'BalanceWhiteAutoEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBalanceWhiteAutoVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getBalanceWhiteAutoVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBalanceWhiteAutoAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getBalanceWhiteAutoAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBalanceWhiteAutoTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getBalanceWhiteAutoTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBalanceWhiteAutoDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getBalanceWhiteAutoDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getBalanceWhiteAutoDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getBalanceWhiteAutoDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGamma_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGamma_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGamma_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setGamma_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGammaMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGammaMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGammaMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGammaMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGammaUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGammaUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGammaVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGammaVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGammaAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGammaAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGammaTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGammaTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGammaDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGammaDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGammaDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGammaDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLUTSelector_V2 ( FliContext context , LUTSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLUTSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'LUTSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setLUTSelector_V2 ( FliContext context , LUTSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrLUTSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setLUTSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'LUTSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLUTSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLUTSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLUTSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLUTSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLUTSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLUTSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLUTSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLUTSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLUTSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLUTSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLUTEnable_V2 ( FliContext context , _Bool * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLUTEnable_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setLUTEnable_V2 ( FliContext context , _Bool val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliSfncCamera_setLUTEnable_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLUTEnableVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLUTEnableVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLUTEnableAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLUTEnableAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLUTEnableTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLUTEnableTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLUTEnableDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLUTEnableDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLUTEnableDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLUTEnableDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLUTIndex_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLUTIndex_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setLUTIndex_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setLUTIndex_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLUTIndexMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLUTIndexMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLUTIndexMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLUTIndexMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLUTIndexUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLUTIndexUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLUTIndexVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLUTIndexVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLUTIndexAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLUTIndexAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLUTIndexTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLUTIndexTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLUTIndexDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLUTIndexDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLUTIndexDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLUTIndexDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLUTValue_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLUTValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setLUTValue_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setLUTValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLUTValueMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLUTValueMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLUTValueMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLUTValueMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLUTValueUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLUTValueUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLUTValueVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLUTValueVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLUTValueAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLUTValueAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLUTValueTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLUTValueTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLUTValueDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLUTValueDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLUTValueDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLUTValueDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getColorTransformationSelector_V2 ( FliContext context , ColorTransformationSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getColorTransformationSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ColorTransformationSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setColorTransformationSelector_V2 ( FliContext context , ColorTransformationSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrColorTransformationSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setColorTransformationSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ColorTransformationSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getColorTransformationSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getColorTransformationSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getColorTransformationSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getColorTransformationSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getColorTransformationSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getColorTransformationSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getColorTransformationSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getColorTransformationSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getColorTransformationSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getColorTransformationSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getColorTransformationEnable_V2 ( FliContext context , _Bool * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getColorTransformationEnable_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setColorTransformationEnable_V2 ( FliContext context , _Bool val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliSfncCamera_setColorTransformationEnable_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getColorTransformationEnableVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getColorTransformationEnableVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getColorTransformationEnableAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getColorTransformationEnableAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getColorTransformationEnableTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getColorTransformationEnableTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getColorTransformationEnableDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getColorTransformationEnableDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getColorTransformationEnableDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getColorTransformationEnableDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getColorTransformationValueSelector_V2 ( FliContext context , ColorTransformationValueSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getColorTransformationValueSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ColorTransformationValueSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setColorTransformationValueSelector_V2 ( FliContext context , ColorTransformationValueSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrColorTransformationValueSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setColorTransformationValueSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ColorTransformationValueSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getColorTransformationValueSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getColorTransformationValueSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getColorTransformationValueSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getColorTransformationValueSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getColorTransformationValueSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getColorTransformationValueSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getColorTransformationValueSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getColorTransformationValueSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getColorTransformationValueSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getColorTransformationValueSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getColorTransformationValue_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getColorTransformationValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setColorTransformationValue_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setColorTransformationValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getColorTransformationValueMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getColorTransformationValueMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getColorTransformationValueMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getColorTransformationValueMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getColorTransformationValueUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getColorTransformationValueUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getColorTransformationValueVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getColorTransformationValueVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getColorTransformationValueAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getColorTransformationValueAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getColorTransformationValueTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getColorTransformationValueTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getColorTransformationValueDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getColorTransformationValueDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getColorTransformationValueDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getColorTransformationValueDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLineSelector_V2 ( FliContext context , LineSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLineSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'LineSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setLineSelector_V2 ( FliContext context , LineSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrLineSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setLineSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'LineSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLineSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLineSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLineSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLineSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLineSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLineSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLineSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLineSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLineSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLineSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLineMode_V2 ( FliContext context , LineModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLineMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'LineModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setLineMode_V2 ( FliContext context , LineModeEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrLineModeEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setLineMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'LineModeEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLineModeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLineModeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLineModeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLineModeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLineModeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLineModeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLineModeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLineModeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLineModeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLineModeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLineInverter_V2 ( FliContext context , _Bool * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLineInverter_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setLineInverter_V2 ( FliContext context , _Bool val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliSfncCamera_setLineInverter_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLineInverterVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLineInverterVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLineInverterAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLineInverterAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLineInverterTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLineInverterTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLineInverterDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLineInverterDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLineInverterDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLineInverterDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLineStatus_V2 ( FliContext context , _Bool * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLineStatus_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setLineStatus_V2 ( FliContext context , _Bool val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliSfncCamera_setLineStatus_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLineStatusVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLineStatusVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLineStatusAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLineStatusAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLineStatusTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLineStatusTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLineStatusDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLineStatusDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLineStatusDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLineStatusDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLineStatusAll_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLineStatusAll_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setLineStatusAll_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setLineStatusAll_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLineStatusAllMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLineStatusAllMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLineStatusAllMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLineStatusAllMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLineStatusAllUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLineStatusAllUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLineStatusAllVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLineStatusAllVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLineStatusAllAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLineStatusAllAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLineStatusAllTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLineStatusAllTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLineStatusAllDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLineStatusAllDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLineStatusAllDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLineStatusAllDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLineSource_V2 ( FliContext context , LineSourceEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLineSource_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'LineSourceEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setLineSource_V2 ( FliContext context , LineSourceEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrLineSourceEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setLineSource_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'LineSourceEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLineSourceVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLineSourceVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLineSourceAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLineSourceAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLineSourceTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLineSourceTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLineSourceDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLineSourceDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLineSourceDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLineSourceDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLineFormat_V2 ( FliContext context , LineFormatEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLineFormat_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'LineFormatEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setLineFormat_V2 ( FliContext context , LineFormatEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrLineFormatEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setLineFormat_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'LineFormatEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLineFormatVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLineFormatVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLineFormatAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLineFormatAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLineFormatTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLineFormatTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLineFormatDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLineFormatDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLineFormatDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLineFormatDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserOutputSelector_V2 ( FliContext context , UserOutputSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getUserOutputSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'UserOutputSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setUserOutputSelector_V2 ( FliContext context , UserOutputSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrUserOutputSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setUserOutputSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'UserOutputSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserOutputSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getUserOutputSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserOutputSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getUserOutputSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserOutputSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getUserOutputSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserOutputSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getUserOutputSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserOutputSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getUserOutputSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserOutputValue_V2 ( FliContext context , _Bool * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getUserOutputValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setUserOutputValue_V2 ( FliContext context , _Bool val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliSfncCamera_setUserOutputValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserOutputValueVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getUserOutputValueVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserOutputValueAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getUserOutputValueAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserOutputValueTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getUserOutputValueTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserOutputValueDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getUserOutputValueDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserOutputValueDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getUserOutputValueDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserOutputValueAll_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getUserOutputValueAll_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setUserOutputValueAll_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setUserOutputValueAll_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserOutputValueAllMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getUserOutputValueAllMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserOutputValueAllMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getUserOutputValueAllMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserOutputValueAllUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getUserOutputValueAllUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserOutputValueAllVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getUserOutputValueAllVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserOutputValueAllAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getUserOutputValueAllAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserOutputValueAllTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getUserOutputValueAllTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserOutputValueAllDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getUserOutputValueAllDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserOutputValueAllDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getUserOutputValueAllDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserOutputValueAllMask_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getUserOutputValueAllMask_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setUserOutputValueAllMask_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setUserOutputValueAllMask_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserOutputValueAllMaskMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getUserOutputValueAllMaskMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserOutputValueAllMaskMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getUserOutputValueAllMaskMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserOutputValueAllMaskUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getUserOutputValueAllMaskUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserOutputValueAllMaskVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getUserOutputValueAllMaskVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserOutputValueAllMaskAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getUserOutputValueAllMaskAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserOutputValueAllMaskTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getUserOutputValueAllMaskTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserOutputValueAllMaskDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getUserOutputValueAllMaskDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserOutputValueAllMaskDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getUserOutputValueAllMaskDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterSelector_V2 ( FliContext context , CounterSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCounterSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'CounterSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setCounterSelector_V2 ( FliContext context , CounterSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrCounterSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setCounterSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'CounterSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCounterSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCounterSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCounterSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCounterSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCounterSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterEventSource_V2 ( FliContext context , CounterEventSourceEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCounterEventSource_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'CounterEventSourceEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setCounterEventSource_V2 ( FliContext context , CounterEventSourceEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrCounterEventSourceEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setCounterEventSource_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'CounterEventSourceEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterEventSourceVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCounterEventSourceVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterEventSourceAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCounterEventSourceAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterEventSourceTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCounterEventSourceTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterEventSourceDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCounterEventSourceDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterEventSourceDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCounterEventSourceDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterEventActivation_V2 ( FliContext context , CounterEventActivationEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCounterEventActivation_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'CounterEventActivationEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setCounterEventActivation_V2 ( FliContext context , CounterEventActivationEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrCounterEventActivationEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setCounterEventActivation_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'CounterEventActivationEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterEventActivationVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCounterEventActivationVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterEventActivationAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCounterEventActivationAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterEventActivationTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCounterEventActivationTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterEventActivationDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCounterEventActivationDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterEventActivationDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCounterEventActivationDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterResetSource_V2 ( FliContext context , CounterResetSourceEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCounterResetSource_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'CounterResetSourceEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setCounterResetSource_V2 ( FliContext context , CounterResetSourceEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrCounterResetSourceEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setCounterResetSource_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'CounterResetSourceEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterResetSourceVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCounterResetSourceVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterResetSourceAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCounterResetSourceAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterResetSourceTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCounterResetSourceTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterResetSourceDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCounterResetSourceDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterResetSourceDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCounterResetSourceDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterResetActivation_V2 ( FliContext context , CounterResetActivationEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCounterResetActivation_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'CounterResetActivationEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setCounterResetActivation_V2 ( FliContext context , CounterResetActivationEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrCounterResetActivationEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setCounterResetActivation_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'CounterResetActivationEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterResetActivationVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCounterResetActivationVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterResetActivationAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCounterResetActivationAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterResetActivationTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCounterResetActivationTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterResetActivationDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCounterResetActivationDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterResetActivationDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCounterResetActivationDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_executeCounterReset_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_executeCounterReset_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterResetVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCounterResetVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterResetAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCounterResetAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterResetTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCounterResetTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterResetDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCounterResetDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterResetDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCounterResetDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterValue_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCounterValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setCounterValue_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setCounterValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterValueMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCounterValueMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterValueMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCounterValueMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterValueUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCounterValueUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterValueVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCounterValueVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterValueAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCounterValueAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterValueTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCounterValueTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterValueDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCounterValueDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterValueDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCounterValueDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterValueAtReset_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCounterValueAtReset_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setCounterValueAtReset_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setCounterValueAtReset_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterValueAtResetMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCounterValueAtResetMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterValueAtResetMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCounterValueAtResetMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterValueAtResetUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCounterValueAtResetUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterValueAtResetVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCounterValueAtResetVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterValueAtResetAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCounterValueAtResetAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterValueAtResetTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCounterValueAtResetTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterValueAtResetDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCounterValueAtResetDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterValueAtResetDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCounterValueAtResetDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterDuration_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCounterDuration_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setCounterDuration_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setCounterDuration_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterDurationMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCounterDurationMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterDurationMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCounterDurationMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterDurationUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCounterDurationUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterDurationVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCounterDurationVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterDurationAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCounterDurationAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterDurationTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCounterDurationTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterDurationDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCounterDurationDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterDurationDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCounterDurationDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterStatus_V2 ( FliContext context , CounterStatusEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCounterStatus_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'CounterStatusEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setCounterStatus_V2 ( FliContext context , CounterStatusEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrCounterStatusEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setCounterStatus_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'CounterStatusEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterStatusVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCounterStatusVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterStatusAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCounterStatusAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterStatusTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCounterStatusTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterStatusDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCounterStatusDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterStatusDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCounterStatusDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterTriggerSource_V2 ( FliContext context , CounterTriggerSourceEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCounterTriggerSource_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'CounterTriggerSourceEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setCounterTriggerSource_V2 ( FliContext context , CounterTriggerSourceEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrCounterTriggerSourceEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setCounterTriggerSource_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'CounterTriggerSourceEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterTriggerSourceVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCounterTriggerSourceVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterTriggerSourceAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCounterTriggerSourceAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterTriggerSourceTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCounterTriggerSourceTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterTriggerSourceDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCounterTriggerSourceDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterTriggerSourceDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCounterTriggerSourceDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterTriggerActivation_V2 ( FliContext context , CounterTriggerActivationEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCounterTriggerActivation_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'CounterTriggerActivationEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setCounterTriggerActivation_V2 ( FliContext context , CounterTriggerActivationEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrCounterTriggerActivationEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setCounterTriggerActivation_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'CounterTriggerActivationEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterTriggerActivationVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCounterTriggerActivationVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterTriggerActivationAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCounterTriggerActivationAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterTriggerActivationTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCounterTriggerActivationTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterTriggerActivationDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCounterTriggerActivationDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCounterTriggerActivationDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCounterTriggerActivationDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerSelector_V2 ( FliContext context , TimerSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTimerSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'TimerSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setTimerSelector_V2 ( FliContext context , TimerSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrTimerSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setTimerSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'TimerSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTimerSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTimerSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTimerSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTimerSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTimerSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerDuration_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTimerDuration_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setTimerDuration_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setTimerDuration_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerDurationMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTimerDurationMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerDurationMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTimerDurationMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerDurationUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTimerDurationUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerDurationVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTimerDurationVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerDurationAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTimerDurationAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerDurationTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTimerDurationTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerDurationDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTimerDurationDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerDurationDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTimerDurationDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerDelay_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTimerDelay_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setTimerDelay_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setTimerDelay_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerDelayMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTimerDelayMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerDelayMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTimerDelayMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerDelayUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTimerDelayUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerDelayVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTimerDelayVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerDelayAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTimerDelayAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerDelayTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTimerDelayTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerDelayDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTimerDelayDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerDelayDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTimerDelayDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_executeTimerReset_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_executeTimerReset_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerResetVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTimerResetVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerResetAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTimerResetAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerResetTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTimerResetTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerResetDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTimerResetDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerResetDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTimerResetDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerValue_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTimerValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setTimerValue_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setTimerValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerValueMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTimerValueMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerValueMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTimerValueMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerValueUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTimerValueUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerValueVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTimerValueVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerValueAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTimerValueAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerValueTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTimerValueTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerValueDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTimerValueDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerValueDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTimerValueDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerStatus_V2 ( FliContext context , TimerStatusEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTimerStatus_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'TimerStatusEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setTimerStatus_V2 ( FliContext context , TimerStatusEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrTimerStatusEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setTimerStatus_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'TimerStatusEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerStatusVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTimerStatusVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerStatusAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTimerStatusAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerStatusTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTimerStatusTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerStatusDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTimerStatusDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerStatusDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTimerStatusDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerTriggerSource_V2 ( FliContext context , TimerTriggerSourceEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTimerTriggerSource_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'TimerTriggerSourceEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setTimerTriggerSource_V2 ( FliContext context , TimerTriggerSourceEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrTimerTriggerSourceEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setTimerTriggerSource_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'TimerTriggerSourceEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerTriggerSourceVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTimerTriggerSourceVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerTriggerSourceAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTimerTriggerSourceAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerTriggerSourceTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTimerTriggerSourceTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerTriggerSourceDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTimerTriggerSourceDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerTriggerSourceDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTimerTriggerSourceDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerTriggerActivation_V2 ( FliContext context , TimerTriggerActivationEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTimerTriggerActivation_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'TimerTriggerActivationEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setTimerTriggerActivation_V2 ( FliContext context , TimerTriggerActivationEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrTimerTriggerActivationEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setTimerTriggerActivation_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'TimerTriggerActivationEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerTriggerActivationVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTimerTriggerActivationVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerTriggerActivationAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTimerTriggerActivationAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerTriggerActivationTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTimerTriggerActivationTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerTriggerActivationDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTimerTriggerActivationDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerTriggerActivationDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTimerTriggerActivationDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerTriggerArmDelay_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTimerTriggerArmDelay_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setTimerTriggerArmDelay_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setTimerTriggerArmDelay_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerTriggerArmDelayMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTimerTriggerArmDelayMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerTriggerArmDelayMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTimerTriggerArmDelayMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerTriggerArmDelayUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTimerTriggerArmDelayUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerTriggerArmDelayVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTimerTriggerArmDelayVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerTriggerArmDelayAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTimerTriggerArmDelayAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerTriggerArmDelayTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTimerTriggerArmDelayTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerTriggerArmDelayDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTimerTriggerArmDelayDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTimerTriggerArmDelayDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTimerTriggerArmDelayDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderSelector_V2 ( FliContext context , EncoderSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'EncoderSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEncoderSelector_V2 ( FliContext context , EncoderSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrEncoderSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setEncoderSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'EncoderSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderSourceA_V2 ( FliContext context , EncoderSourceAEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderSourceA_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'EncoderSourceAEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEncoderSourceA_V2 ( FliContext context , EncoderSourceAEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrEncoderSourceAEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setEncoderSourceA_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'EncoderSourceAEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderSourceAVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderSourceAVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderSourceAAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderSourceAAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderSourceATooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderSourceATooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderSourceADescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderSourceADescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderSourceADisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderSourceADisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderSourceB_V2 ( FliContext context , EncoderSourceBEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderSourceB_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'EncoderSourceBEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEncoderSourceB_V2 ( FliContext context , EncoderSourceBEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrEncoderSourceBEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setEncoderSourceB_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'EncoderSourceBEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderSourceBVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderSourceBVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderSourceBAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderSourceBAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderSourceBTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderSourceBTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderSourceBDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderSourceBDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderSourceBDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderSourceBDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderMode_V2 ( FliContext context , EncoderModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'EncoderModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEncoderMode_V2 ( FliContext context , EncoderModeEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrEncoderModeEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setEncoderMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'EncoderModeEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderModeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderModeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderModeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderModeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderModeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderModeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderModeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderModeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderModeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderModeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderDivider_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderDivider_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEncoderDivider_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEncoderDivider_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderDividerMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderDividerMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderDividerMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderDividerMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderDividerUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderDividerUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderDividerVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderDividerVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderDividerAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderDividerAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderDividerTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderDividerTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderDividerDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderDividerDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderDividerDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderDividerDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderOutputMode_V2 ( FliContext context , EncoderOutputModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderOutputMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'EncoderOutputModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEncoderOutputMode_V2 ( FliContext context , EncoderOutputModeEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrEncoderOutputModeEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setEncoderOutputMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'EncoderOutputModeEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderOutputModeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderOutputModeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderOutputModeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderOutputModeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderOutputModeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderOutputModeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderOutputModeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderOutputModeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderOutputModeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderOutputModeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderStatus_V2 ( FliContext context , EncoderStatusEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderStatus_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'EncoderStatusEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEncoderStatus_V2 ( FliContext context , EncoderStatusEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrEncoderStatusEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setEncoderStatus_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'EncoderStatusEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderStatusVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderStatusVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderStatusAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderStatusAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderStatusTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderStatusTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderStatusDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderStatusDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderStatusDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderStatusDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderTimeout_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderTimeout_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEncoderTimeout_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setEncoderTimeout_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderTimeoutMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderTimeoutMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderTimeoutMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderTimeoutMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderTimeoutUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderTimeoutUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderTimeoutVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderTimeoutVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderTimeoutAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderTimeoutAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderTimeoutTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderTimeoutTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderTimeoutDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderTimeoutDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderTimeoutDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderTimeoutDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderResetSource_V2 ( FliContext context , EncoderResetSourceEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderResetSource_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'EncoderResetSourceEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEncoderResetSource_V2 ( FliContext context , EncoderResetSourceEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrEncoderResetSourceEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setEncoderResetSource_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'EncoderResetSourceEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderResetSourceVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderResetSourceVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderResetSourceAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderResetSourceAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderResetSourceTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderResetSourceTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderResetSourceDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderResetSourceDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderResetSourceDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderResetSourceDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderResetActivation_V2 ( FliContext context , EncoderResetActivationEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderResetActivation_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'EncoderResetActivationEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEncoderResetActivation_V2 ( FliContext context , EncoderResetActivationEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrEncoderResetActivationEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setEncoderResetActivation_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'EncoderResetActivationEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderResetActivationVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderResetActivationVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderResetActivationAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderResetActivationAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderResetActivationTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderResetActivationTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderResetActivationDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderResetActivationDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderResetActivationDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderResetActivationDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_executeEncoderReset_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_executeEncoderReset_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderResetVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderResetVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderResetAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderResetAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderResetTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderResetTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderResetDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderResetDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderResetDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderResetDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderValue_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEncoderValue_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEncoderValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderValueMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderValueMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderValueMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderValueMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderValueUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderValueUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderValueVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderValueVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderValueAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderValueAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderValueTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderValueTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderValueDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderValueDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderValueDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderValueDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderValueAtReset_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderValueAtReset_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEncoderValueAtReset_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEncoderValueAtReset_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderValueAtResetMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderValueAtResetMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderValueAtResetMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderValueAtResetMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderValueAtResetUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderValueAtResetUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderValueAtResetVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderValueAtResetVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderValueAtResetAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderValueAtResetAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderValueAtResetTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderValueAtResetTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderValueAtResetDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderValueAtResetDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderValueAtResetDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderValueAtResetDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderResolution_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderResolution_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEncoderResolution_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setEncoderResolution_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderResolutionMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderResolutionMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderResolutionMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderResolutionMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderResolutionUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderResolutionUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderResolutionVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderResolutionVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderResolutionAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderResolutionAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderResolutionTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderResolutionTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderResolutionDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderResolutionDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEncoderResolutionDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEncoderResolutionDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockSelector_V2 ( FliContext context , LogicBlockSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'LogicBlockSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setLogicBlockSelector_V2 ( FliContext context , LogicBlockSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrLogicBlockSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setLogicBlockSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'LogicBlockSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockFunction_V2 ( FliContext context , LogicBlockFunctionEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockFunction_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'LogicBlockFunctionEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setLogicBlockFunction_V2 ( FliContext context , LogicBlockFunctionEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrLogicBlockFunctionEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setLogicBlockFunction_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'LogicBlockFunctionEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockFunctionVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockFunctionVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockFunctionAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockFunctionAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockFunctionTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockFunctionTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockFunctionDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockFunctionDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockFunctionDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockFunctionDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockInputNumber_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockInputNumber_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setLogicBlockInputNumber_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setLogicBlockInputNumber_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockInputNumberMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockInputNumberMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockInputNumberMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockInputNumberMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockInputNumberUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockInputNumberUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockInputNumberVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockInputNumberVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockInputNumberAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockInputNumberAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockInputNumberTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockInputNumberTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockInputNumberDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockInputNumberDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockInputNumberDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockInputNumberDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockInputSelector_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockInputSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setLogicBlockInputSelector_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setLogicBlockInputSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockInputSelectorMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockInputSelectorMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockInputSelectorMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockInputSelectorMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockInputSelectorUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockInputSelectorUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockInputSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockInputSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockInputSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockInputSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockInputSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockInputSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockInputSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockInputSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockInputSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockInputSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockInputSource_V2 ( FliContext context , LogicBlockInputSourceEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockInputSource_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'LogicBlockInputSourceEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setLogicBlockInputSource_V2 ( FliContext context , LogicBlockInputSourceEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrLogicBlockInputSourceEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setLogicBlockInputSource_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'LogicBlockInputSourceEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockInputSourceVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockInputSourceVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockInputSourceAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockInputSourceAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockInputSourceTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockInputSourceTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockInputSourceDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockInputSourceDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockInputSourceDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockInputSourceDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockInputInverter_V2 ( FliContext context , _Bool * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockInputInverter_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setLogicBlockInputInverter_V2 ( FliContext context , _Bool val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliSfncCamera_setLogicBlockInputInverter_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockInputInverterVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockInputInverterVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockInputInverterAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockInputInverterAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockInputInverterTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockInputInverterTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockInputInverterDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockInputInverterDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockInputInverterDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockInputInverterDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockLUTIndex_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockLUTIndex_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setLogicBlockLUTIndex_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setLogicBlockLUTIndex_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockLUTIndexMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockLUTIndexMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockLUTIndexMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockLUTIndexMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockLUTIndexUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockLUTIndexUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockLUTIndexVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockLUTIndexVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockLUTIndexAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockLUTIndexAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockLUTIndexTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockLUTIndexTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockLUTIndexDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockLUTIndexDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockLUTIndexDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockLUTIndexDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockLUTValue_V2 ( FliContext context , _Bool * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockLUTValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setLogicBlockLUTValue_V2 ( FliContext context , _Bool val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliSfncCamera_setLogicBlockLUTValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockLUTValueVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockLUTValueVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockLUTValueAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockLUTValueAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockLUTValueTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockLUTValueTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockLUTValueDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockLUTValueDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockLUTValueDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockLUTValueDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockLUTValueAll_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockLUTValueAll_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setLogicBlockLUTValueAll_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setLogicBlockLUTValueAll_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockLUTValueAllMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockLUTValueAllMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockLUTValueAllMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockLUTValueAllMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockLUTValueAllUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockLUTValueAllUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockLUTValueAllVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockLUTValueAllVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockLUTValueAllAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockLUTValueAllAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockLUTValueAllTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockLUTValueAllTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockLUTValueAllDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockLUTValueAllDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockLUTValueAllDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockLUTValueAllDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockLUTSelector_V2 ( FliContext context , LogicBlockLUTSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockLUTSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'LogicBlockLUTSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setLogicBlockLUTSelector_V2 ( FliContext context , LogicBlockLUTSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrLogicBlockLUTSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setLogicBlockLUTSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'LogicBlockLUTSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockLUTSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockLUTSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockLUTSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockLUTSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockLUTSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockLUTSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockLUTSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockLUTSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLogicBlockLUTSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLogicBlockLUTSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSoftwareSignalSelector_V2 ( FliContext context , SoftwareSignalSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSoftwareSignalSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'SoftwareSignalSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setSoftwareSignalSelector_V2 ( FliContext context , SoftwareSignalSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrSoftwareSignalSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setSoftwareSignalSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'SoftwareSignalSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSoftwareSignalSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSoftwareSignalSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSoftwareSignalSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSoftwareSignalSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSoftwareSignalSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSoftwareSignalSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSoftwareSignalSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSoftwareSignalSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSoftwareSignalSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSoftwareSignalSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_executeSoftwareSignalPulse_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_executeSoftwareSignalPulse_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSoftwareSignalPulseVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSoftwareSignalPulseVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSoftwareSignalPulseAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSoftwareSignalPulseAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSoftwareSignalPulseTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSoftwareSignalPulseTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSoftwareSignalPulseDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSoftwareSignalPulseDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSoftwareSignalPulseDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSoftwareSignalPulseDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getActionUnconditionalMode_V2 ( FliContext context , ActionUnconditionalModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getActionUnconditionalMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ActionUnconditionalModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setActionUnconditionalMode_V2 ( FliContext context , ActionUnconditionalModeEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrActionUnconditionalModeEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setActionUnconditionalMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ActionUnconditionalModeEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getActionUnconditionalModeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getActionUnconditionalModeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getActionUnconditionalModeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getActionUnconditionalModeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getActionUnconditionalModeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getActionUnconditionalModeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getActionUnconditionalModeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getActionUnconditionalModeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getActionUnconditionalModeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getActionUnconditionalModeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getActionDeviceKey_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getActionDeviceKey_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setActionDeviceKey_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setActionDeviceKey_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getActionDeviceKeyMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getActionDeviceKeyMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getActionDeviceKeyMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getActionDeviceKeyMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getActionDeviceKeyUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getActionDeviceKeyUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getActionDeviceKeyVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getActionDeviceKeyVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getActionDeviceKeyAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getActionDeviceKeyAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getActionDeviceKeyTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getActionDeviceKeyTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getActionDeviceKeyDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getActionDeviceKeyDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getActionDeviceKeyDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getActionDeviceKeyDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getActionQueueSize_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getActionQueueSize_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setActionQueueSize_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setActionQueueSize_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getActionQueueSizeMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getActionQueueSizeMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getActionQueueSizeMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getActionQueueSizeMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getActionQueueSizeUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getActionQueueSizeUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getActionQueueSizeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getActionQueueSizeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getActionQueueSizeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getActionQueueSizeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getActionQueueSizeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getActionQueueSizeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getActionQueueSizeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getActionQueueSizeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getActionQueueSizeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getActionQueueSizeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getActionSelector_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getActionSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setActionSelector_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setActionSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getActionSelectorMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getActionSelectorMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getActionSelectorMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getActionSelectorMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getActionSelectorUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getActionSelectorUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getActionSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getActionSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getActionSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getActionSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getActionSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getActionSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getActionSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getActionSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getActionSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getActionSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getActionGroupMask_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getActionGroupMask_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setActionGroupMask_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setActionGroupMask_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getActionGroupMaskMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getActionGroupMaskMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getActionGroupMaskMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getActionGroupMaskMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getActionGroupMaskUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getActionGroupMaskUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getActionGroupMaskVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getActionGroupMaskVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getActionGroupMaskAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getActionGroupMaskAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getActionGroupMaskTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getActionGroupMaskTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getActionGroupMaskDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getActionGroupMaskDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getActionGroupMaskDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getActionGroupMaskDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getActionGroupKey_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getActionGroupKey_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setActionGroupKey_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setActionGroupKey_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getActionGroupKeyMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getActionGroupKeyMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getActionGroupKeyMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getActionGroupKeyMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getActionGroupKeyUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getActionGroupKeyUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getActionGroupKeyVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getActionGroupKeyVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getActionGroupKeyAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getActionGroupKeyAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getActionGroupKeyTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getActionGroupKeyTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getActionGroupKeyDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getActionGroupKeyDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getActionGroupKeyDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getActionGroupKeyDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventSelector_V2 ( FliContext context , EventSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'EventSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventSelector_V2 ( FliContext context , EventSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrEventSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setEventSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'EventSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventNotification_V2 ( FliContext context , EventNotificationEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventNotification_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'EventNotificationEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventNotification_V2 ( FliContext context , EventNotificationEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrEventNotificationEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setEventNotification_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'EventNotificationEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventNotificationVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventNotificationVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventNotificationAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventNotificationAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventNotificationTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventNotificationTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventNotificationDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventNotificationDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventNotificationDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventNotificationDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTrigger_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTrigger_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventAcquisitionTrigger_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventAcquisitionTrigger_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventAcquisitionTriggerTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventAcquisitionTriggerTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventAcquisitionTriggerFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventAcquisitionTriggerFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerMissed_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerMissed_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventAcquisitionTriggerMissed_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventAcquisitionTriggerMissed_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerMissedMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerMissedMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerMissedMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerMissedMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerMissedUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerMissedUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerMissedVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerMissedVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerMissedAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerMissedAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerMissedTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerMissedTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerMissedDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerMissedDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerMissedDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerMissedDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerMissedTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerMissedTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventAcquisitionTriggerMissedTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventAcquisitionTriggerMissedTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerMissedTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerMissedTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerMissedTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerMissedTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerMissedTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerMissedTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerMissedTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerMissedTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerMissedTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerMissedTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerMissedTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerMissedTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerMissedTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerMissedTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerMissedTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerMissedTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerMissedFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerMissedFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventAcquisitionTriggerMissedFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventAcquisitionTriggerMissedFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerMissedFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerMissedFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerMissedFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerMissedFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerMissedFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerMissedFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerMissedFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerMissedFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerMissedFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerMissedFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerMissedFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerMissedFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerMissedFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerMissedFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTriggerMissedFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTriggerMissedFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionStart_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionStart_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventAcquisitionStart_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventAcquisitionStart_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionStartMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionStartMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionStartMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionStartMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionStartUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionStartUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionStartVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionStartVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionStartAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionStartAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionStartTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionStartTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionStartDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionStartDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionStartDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionStartDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionStartTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionStartTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventAcquisitionStartTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventAcquisitionStartTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionStartTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionStartTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionStartTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionStartTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionStartTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionStartTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionStartTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionStartTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionStartTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionStartTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionStartTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionStartTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionStartTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionStartTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionStartTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionStartTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionStartFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionStartFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventAcquisitionStartFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventAcquisitionStartFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionStartFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionStartFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionStartFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionStartFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionStartFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionStartFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionStartFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionStartFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionStartFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionStartFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionStartFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionStartFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionStartFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionStartFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionStartFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionStartFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionEnd_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionEnd_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventAcquisitionEnd_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventAcquisitionEnd_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionEndMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionEndMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionEndMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionEndMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionEndUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionEndUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionEndVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionEndVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionEndAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionEndAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionEndTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionEndTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionEndDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionEndDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionEndDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionEndDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionEndTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionEndTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventAcquisitionEndTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventAcquisitionEndTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionEndTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionEndTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionEndTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionEndTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionEndTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionEndTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionEndTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionEndTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionEndTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionEndTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionEndTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionEndTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionEndTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionEndTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionEndTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionEndTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionEndFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionEndFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventAcquisitionEndFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventAcquisitionEndFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionEndFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionEndFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionEndFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionEndFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionEndFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionEndFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionEndFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionEndFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionEndFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionEndFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionEndFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionEndFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionEndFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionEndFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionEndFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionEndFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferStart_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferStart_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventAcquisitionTransferStart_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventAcquisitionTransferStart_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferStartMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferStartMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferStartMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferStartMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferStartUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferStartUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferStartVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferStartVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferStartAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferStartAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferStartTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferStartTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferStartDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferStartDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferStartDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferStartDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferStartTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferStartTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventAcquisitionTransferStartTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventAcquisitionTransferStartTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferStartTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferStartTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferStartTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferStartTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferStartTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferStartTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferStartTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferStartTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferStartTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferStartTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferStartTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferStartTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferStartTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferStartTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferStartTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferStartTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferStartFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferStartFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventAcquisitionTransferStartFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventAcquisitionTransferStartFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferStartFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferStartFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferStartFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferStartFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferStartFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferStartFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferStartFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferStartFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferStartFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferStartFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferStartFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferStartFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferStartFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferStartFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferStartFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferStartFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferEnd_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferEnd_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventAcquisitionTransferEnd_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventAcquisitionTransferEnd_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferEndMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferEndMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferEndMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferEndMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferEndUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferEndUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferEndVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferEndVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferEndAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferEndAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferEndTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferEndTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferEndDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferEndDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferEndDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferEndDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferEndTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferEndTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventAcquisitionTransferEndTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventAcquisitionTransferEndTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferEndTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferEndTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferEndTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferEndTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferEndTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferEndTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferEndTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferEndTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferEndTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferEndTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferEndTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferEndTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferEndTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferEndTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferEndTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferEndTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferEndFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferEndFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventAcquisitionTransferEndFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventAcquisitionTransferEndFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferEndFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferEndFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferEndFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferEndFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferEndFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferEndFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferEndFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferEndFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferEndFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferEndFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferEndFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferEndFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferEndFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferEndFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionTransferEndFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionTransferEndFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionError_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionError_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventAcquisitionError_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventAcquisitionError_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionErrorMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionErrorMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionErrorMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionErrorMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionErrorUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionErrorUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionErrorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionErrorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionErrorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionErrorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionErrorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionErrorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionErrorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionErrorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionErrorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionErrorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionErrorTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionErrorTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventAcquisitionErrorTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventAcquisitionErrorTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionErrorTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionErrorTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionErrorTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionErrorTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionErrorTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionErrorTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionErrorTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionErrorTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionErrorTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionErrorTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionErrorTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionErrorTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionErrorTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionErrorTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionErrorTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionErrorTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionErrorFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionErrorFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventAcquisitionErrorFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventAcquisitionErrorFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionErrorFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionErrorFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionErrorFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionErrorFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionErrorFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionErrorFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionErrorFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionErrorFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionErrorFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionErrorFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionErrorFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionErrorFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionErrorFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionErrorFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventAcquisitionErrorFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventAcquisitionErrorFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstStart_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstStart_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventFrameBurstStart_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventFrameBurstStart_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstStartMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstStartMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstStartMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstStartMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstStartUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstStartUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstStartVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstStartVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstStartAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstStartAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstStartTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstStartTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstStartDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstStartDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstStartDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstStartDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstStartTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstStartTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventFrameBurstStartTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventFrameBurstStartTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstStartTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstStartTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstStartTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstStartTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstStartTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstStartTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstStartTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstStartTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstStartTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstStartTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstStartTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstStartTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstStartTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstStartTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstStartTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstStartTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstStartFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstStartFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventFrameBurstStartFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventFrameBurstStartFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstStartFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstStartFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstStartFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstStartFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstStartFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstStartFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstStartFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstStartFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstStartFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstStartFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstStartFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstStartFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstStartFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstStartFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstStartFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstStartFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstEnd_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstEnd_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventFrameBurstEnd_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventFrameBurstEnd_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstEndMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstEndMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstEndMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstEndMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstEndUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstEndUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstEndVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstEndVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstEndAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstEndAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstEndTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstEndTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstEndDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstEndDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstEndDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstEndDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstEndTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstEndTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventFrameBurstEndTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventFrameBurstEndTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstEndTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstEndTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstEndTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstEndTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstEndTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstEndTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstEndTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstEndTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstEndTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstEndTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstEndTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstEndTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstEndTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstEndTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstEndTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstEndTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstEndFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstEndFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventFrameBurstEndFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventFrameBurstEndFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstEndFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstEndFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstEndFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstEndFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstEndFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstEndFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstEndFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstEndFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstEndFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstEndFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstEndFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstEndFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstEndFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstEndFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameBurstEndFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameBurstEndFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTrigger_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTrigger_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventFrameTrigger_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventFrameTrigger_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventFrameTriggerTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventFrameTriggerTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventFrameTriggerFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventFrameTriggerFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerMissed_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerMissed_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventFrameTriggerMissed_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventFrameTriggerMissed_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerMissedMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerMissedMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerMissedMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerMissedMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerMissedUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerMissedUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerMissedVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerMissedVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerMissedAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerMissedAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerMissedTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerMissedTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerMissedDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerMissedDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerMissedDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerMissedDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerMissedTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerMissedTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventFrameTriggerMissedTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventFrameTriggerMissedTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerMissedTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerMissedTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerMissedTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerMissedTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerMissedTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerMissedTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerMissedTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerMissedTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerMissedTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerMissedTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerMissedTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerMissedTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerMissedTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerMissedTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerMissedTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerMissedTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerMissedFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerMissedFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventFrameTriggerMissedFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventFrameTriggerMissedFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerMissedFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerMissedFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerMissedFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerMissedFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerMissedFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerMissedFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerMissedFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerMissedFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerMissedFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerMissedFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerMissedFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerMissedFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerMissedFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerMissedFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTriggerMissedFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTriggerMissedFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameStart_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameStart_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventFrameStart_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventFrameStart_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameStartMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameStartMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameStartMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameStartMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameStartUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameStartUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameStartVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameStartVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameStartAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameStartAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameStartTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameStartTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameStartDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameStartDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameStartDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameStartDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameStartTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameStartTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventFrameStartTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventFrameStartTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameStartTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameStartTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameStartTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameStartTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameStartTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameStartTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameStartTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameStartTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameStartTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameStartTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameStartTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameStartTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameStartTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameStartTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameStartTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameStartTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameStartFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameStartFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventFrameStartFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventFrameStartFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameStartFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameStartFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameStartFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameStartFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameStartFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameStartFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameStartFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameStartFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameStartFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameStartFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameStartFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameStartFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameStartFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameStartFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameStartFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameStartFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameEnd_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameEnd_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventFrameEnd_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventFrameEnd_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameEndMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameEndMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameEndMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameEndMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameEndUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameEndUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameEndVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameEndVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameEndAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameEndAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameEndTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameEndTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameEndDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameEndDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameEndDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameEndDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameEndTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameEndTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventFrameEndTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventFrameEndTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameEndTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameEndTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameEndTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameEndTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameEndTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameEndTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameEndTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameEndTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameEndTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameEndTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameEndTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameEndTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameEndTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameEndTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameEndTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameEndTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameEndFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameEndFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventFrameEndFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventFrameEndFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameEndFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameEndFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameEndFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameEndFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameEndFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameEndFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameEndFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameEndFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameEndFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameEndFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameEndFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameEndFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameEndFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameEndFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameEndFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameEndFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferStart_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferStart_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventFrameTransferStart_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventFrameTransferStart_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferStartMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferStartMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferStartMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferStartMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferStartUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferStartUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferStartVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferStartVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferStartAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferStartAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferStartTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferStartTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferStartDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferStartDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferStartDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferStartDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferStartTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferStartTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventFrameTransferStartTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventFrameTransferStartTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferStartTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferStartTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferStartTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferStartTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferStartTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferStartTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferStartTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferStartTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferStartTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferStartTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferStartTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferStartTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferStartTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferStartTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferStartTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferStartTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferStartFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferStartFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventFrameTransferStartFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventFrameTransferStartFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferStartFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferStartFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferStartFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferStartFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferStartFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferStartFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferStartFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferStartFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferStartFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferStartFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferStartFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferStartFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferStartFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferStartFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferStartFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferStartFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferEnd_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferEnd_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventFrameTransferEnd_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventFrameTransferEnd_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferEndMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferEndMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferEndMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferEndMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferEndUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferEndUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferEndVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferEndVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferEndAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferEndAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferEndTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferEndTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferEndDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferEndDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferEndDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferEndDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferEndTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferEndTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventFrameTransferEndTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventFrameTransferEndTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferEndTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferEndTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferEndTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferEndTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferEndTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferEndTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferEndTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferEndTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferEndTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferEndTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferEndTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferEndTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferEndTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferEndTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferEndTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferEndTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferEndFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferEndFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventFrameTransferEndFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventFrameTransferEndFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferEndFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferEndFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferEndFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferEndFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferEndFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferEndFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferEndFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferEndFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferEndFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferEndFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferEndFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferEndFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferEndFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferEndFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventFrameTransferEndFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventFrameTransferEndFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTrigger_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTrigger_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventLineTrigger_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventLineTrigger_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventLineTriggerTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventLineTriggerTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventLineTriggerFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventLineTriggerFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerMissed_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerMissed_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventLineTriggerMissed_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventLineTriggerMissed_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerMissedMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerMissedMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerMissedMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerMissedMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerMissedUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerMissedUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerMissedVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerMissedVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerMissedAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerMissedAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerMissedTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerMissedTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerMissedDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerMissedDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerMissedDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerMissedDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerMissedTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerMissedTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventLineTriggerMissedTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventLineTriggerMissedTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerMissedTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerMissedTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerMissedTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerMissedTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerMissedTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerMissedTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerMissedTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerMissedTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerMissedTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerMissedTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerMissedTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerMissedTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerMissedTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerMissedTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerMissedTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerMissedTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerMissedFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerMissedFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventLineTriggerMissedFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventLineTriggerMissedFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerMissedFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerMissedFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerMissedFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerMissedFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerMissedFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerMissedFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerMissedFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerMissedFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerMissedFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerMissedFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerMissedFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerMissedFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerMissedFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerMissedFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineTriggerMissedFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineTriggerMissedFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineStart_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineStart_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventLineStart_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventLineStart_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineStartMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineStartMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineStartMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineStartMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineStartUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineStartUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineStartVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineStartVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineStartAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineStartAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineStartTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineStartTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineStartDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineStartDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineStartDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineStartDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineStartTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineStartTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventLineStartTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventLineStartTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineStartTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineStartTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineStartTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineStartTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineStartTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineStartTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineStartTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineStartTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineStartTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineStartTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineStartTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineStartTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineStartTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineStartTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineStartTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineStartTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineStartFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineStartFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventLineStartFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventLineStartFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineStartFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineStartFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineStartFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineStartFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineStartFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineStartFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineStartFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineStartFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineStartFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineStartFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineStartFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineStartFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineStartFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineStartFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineStartFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineStartFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineEnd_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineEnd_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventLineEnd_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventLineEnd_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineEndMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineEndMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineEndMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineEndMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineEndUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineEndUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineEndVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineEndVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineEndAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineEndAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineEndTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineEndTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineEndDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineEndDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineEndDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineEndDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineEndTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineEndTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventLineEndTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventLineEndTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineEndTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineEndTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineEndTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineEndTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineEndTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineEndTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineEndTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineEndTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineEndTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineEndTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineEndTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineEndTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineEndTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineEndTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineEndTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineEndTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineEndFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineEndFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventLineEndFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventLineEndFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineEndFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineEndFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineEndFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineEndFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineEndFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineEndFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineEndFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineEndFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineEndFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineEndFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineEndFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineEndFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineEndFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineEndFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLineEndFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLineEndFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureStart_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureStart_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventExposureStart_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventExposureStart_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureStartMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureStartMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureStartMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureStartMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureStartUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureStartUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureStartVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureStartVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureStartAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureStartAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureStartTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureStartTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureStartDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureStartDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureStartDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureStartDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureStartTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureStartTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventExposureStartTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventExposureStartTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureStartTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureStartTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureStartTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureStartTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureStartTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureStartTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureStartTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureStartTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureStartTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureStartTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureStartTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureStartTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureStartTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureStartTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureStartTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureStartTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureStartFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureStartFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventExposureStartFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventExposureStartFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureStartFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureStartFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureStartFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureStartFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureStartFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureStartFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureStartFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureStartFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureStartFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureStartFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureStartFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureStartFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureStartFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureStartFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureStartFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureStartFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureEnd_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureEnd_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventExposureEnd_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventExposureEnd_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureEndMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureEndMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureEndMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureEndMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureEndUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureEndUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureEndVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureEndVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureEndAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureEndAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureEndTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureEndTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureEndDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureEndDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureEndDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureEndDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureEndTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureEndTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventExposureEndTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventExposureEndTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureEndTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureEndTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureEndTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureEndTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureEndTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureEndTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureEndTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureEndTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureEndTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureEndTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureEndTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureEndTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureEndTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureEndTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureEndTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureEndTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureEndFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureEndFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventExposureEndFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventExposureEndFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureEndFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureEndFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureEndFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureEndFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureEndFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureEndFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureEndFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureEndFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureEndFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureEndFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureEndFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureEndFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureEndFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureEndFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventExposureEndFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventExposureEndFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferStart_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferStart_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventStream0TransferStart_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventStream0TransferStart_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferStartMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferStartMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferStartMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferStartMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferStartUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferStartUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferStartVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferStartVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferStartAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferStartAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferStartTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferStartTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferStartDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferStartDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferStartDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferStartDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferStartTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferStartTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventStream0TransferStartTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventStream0TransferStartTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferStartTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferStartTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferStartTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferStartTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferStartTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferStartTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferStartTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferStartTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferStartTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferStartTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferStartTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferStartTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferStartTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferStartTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferStartTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferStartTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferStartFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferStartFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventStream0TransferStartFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventStream0TransferStartFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferStartFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferStartFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferStartFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferStartFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferStartFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferStartFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferStartFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferStartFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferStartFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferStartFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferStartFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferStartFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferStartFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferStartFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferStartFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferStartFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferEnd_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferEnd_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventStream0TransferEnd_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventStream0TransferEnd_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferEndMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferEndMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferEndMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferEndMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferEndUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferEndUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferEndVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferEndVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferEndAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferEndAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferEndTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferEndTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferEndDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferEndDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferEndDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferEndDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferEndTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferEndTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventStream0TransferEndTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventStream0TransferEndTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferEndTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferEndTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferEndTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferEndTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferEndTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferEndTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferEndTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferEndTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferEndTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferEndTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferEndTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferEndTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferEndTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferEndTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferEndTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferEndTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferEndFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferEndFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventStream0TransferEndFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventStream0TransferEndFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferEndFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferEndFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferEndFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferEndFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferEndFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferEndFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferEndFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferEndFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferEndFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferEndFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferEndFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferEndFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferEndFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferEndFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferEndFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferEndFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferPause_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferPause_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventStream0TransferPause_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventStream0TransferPause_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferPauseMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferPauseMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferPauseMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferPauseMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferPauseUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferPauseUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferPauseVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferPauseVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferPauseAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferPauseAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferPauseTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferPauseTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferPauseDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferPauseDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferPauseDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferPauseDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferPauseTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferPauseTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventStream0TransferPauseTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventStream0TransferPauseTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferPauseTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferPauseTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferPauseTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferPauseTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferPauseTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferPauseTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferPauseTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferPauseTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferPauseTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferPauseTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferPauseTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferPauseTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferPauseTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferPauseTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferPauseTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferPauseTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferPauseFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferPauseFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventStream0TransferPauseFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventStream0TransferPauseFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferPauseFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferPauseFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferPauseFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferPauseFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferPauseFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferPauseFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferPauseFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferPauseFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferPauseFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferPauseFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferPauseFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferPauseFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferPauseFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferPauseFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferPauseFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferPauseFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferResume_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferResume_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventStream0TransferResume_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventStream0TransferResume_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferResumeMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferResumeMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferResumeMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferResumeMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferResumeUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferResumeUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferResumeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferResumeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferResumeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferResumeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferResumeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferResumeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferResumeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferResumeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferResumeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferResumeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferResumeTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferResumeTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventStream0TransferResumeTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventStream0TransferResumeTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferResumeTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferResumeTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferResumeTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferResumeTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferResumeTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferResumeTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferResumeTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferResumeTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferResumeTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferResumeTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferResumeTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferResumeTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferResumeTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferResumeTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferResumeTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferResumeTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferResumeFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferResumeFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventStream0TransferResumeFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventStream0TransferResumeFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferResumeFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferResumeFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferResumeFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferResumeFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferResumeFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferResumeFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferResumeFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferResumeFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferResumeFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferResumeFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferResumeFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferResumeFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferResumeFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferResumeFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferResumeFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferResumeFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockStart_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockStart_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventStream0TransferBlockStart_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventStream0TransferBlockStart_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockStartMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockStartMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockStartMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockStartMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockStartUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockStartUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockStartVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockStartVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockStartAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockStartAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockStartTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockStartTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockStartDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockStartDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockStartDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockStartDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockStartTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockStartTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventStream0TransferBlockStartTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventStream0TransferBlockStartTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockStartTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockStartTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockStartTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockStartTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockStartTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockStartTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockStartTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockStartTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockStartTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockStartTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockStartTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockStartTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockStartTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockStartTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockStartTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockStartTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockStartFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockStartFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventStream0TransferBlockStartFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventStream0TransferBlockStartFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockStartFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockStartFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockStartFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockStartFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockStartFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockStartFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockStartFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockStartFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockStartFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockStartFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockStartFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockStartFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockStartFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockStartFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockStartFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockStartFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockEnd_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockEnd_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventStream0TransferBlockEnd_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventStream0TransferBlockEnd_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockEndMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockEndMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockEndMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockEndMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockEndUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockEndUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockEndVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockEndVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockEndAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockEndAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockEndTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockEndTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockEndDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockEndDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockEndDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockEndDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockEndTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockEndTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventStream0TransferBlockEndTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventStream0TransferBlockEndTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockEndTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockEndTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockEndTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockEndTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockEndTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockEndTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockEndTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockEndTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockEndTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockEndTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockEndTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockEndTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockEndTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockEndTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockEndTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockEndTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockEndFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockEndFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventStream0TransferBlockEndFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventStream0TransferBlockEndFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockEndFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockEndFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockEndFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockEndFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockEndFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockEndFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockEndFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockEndFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockEndFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockEndFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockEndFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockEndFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockEndFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockEndFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockEndFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockEndFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockTrigger_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockTrigger_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventStream0TransferBlockTrigger_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventStream0TransferBlockTrigger_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockTriggerMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockTriggerMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockTriggerMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockTriggerMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockTriggerUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockTriggerUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockTriggerVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockTriggerVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockTriggerAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockTriggerAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockTriggerTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockTriggerTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockTriggerDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockTriggerDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockTriggerDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockTriggerDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockTriggerTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockTriggerTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventStream0TransferBlockTriggerTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventStream0TransferBlockTriggerTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockTriggerTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockTriggerTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockTriggerTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockTriggerTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockTriggerTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockTriggerTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockTriggerTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockTriggerTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockTriggerTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockTriggerTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockTriggerTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockTriggerTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockTriggerTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockTriggerTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockTriggerTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockTriggerTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockTriggerFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockTriggerFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventStream0TransferBlockTriggerFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventStream0TransferBlockTriggerFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockTriggerFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockTriggerFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockTriggerFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockTriggerFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockTriggerFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockTriggerFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockTriggerFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockTriggerFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockTriggerFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockTriggerFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockTriggerFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockTriggerFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockTriggerFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockTriggerFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBlockTriggerFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBlockTriggerFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstStart_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstStart_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventStream0TransferBurstStart_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventStream0TransferBurstStart_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstStartMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstStartMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstStartMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstStartMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstStartUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstStartUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstStartVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstStartVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstStartAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstStartAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstStartTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstStartTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstStartDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstStartDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstStartDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstStartDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstStartTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstStartTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventStream0TransferBurstStartTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventStream0TransferBurstStartTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstStartTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstStartTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstStartTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstStartTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstStartTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstStartTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstStartTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstStartTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstStartTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstStartTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstStartTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstStartTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstStartTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstStartTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstStartTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstStartTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstStartFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstStartFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventStream0TransferBurstStartFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventStream0TransferBurstStartFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstStartFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstStartFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstStartFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstStartFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstStartFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstStartFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstStartFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstStartFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstStartFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstStartFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstStartFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstStartFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstStartFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstStartFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstStartFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstStartFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstEnd_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstEnd_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventStream0TransferBurstEnd_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventStream0TransferBurstEnd_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstEndMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstEndMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstEndMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstEndMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstEndUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstEndUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstEndVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstEndVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstEndAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstEndAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstEndTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstEndTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstEndDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstEndDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstEndDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstEndDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstEndTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstEndTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventStream0TransferBurstEndTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventStream0TransferBurstEndTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstEndTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstEndTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstEndTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstEndTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstEndTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstEndTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstEndTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstEndTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstEndTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstEndTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstEndTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstEndTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstEndTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstEndTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstEndTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstEndTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstEndFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstEndFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventStream0TransferBurstEndFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventStream0TransferBurstEndFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstEndFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstEndFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstEndFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstEndFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstEndFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstEndFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstEndFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstEndFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstEndFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstEndFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstEndFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstEndFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstEndFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstEndFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferBurstEndFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferBurstEndFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferOverflow_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferOverflow_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventStream0TransferOverflow_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventStream0TransferOverflow_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferOverflowMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferOverflowMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferOverflowMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferOverflowMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferOverflowUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferOverflowUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferOverflowVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferOverflowVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferOverflowAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferOverflowAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferOverflowTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferOverflowTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferOverflowDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferOverflowDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferOverflowDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferOverflowDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferOverflowTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferOverflowTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventStream0TransferOverflowTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventStream0TransferOverflowTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferOverflowTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferOverflowTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferOverflowTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferOverflowTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferOverflowTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferOverflowTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferOverflowTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferOverflowTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferOverflowTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferOverflowTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferOverflowTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferOverflowTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferOverflowTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferOverflowTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferOverflowTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferOverflowTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferOverflowFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferOverflowFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventStream0TransferOverflowFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventStream0TransferOverflowFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferOverflowFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferOverflowFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferOverflowFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferOverflowFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferOverflowFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferOverflowFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferOverflowFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferOverflowFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferOverflowFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferOverflowFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferOverflowFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferOverflowFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferOverflowFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferOverflowFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventStream0TransferOverflowFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventStream0TransferOverflowFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventSequencerSetChange_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventSequencerSetChange_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventSequencerSetChange_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventSequencerSetChange_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventSequencerSetChangeMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventSequencerSetChangeMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventSequencerSetChangeMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventSequencerSetChangeMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventSequencerSetChangeUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventSequencerSetChangeUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventSequencerSetChangeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventSequencerSetChangeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventSequencerSetChangeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventSequencerSetChangeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventSequencerSetChangeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventSequencerSetChangeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventSequencerSetChangeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventSequencerSetChangeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventSequencerSetChangeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventSequencerSetChangeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventSequencerSetChangeTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventSequencerSetChangeTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventSequencerSetChangeTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventSequencerSetChangeTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventSequencerSetChangeTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventSequencerSetChangeTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventSequencerSetChangeTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventSequencerSetChangeTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventSequencerSetChangeTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventSequencerSetChangeTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventSequencerSetChangeTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventSequencerSetChangeTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventSequencerSetChangeTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventSequencerSetChangeTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventSequencerSetChangeTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventSequencerSetChangeTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventSequencerSetChangeTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventSequencerSetChangeTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventSequencerSetChangeTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventSequencerSetChangeTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventSequencerSetChangeFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventSequencerSetChangeFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventSequencerSetChangeFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventSequencerSetChangeFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventSequencerSetChangeFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventSequencerSetChangeFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventSequencerSetChangeFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventSequencerSetChangeFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventSequencerSetChangeFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventSequencerSetChangeFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventSequencerSetChangeFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventSequencerSetChangeFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventSequencerSetChangeFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventSequencerSetChangeFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventSequencerSetChangeFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventSequencerSetChangeFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventSequencerSetChangeFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventSequencerSetChangeFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventSequencerSetChangeFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventSequencerSetChangeFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0Start_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0Start_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventCounter0Start_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventCounter0Start_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0StartMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0StartMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0StartMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0StartMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0StartUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0StartUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0StartVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0StartVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0StartAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0StartAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0StartTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0StartTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0StartDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0StartDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0StartDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0StartDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0StartTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0StartTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventCounter0StartTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventCounter0StartTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0StartTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0StartTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0StartTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0StartTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0StartTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0StartTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0StartTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0StartTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0StartTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0StartTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0StartTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0StartTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0StartTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0StartTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0StartTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0StartTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0StartFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0StartFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventCounter0StartFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventCounter0StartFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0StartFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0StartFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0StartFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0StartFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0StartFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0StartFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0StartFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0StartFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0StartFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0StartFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0StartFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0StartFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0StartFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0StartFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0StartFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0StartFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1Start_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1Start_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventCounter1Start_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventCounter1Start_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1StartMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1StartMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1StartMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1StartMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1StartUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1StartUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1StartVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1StartVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1StartAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1StartAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1StartTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1StartTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1StartDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1StartDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1StartDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1StartDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1StartTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1StartTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventCounter1StartTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventCounter1StartTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1StartTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1StartTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1StartTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1StartTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1StartTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1StartTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1StartTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1StartTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1StartTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1StartTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1StartTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1StartTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1StartTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1StartTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1StartTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1StartTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1StartFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1StartFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventCounter1StartFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventCounter1StartFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1StartFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1StartFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1StartFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1StartFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1StartFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1StartFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1StartFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1StartFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1StartFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1StartFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1StartFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1StartFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1StartFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1StartFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1StartFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1StartFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0End_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0End_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventCounter0End_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventCounter0End_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0EndMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0EndMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0EndMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0EndMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0EndUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0EndUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0EndVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0EndVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0EndAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0EndAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0EndTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0EndTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0EndDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0EndDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0EndDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0EndDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0EndTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0EndTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventCounter0EndTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventCounter0EndTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0EndTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0EndTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0EndTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0EndTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0EndTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0EndTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0EndTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0EndTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0EndTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0EndTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0EndTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0EndTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0EndTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0EndTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0EndTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0EndTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0EndFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0EndFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventCounter0EndFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventCounter0EndFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0EndFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0EndFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0EndFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0EndFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0EndFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0EndFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0EndFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0EndFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0EndFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0EndFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0EndFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0EndFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0EndFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0EndFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter0EndFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter0EndFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1End_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1End_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventCounter1End_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventCounter1End_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1EndMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1EndMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1EndMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1EndMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1EndUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1EndUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1EndVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1EndVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1EndAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1EndAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1EndTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1EndTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1EndDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1EndDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1EndDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1EndDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1EndTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1EndTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventCounter1EndTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventCounter1EndTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1EndTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1EndTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1EndTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1EndTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1EndTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1EndTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1EndTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1EndTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1EndTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1EndTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1EndTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1EndTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1EndTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1EndTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1EndTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1EndTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1EndFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1EndFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventCounter1EndFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventCounter1EndFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1EndFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1EndFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1EndFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1EndFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1EndFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1EndFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1EndFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1EndFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1EndFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1EndFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1EndFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1EndFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1EndFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1EndFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventCounter1EndFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventCounter1EndFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0Start_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0Start_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventTimer0Start_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventTimer0Start_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0StartMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0StartMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0StartMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0StartMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0StartUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0StartUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0StartVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0StartVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0StartAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0StartAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0StartTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0StartTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0StartDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0StartDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0StartDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0StartDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0StartTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0StartTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventTimer0StartTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventTimer0StartTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0StartTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0StartTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0StartTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0StartTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0StartTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0StartTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0StartTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0StartTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0StartTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0StartTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0StartTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0StartTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0StartTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0StartTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0StartTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0StartTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0StartFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0StartFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventTimer0StartFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventTimer0StartFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0StartFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0StartFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0StartFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0StartFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0StartFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0StartFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0StartFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0StartFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0StartFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0StartFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0StartFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0StartFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0StartFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0StartFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0StartFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0StartFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1Start_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1Start_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventTimer1Start_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventTimer1Start_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1StartMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1StartMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1StartMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1StartMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1StartUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1StartUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1StartVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1StartVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1StartAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1StartAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1StartTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1StartTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1StartDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1StartDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1StartDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1StartDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1StartTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1StartTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventTimer1StartTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventTimer1StartTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1StartTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1StartTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1StartTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1StartTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1StartTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1StartTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1StartTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1StartTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1StartTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1StartTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1StartTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1StartTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1StartTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1StartTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1StartTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1StartTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1StartFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1StartFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventTimer1StartFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventTimer1StartFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1StartFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1StartFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1StartFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1StartFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1StartFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1StartFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1StartFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1StartFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1StartFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1StartFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1StartFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1StartFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1StartFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1StartFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1StartFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1StartFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0End_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0End_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventTimer0End_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventTimer0End_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0EndMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0EndMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0EndMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0EndMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0EndUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0EndUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0EndVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0EndVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0EndAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0EndAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0EndTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0EndTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0EndDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0EndDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0EndDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0EndDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0EndTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0EndTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventTimer0EndTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventTimer0EndTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0EndTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0EndTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0EndTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0EndTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0EndTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0EndTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0EndTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0EndTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0EndTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0EndTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0EndTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0EndTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0EndTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0EndTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0EndTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0EndTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0EndFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0EndFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventTimer0EndFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventTimer0EndFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0EndFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0EndFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0EndFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0EndFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0EndFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0EndFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0EndFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0EndFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0EndFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0EndFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0EndFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0EndFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0EndFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0EndFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer0EndFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer0EndFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1End_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1End_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventTimer1End_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventTimer1End_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1EndMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1EndMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1EndMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1EndMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1EndUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1EndUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1EndVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1EndVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1EndAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1EndAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1EndTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1EndTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1EndDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1EndDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1EndDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1EndDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1EndTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1EndTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventTimer1EndTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventTimer1EndTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1EndTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1EndTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1EndTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1EndTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1EndTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1EndTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1EndTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1EndTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1EndTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1EndTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1EndTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1EndTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1EndTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1EndTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1EndTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1EndTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1EndFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1EndFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventTimer1EndFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventTimer1EndFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1EndFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1EndFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1EndFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1EndFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1EndFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1EndFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1EndFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1EndFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1EndFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1EndFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1EndFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1EndFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1EndFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1EndFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTimer1EndFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTimer1EndFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0Stopped_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0Stopped_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventEncoder0Stopped_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventEncoder0Stopped_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0StoppedMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0StoppedMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0StoppedMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0StoppedMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0StoppedUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0StoppedUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0StoppedVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0StoppedVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0StoppedAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0StoppedAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0StoppedTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0StoppedTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0StoppedDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0StoppedDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0StoppedDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0StoppedDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0StoppedTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0StoppedTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventEncoder0StoppedTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventEncoder0StoppedTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0StoppedTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0StoppedTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0StoppedTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0StoppedTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0StoppedTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0StoppedTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0StoppedTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0StoppedTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0StoppedTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0StoppedTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0StoppedTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0StoppedTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0StoppedTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0StoppedTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0StoppedTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0StoppedTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0StoppedFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0StoppedFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventEncoder0StoppedFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventEncoder0StoppedFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0StoppedFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0StoppedFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0StoppedFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0StoppedFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0StoppedFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0StoppedFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0StoppedFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0StoppedFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0StoppedFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0StoppedFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0StoppedFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0StoppedFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0StoppedFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0StoppedFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0StoppedFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0StoppedFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1Stopped_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1Stopped_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventEncoder1Stopped_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventEncoder1Stopped_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1StoppedMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1StoppedMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1StoppedMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1StoppedMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1StoppedUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1StoppedUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1StoppedVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1StoppedVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1StoppedAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1StoppedAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1StoppedTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1StoppedTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1StoppedDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1StoppedDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1StoppedDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1StoppedDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1StoppedTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1StoppedTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventEncoder1StoppedTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventEncoder1StoppedTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1StoppedTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1StoppedTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1StoppedTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1StoppedTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1StoppedTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1StoppedTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1StoppedTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1StoppedTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1StoppedTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1StoppedTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1StoppedTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1StoppedTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1StoppedTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1StoppedTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1StoppedTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1StoppedTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1StoppedFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1StoppedFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventEncoder1StoppedFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventEncoder1StoppedFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1StoppedFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1StoppedFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1StoppedFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1StoppedFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1StoppedFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1StoppedFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1StoppedFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1StoppedFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1StoppedFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1StoppedFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1StoppedFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1StoppedFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1StoppedFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1StoppedFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1StoppedFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1StoppedFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0Restarted_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0Restarted_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventEncoder0Restarted_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventEncoder0Restarted_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0RestartedMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0RestartedMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0RestartedMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0RestartedMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0RestartedUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0RestartedUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0RestartedVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0RestartedVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0RestartedAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0RestartedAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0RestartedTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0RestartedTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0RestartedDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0RestartedDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0RestartedDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0RestartedDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0RestartedTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0RestartedTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventEncoder0RestartedTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventEncoder0RestartedTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0RestartedTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0RestartedTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0RestartedTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0RestartedTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0RestartedTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0RestartedTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0RestartedTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0RestartedTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0RestartedTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0RestartedTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0RestartedTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0RestartedTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0RestartedTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0RestartedTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0RestartedTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0RestartedTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0RestartedFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0RestartedFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventEncoder0RestartedFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventEncoder0RestartedFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0RestartedFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0RestartedFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0RestartedFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0RestartedFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0RestartedFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0RestartedFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0RestartedFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0RestartedFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0RestartedFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0RestartedFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0RestartedFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0RestartedFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0RestartedFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0RestartedFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder0RestartedFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder0RestartedFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1Restarted_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1Restarted_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventEncoder1Restarted_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventEncoder1Restarted_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1RestartedMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1RestartedMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1RestartedMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1RestartedMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1RestartedUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1RestartedUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1RestartedVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1RestartedVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1RestartedAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1RestartedAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1RestartedTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1RestartedTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1RestartedDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1RestartedDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1RestartedDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1RestartedDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1RestartedTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1RestartedTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventEncoder1RestartedTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventEncoder1RestartedTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1RestartedTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1RestartedTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1RestartedTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1RestartedTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1RestartedTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1RestartedTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1RestartedTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1RestartedTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1RestartedTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1RestartedTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1RestartedTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1RestartedTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1RestartedTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1RestartedTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1RestartedTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1RestartedTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1RestartedFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1RestartedFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventEncoder1RestartedFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventEncoder1RestartedFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1RestartedFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1RestartedFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1RestartedFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1RestartedFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1RestartedFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1RestartedFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1RestartedFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1RestartedFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1RestartedFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1RestartedFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1RestartedFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1RestartedFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1RestartedFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1RestartedFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventEncoder1RestartedFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventEncoder1RestartedFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0RisingEdge_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0RisingEdge_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventLine0RisingEdge_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventLine0RisingEdge_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0RisingEdgeMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0RisingEdgeMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0RisingEdgeMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0RisingEdgeMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0RisingEdgeUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0RisingEdgeUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0RisingEdgeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0RisingEdgeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0RisingEdgeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0RisingEdgeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0RisingEdgeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0RisingEdgeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0RisingEdgeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0RisingEdgeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0RisingEdgeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0RisingEdgeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0RisingEdgeTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0RisingEdgeTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventLine0RisingEdgeTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventLine0RisingEdgeTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0RisingEdgeTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0RisingEdgeTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0RisingEdgeTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0RisingEdgeTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0RisingEdgeTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0RisingEdgeTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0RisingEdgeTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0RisingEdgeTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0RisingEdgeTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0RisingEdgeTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0RisingEdgeTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0RisingEdgeTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0RisingEdgeTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0RisingEdgeTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0RisingEdgeTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0RisingEdgeTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0RisingEdgeFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0RisingEdgeFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventLine0RisingEdgeFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventLine0RisingEdgeFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0RisingEdgeFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0RisingEdgeFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0RisingEdgeFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0RisingEdgeFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0RisingEdgeFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0RisingEdgeFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0RisingEdgeFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0RisingEdgeFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0RisingEdgeFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0RisingEdgeFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0RisingEdgeFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0RisingEdgeFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0RisingEdgeFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0RisingEdgeFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0RisingEdgeFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0RisingEdgeFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1RisingEdge_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1RisingEdge_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventLine1RisingEdge_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventLine1RisingEdge_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1RisingEdgeMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1RisingEdgeMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1RisingEdgeMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1RisingEdgeMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1RisingEdgeUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1RisingEdgeUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1RisingEdgeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1RisingEdgeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1RisingEdgeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1RisingEdgeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1RisingEdgeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1RisingEdgeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1RisingEdgeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1RisingEdgeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1RisingEdgeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1RisingEdgeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1RisingEdgeTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1RisingEdgeTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventLine1RisingEdgeTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventLine1RisingEdgeTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1RisingEdgeTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1RisingEdgeTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1RisingEdgeTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1RisingEdgeTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1RisingEdgeTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1RisingEdgeTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1RisingEdgeTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1RisingEdgeTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1RisingEdgeTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1RisingEdgeTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1RisingEdgeTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1RisingEdgeTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1RisingEdgeTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1RisingEdgeTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1RisingEdgeTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1RisingEdgeTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1RisingEdgeFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1RisingEdgeFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventLine1RisingEdgeFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventLine1RisingEdgeFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1RisingEdgeFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1RisingEdgeFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1RisingEdgeFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1RisingEdgeFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1RisingEdgeFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1RisingEdgeFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1RisingEdgeFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1RisingEdgeFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1RisingEdgeFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1RisingEdgeFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1RisingEdgeFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1RisingEdgeFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1RisingEdgeFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1RisingEdgeFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1RisingEdgeFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1RisingEdgeFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0FallingEdge_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0FallingEdge_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventLine0FallingEdge_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventLine0FallingEdge_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0FallingEdgeMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0FallingEdgeMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0FallingEdgeMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0FallingEdgeMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0FallingEdgeUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0FallingEdgeUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0FallingEdgeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0FallingEdgeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0FallingEdgeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0FallingEdgeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0FallingEdgeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0FallingEdgeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0FallingEdgeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0FallingEdgeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0FallingEdgeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0FallingEdgeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0FallingEdgeTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0FallingEdgeTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventLine0FallingEdgeTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventLine0FallingEdgeTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0FallingEdgeTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0FallingEdgeTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0FallingEdgeTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0FallingEdgeTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0FallingEdgeTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0FallingEdgeTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0FallingEdgeTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0FallingEdgeTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0FallingEdgeTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0FallingEdgeTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0FallingEdgeTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0FallingEdgeTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0FallingEdgeTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0FallingEdgeTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0FallingEdgeTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0FallingEdgeTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0FallingEdgeFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0FallingEdgeFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventLine0FallingEdgeFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventLine0FallingEdgeFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0FallingEdgeFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0FallingEdgeFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0FallingEdgeFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0FallingEdgeFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0FallingEdgeFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0FallingEdgeFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0FallingEdgeFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0FallingEdgeFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0FallingEdgeFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0FallingEdgeFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0FallingEdgeFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0FallingEdgeFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0FallingEdgeFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0FallingEdgeFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0FallingEdgeFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0FallingEdgeFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1FallingEdge_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1FallingEdge_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventLine1FallingEdge_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventLine1FallingEdge_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1FallingEdgeMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1FallingEdgeMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1FallingEdgeMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1FallingEdgeMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1FallingEdgeUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1FallingEdgeUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1FallingEdgeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1FallingEdgeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1FallingEdgeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1FallingEdgeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1FallingEdgeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1FallingEdgeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1FallingEdgeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1FallingEdgeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1FallingEdgeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1FallingEdgeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1FallingEdgeTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1FallingEdgeTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventLine1FallingEdgeTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventLine1FallingEdgeTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1FallingEdgeTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1FallingEdgeTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1FallingEdgeTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1FallingEdgeTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1FallingEdgeTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1FallingEdgeTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1FallingEdgeTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1FallingEdgeTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1FallingEdgeTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1FallingEdgeTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1FallingEdgeTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1FallingEdgeTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1FallingEdgeTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1FallingEdgeTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1FallingEdgeTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1FallingEdgeTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1FallingEdgeFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1FallingEdgeFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventLine1FallingEdgeFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventLine1FallingEdgeFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1FallingEdgeFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1FallingEdgeFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1FallingEdgeFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1FallingEdgeFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1FallingEdgeFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1FallingEdgeFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1FallingEdgeFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1FallingEdgeFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1FallingEdgeFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1FallingEdgeFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1FallingEdgeFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1FallingEdgeFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1FallingEdgeFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1FallingEdgeFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1FallingEdgeFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1FallingEdgeFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0AnyEdge_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0AnyEdge_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventLine0AnyEdge_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventLine0AnyEdge_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0AnyEdgeMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0AnyEdgeMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0AnyEdgeMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0AnyEdgeMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0AnyEdgeUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0AnyEdgeUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0AnyEdgeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0AnyEdgeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0AnyEdgeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0AnyEdgeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0AnyEdgeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0AnyEdgeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0AnyEdgeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0AnyEdgeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0AnyEdgeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0AnyEdgeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0AnyEdgeTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0AnyEdgeTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventLine0AnyEdgeTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventLine0AnyEdgeTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0AnyEdgeTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0AnyEdgeTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0AnyEdgeTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0AnyEdgeTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0AnyEdgeTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0AnyEdgeTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0AnyEdgeTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0AnyEdgeTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0AnyEdgeTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0AnyEdgeTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0AnyEdgeTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0AnyEdgeTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0AnyEdgeTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0AnyEdgeTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0AnyEdgeTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0AnyEdgeTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0AnyEdgeFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0AnyEdgeFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventLine0AnyEdgeFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventLine0AnyEdgeFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0AnyEdgeFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0AnyEdgeFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0AnyEdgeFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0AnyEdgeFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0AnyEdgeFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0AnyEdgeFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0AnyEdgeFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0AnyEdgeFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0AnyEdgeFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0AnyEdgeFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0AnyEdgeFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0AnyEdgeFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0AnyEdgeFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0AnyEdgeFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine0AnyEdgeFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine0AnyEdgeFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1AnyEdge_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1AnyEdge_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventLine1AnyEdge_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventLine1AnyEdge_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1AnyEdgeMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1AnyEdgeMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1AnyEdgeMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1AnyEdgeMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1AnyEdgeUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1AnyEdgeUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1AnyEdgeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1AnyEdgeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1AnyEdgeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1AnyEdgeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1AnyEdgeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1AnyEdgeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1AnyEdgeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1AnyEdgeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1AnyEdgeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1AnyEdgeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1AnyEdgeTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1AnyEdgeTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventLine1AnyEdgeTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventLine1AnyEdgeTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1AnyEdgeTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1AnyEdgeTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1AnyEdgeTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1AnyEdgeTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1AnyEdgeTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1AnyEdgeTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1AnyEdgeTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1AnyEdgeTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1AnyEdgeTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1AnyEdgeTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1AnyEdgeTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1AnyEdgeTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1AnyEdgeTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1AnyEdgeTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1AnyEdgeTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1AnyEdgeTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1AnyEdgeFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1AnyEdgeFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventLine1AnyEdgeFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventLine1AnyEdgeFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1AnyEdgeFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1AnyEdgeFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1AnyEdgeFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1AnyEdgeFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1AnyEdgeFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1AnyEdgeFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1AnyEdgeFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1AnyEdgeFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1AnyEdgeFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1AnyEdgeFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1AnyEdgeFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1AnyEdgeFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1AnyEdgeFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1AnyEdgeFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLine1AnyEdgeFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLine1AnyEdgeFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger0_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger0_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventLinkTrigger0_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventLinkTrigger0_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger0Min_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger0Min_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger0Max_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger0Max_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger0Unit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger0Unit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger0Visibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger0Visibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger0AccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger0AccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger0Tooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger0Tooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger0Description_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger0Description_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger0DisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger0DisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger0Timestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger0Timestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventLinkTrigger0Timestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventLinkTrigger0Timestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger0TimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger0TimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger0TimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger0TimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger0TimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger0TimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger0TimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger0TimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger0TimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger0TimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger0TimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger0TimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger0TimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger0TimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger0TimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger0TimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger0FrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger0FrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventLinkTrigger0FrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventLinkTrigger0FrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger0FrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger0FrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger0FrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger0FrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger0FrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger0FrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger0FrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger0FrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger0FrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger0FrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger0FrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger0FrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger0FrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger0FrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger0FrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger0FrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger1_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger1_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventLinkTrigger1_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventLinkTrigger1_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger1Min_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger1Min_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger1Max_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger1Max_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger1Unit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger1Unit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger1Visibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger1Visibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger1AccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger1AccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger1Tooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger1Tooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger1Description_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger1Description_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger1DisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger1DisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger1Timestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger1Timestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventLinkTrigger1Timestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventLinkTrigger1Timestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger1TimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger1TimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger1TimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger1TimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger1TimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger1TimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger1TimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger1TimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger1TimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger1TimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger1TimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger1TimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger1TimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger1TimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger1TimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger1TimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger1FrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger1FrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventLinkTrigger1FrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventLinkTrigger1FrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger1FrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger1FrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger1FrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger1FrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger1FrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger1FrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger1FrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger1FrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger1FrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger1FrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger1FrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger1FrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger1FrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger1FrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkTrigger1FrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkTrigger1FrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkSpeedChange_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkSpeedChange_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventLinkSpeedChange_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventLinkSpeedChange_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkSpeedChangeMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkSpeedChangeMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkSpeedChangeMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkSpeedChangeMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkSpeedChangeUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkSpeedChangeUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkSpeedChangeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkSpeedChangeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkSpeedChangeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkSpeedChangeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkSpeedChangeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkSpeedChangeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkSpeedChangeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkSpeedChangeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkSpeedChangeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkSpeedChangeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkSpeedChangeTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkSpeedChangeTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventLinkSpeedChangeTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventLinkSpeedChangeTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkSpeedChangeTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkSpeedChangeTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkSpeedChangeTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkSpeedChangeTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkSpeedChangeTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkSpeedChangeTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkSpeedChangeTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkSpeedChangeTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkSpeedChangeTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkSpeedChangeTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkSpeedChangeTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkSpeedChangeTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkSpeedChangeTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkSpeedChangeTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkSpeedChangeTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkSpeedChangeTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkSpeedChangeFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkSpeedChangeFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventLinkSpeedChangeFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventLinkSpeedChangeFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkSpeedChangeFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkSpeedChangeFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkSpeedChangeFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkSpeedChangeFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkSpeedChangeFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkSpeedChangeFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkSpeedChangeFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkSpeedChangeFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkSpeedChangeFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkSpeedChangeFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkSpeedChangeFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkSpeedChangeFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkSpeedChangeFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkSpeedChangeFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventLinkSpeedChangeFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventLinkSpeedChangeFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventActionLate_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventActionLate_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventActionLate_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventActionLate_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventActionLateMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventActionLateMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventActionLateMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventActionLateMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventActionLateUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventActionLateUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventActionLateVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventActionLateVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventActionLateAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventActionLateAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventActionLateTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventActionLateTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventActionLateDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventActionLateDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventActionLateDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventActionLateDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventActionLateTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventActionLateTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventActionLateTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventActionLateTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventActionLateTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventActionLateTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventActionLateTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventActionLateTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventActionLateTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventActionLateTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventActionLateTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventActionLateTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventActionLateTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventActionLateTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventActionLateTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventActionLateTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventActionLateTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventActionLateTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventActionLateTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventActionLateTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventActionLateFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventActionLateFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventActionLateFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventActionLateFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventActionLateFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventActionLateFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventActionLateFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventActionLateFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventActionLateFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventActionLateFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventActionLateFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventActionLateFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventActionLateFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventActionLateFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventActionLateFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventActionLateFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventActionLateFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventActionLateFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventActionLateFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventActionLateFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventPrimaryApplicationSwitch_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventPrimaryApplicationSwitch_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventPrimaryApplicationSwitch_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventPrimaryApplicationSwitch_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventPrimaryApplicationSwitchMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventPrimaryApplicationSwitchMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventPrimaryApplicationSwitchMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventPrimaryApplicationSwitchMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventPrimaryApplicationSwitchUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventPrimaryApplicationSwitchUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventPrimaryApplicationSwitchVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventPrimaryApplicationSwitchVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventPrimaryApplicationSwitchAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventPrimaryApplicationSwitchAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventPrimaryApplicationSwitchTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventPrimaryApplicationSwitchTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventPrimaryApplicationSwitchDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventPrimaryApplicationSwitchDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventPrimaryApplicationSwitchDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventPrimaryApplicationSwitchDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventPrimaryApplicationSwitchTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventPrimaryApplicationSwitchTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventPrimaryApplicationSwitchTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventPrimaryApplicationSwitchTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventPrimaryApplicationSwitchTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventPrimaryApplicationSwitchTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventPrimaryApplicationSwitchTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventPrimaryApplicationSwitchTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventPrimaryApplicationSwitchTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventPrimaryApplicationSwitchTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventPrimaryApplicationSwitchTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventPrimaryApplicationSwitchTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventPrimaryApplicationSwitchTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventPrimaryApplicationSwitchTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventPrimaryApplicationSwitchTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventPrimaryApplicationSwitchTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventPrimaryApplicationSwitchTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventPrimaryApplicationSwitchTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventPrimaryApplicationSwitchTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventPrimaryApplicationSwitchTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventPrimaryApplicationSwitchFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventPrimaryApplicationSwitchFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventPrimaryApplicationSwitchFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventPrimaryApplicationSwitchFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventPrimaryApplicationSwitchFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventPrimaryApplicationSwitchFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventPrimaryApplicationSwitchFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventPrimaryApplicationSwitchFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventPrimaryApplicationSwitchFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventPrimaryApplicationSwitchFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventPrimaryApplicationSwitchFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventPrimaryApplicationSwitchFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventPrimaryApplicationSwitchFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventPrimaryApplicationSwitchFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventPrimaryApplicationSwitchFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventPrimaryApplicationSwitchFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventPrimaryApplicationSwitchFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventPrimaryApplicationSwitchFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventPrimaryApplicationSwitchFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventPrimaryApplicationSwitchFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventError_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventError_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventError_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventError_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventErrorMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventErrorMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventErrorMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventErrorMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventErrorUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventErrorUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventErrorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventErrorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventErrorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventErrorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventErrorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventErrorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventErrorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventErrorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventErrorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventErrorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventErrorTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventErrorTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventErrorTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventErrorTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventErrorTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventErrorTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventErrorTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventErrorTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventErrorTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventErrorTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventErrorTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventErrorTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventErrorTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventErrorTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventErrorTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventErrorTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventErrorTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventErrorTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventErrorTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventErrorTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventErrorFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventErrorFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventErrorFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventErrorFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventErrorFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventErrorFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventErrorFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventErrorFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventErrorFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventErrorFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventErrorFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventErrorFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventErrorFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventErrorFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventErrorFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventErrorFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventErrorFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventErrorFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventErrorFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventErrorFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventErrorCode_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventErrorCode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventErrorCode_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventErrorCode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventErrorCodeMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventErrorCodeMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventErrorCodeMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventErrorCodeMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventErrorCodeUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventErrorCodeUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventErrorCodeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventErrorCodeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventErrorCodeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventErrorCodeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventErrorCodeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventErrorCodeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventErrorCodeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventErrorCodeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventErrorCodeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventErrorCodeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTest_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTest_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventTest_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventTest_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTestMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTestMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTestMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTestMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTestUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTestUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTestVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTestVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTestAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTestAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTestTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTestTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTestDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTestDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTestDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTestDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTestTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTestTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setEventTestTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setEventTestTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTestTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTestTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTestTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTestTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTestTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTestTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTestTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTestTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTestTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getEventTestTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTestTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTestTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTestTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTestTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getEventTestTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getEventTestTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserSetSelector_V2 ( FliContext context , UserSetSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getUserSetSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'UserSetSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setUserSetSelector_V2 ( FliContext context , UserSetSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrUserSetSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setUserSetSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'UserSetSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserSetSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getUserSetSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserSetSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getUserSetSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserSetSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getUserSetSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserSetSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getUserSetSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserSetSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getUserSetSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_executeUserSetLoad_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_executeUserSetLoad_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserSetLoadVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getUserSetLoadVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserSetLoadAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getUserSetLoadAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserSetLoadTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getUserSetLoadTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserSetLoadDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getUserSetLoadDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserSetLoadDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getUserSetLoadDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_executeUserSetSave_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_executeUserSetSave_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserSetSaveVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getUserSetSaveVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserSetSaveAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getUserSetSaveAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserSetSaveTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getUserSetSaveTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserSetSaveDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getUserSetSaveDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserSetSaveDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getUserSetSaveDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserSetDefault_V2 ( FliContext context , UserSetDefaultEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getUserSetDefault_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'UserSetDefaultEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setUserSetDefault_V2 ( FliContext context , UserSetDefaultEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrUserSetDefaultEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setUserSetDefault_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'UserSetDefaultEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserSetDefaultVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getUserSetDefaultVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserSetDefaultAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getUserSetDefaultAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserSetDefaultTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getUserSetDefaultTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserSetDefaultDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getUserSetDefaultDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserSetDefaultDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getUserSetDefaultDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserSetFeatureSelector_V2 ( FliContext context , UserSetFeatureSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getUserSetFeatureSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'UserSetFeatureSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setUserSetFeatureSelector_V2 ( FliContext context , UserSetFeatureSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrUserSetFeatureSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setUserSetFeatureSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'UserSetFeatureSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserSetFeatureSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getUserSetFeatureSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserSetFeatureSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getUserSetFeatureSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserSetFeatureSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getUserSetFeatureSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserSetFeatureSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getUserSetFeatureSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserSetFeatureSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getUserSetFeatureSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserSetFeatureEnable_V2 ( FliContext context , _Bool * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getUserSetFeatureEnable_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setUserSetFeatureEnable_V2 ( FliContext context , _Bool val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliSfncCamera_setUserSetFeatureEnable_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserSetFeatureEnableVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getUserSetFeatureEnableVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserSetFeatureEnableAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getUserSetFeatureEnableAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserSetFeatureEnableTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getUserSetFeatureEnableTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserSetFeatureEnableDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getUserSetFeatureEnableDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getUserSetFeatureEnableDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getUserSetFeatureEnableDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerMode_V2 ( FliContext context , SequencerModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'SequencerModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setSequencerMode_V2 ( FliContext context , SequencerModeEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrSequencerModeEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setSequencerMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'SequencerModeEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerModeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerModeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerModeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerModeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerModeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerModeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerModeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerModeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerModeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerModeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerConfigurationMode_V2 ( FliContext context , SequencerConfigurationModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerConfigurationMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'SequencerConfigurationModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setSequencerConfigurationMode_V2 ( FliContext context , SequencerConfigurationModeEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrSequencerConfigurationModeEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setSequencerConfigurationMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'SequencerConfigurationModeEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerConfigurationModeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerConfigurationModeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerConfigurationModeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerConfigurationModeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerConfigurationModeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerConfigurationModeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerConfigurationModeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerConfigurationModeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerConfigurationModeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerConfigurationModeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerFeatureSelector_V2 ( FliContext context , SequencerFeatureSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerFeatureSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'SequencerFeatureSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setSequencerFeatureSelector_V2 ( FliContext context , SequencerFeatureSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrSequencerFeatureSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setSequencerFeatureSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'SequencerFeatureSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerFeatureSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerFeatureSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerFeatureSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerFeatureSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerFeatureSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerFeatureSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerFeatureSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerFeatureSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerFeatureSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerFeatureSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerFeatureEnable_V2 ( FliContext context , _Bool * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerFeatureEnable_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setSequencerFeatureEnable_V2 ( FliContext context , _Bool val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliSfncCamera_setSequencerFeatureEnable_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerFeatureEnableVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerFeatureEnableVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerFeatureEnableAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerFeatureEnableAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerFeatureEnableTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerFeatureEnableTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerFeatureEnableDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerFeatureEnableDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerFeatureEnableDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerFeatureEnableDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerSetSelector_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerSetSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setSequencerSetSelector_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setSequencerSetSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerSetSelectorMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerSetSelectorMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerSetSelectorMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerSetSelectorMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerSetSelectorUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerSetSelectorUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerSetSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerSetSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerSetSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerSetSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerSetSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerSetSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerSetSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerSetSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerSetSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerSetSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_executeSequencerSetSave_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_executeSequencerSetSave_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerSetSaveVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerSetSaveVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerSetSaveAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerSetSaveAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerSetSaveTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerSetSaveTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerSetSaveDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerSetSaveDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerSetSaveDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerSetSaveDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_executeSequencerSetLoad_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_executeSequencerSetLoad_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerSetLoadVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerSetLoadVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerSetLoadAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerSetLoadAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerSetLoadTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerSetLoadTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerSetLoadDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerSetLoadDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerSetLoadDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerSetLoadDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerSetActive_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerSetActive_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setSequencerSetActive_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setSequencerSetActive_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerSetActiveMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerSetActiveMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerSetActiveMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerSetActiveMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerSetActiveUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerSetActiveUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerSetActiveVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerSetActiveVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerSetActiveAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerSetActiveAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerSetActiveTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerSetActiveTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerSetActiveDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerSetActiveDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerSetActiveDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerSetActiveDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerSetStart_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerSetStart_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setSequencerSetStart_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setSequencerSetStart_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerSetStartMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerSetStartMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerSetStartMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerSetStartMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerSetStartUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerSetStartUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerSetStartVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerSetStartVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerSetStartAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerSetStartAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerSetStartTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerSetStartTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerSetStartDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerSetStartDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerSetStartDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerSetStartDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerPathSelector_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerPathSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setSequencerPathSelector_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setSequencerPathSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerPathSelectorMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerPathSelectorMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerPathSelectorMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerPathSelectorMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerPathSelectorUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerPathSelectorUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerPathSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerPathSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerPathSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerPathSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerPathSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerPathSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerPathSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerPathSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerPathSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerPathSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerSetNext_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerSetNext_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setSequencerSetNext_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setSequencerSetNext_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerSetNextMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerSetNextMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerSetNextMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerSetNextMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerSetNextUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerSetNextUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerSetNextVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerSetNextVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerSetNextAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerSetNextAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerSetNextTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerSetNextTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerSetNextDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerSetNextDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerSetNextDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerSetNextDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerTriggerSource_V2 ( FliContext context , SequencerTriggerSourceEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerTriggerSource_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'SequencerTriggerSourceEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setSequencerTriggerSource_V2 ( FliContext context , SequencerTriggerSourceEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrSequencerTriggerSourceEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setSequencerTriggerSource_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'SequencerTriggerSourceEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerTriggerSourceVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerTriggerSourceVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerTriggerSourceAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerTriggerSourceAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerTriggerSourceTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerTriggerSourceTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerTriggerSourceDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerTriggerSourceDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerTriggerSourceDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerTriggerSourceDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerTriggerActivation_V2 ( FliContext context , SequencerTriggerActivationEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerTriggerActivation_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'SequencerTriggerActivationEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setSequencerTriggerActivation_V2 ( FliContext context , SequencerTriggerActivationEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrSequencerTriggerActivationEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setSequencerTriggerActivation_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'SequencerTriggerActivationEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerTriggerActivationVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerTriggerActivationVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerTriggerActivationAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerTriggerActivationAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerTriggerActivationTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerTriggerActivationTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerTriggerActivationDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerTriggerActivationDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSequencerTriggerActivationDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSequencerTriggerActivationDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileSelector_V2 ( FliContext context , FileSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getFileSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'FileSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setFileSelector_V2 ( FliContext context , FileSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrFileSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setFileSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'FileSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getFileSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getFileSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getFileSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getFileSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getFileSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileOperationSelector_V2 ( FliContext context , FileOperationSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getFileOperationSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'FileOperationSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setFileOperationSelector_V2 ( FliContext context , FileOperationSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrFileOperationSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setFileOperationSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'FileOperationSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileOperationSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getFileOperationSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileOperationSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getFileOperationSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileOperationSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getFileOperationSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileOperationSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getFileOperationSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileOperationSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getFileOperationSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_executeFileOperationExecute_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_executeFileOperationExecute_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileOperationExecuteVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getFileOperationExecuteVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileOperationExecuteAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getFileOperationExecuteAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileOperationExecuteTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getFileOperationExecuteTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileOperationExecuteDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getFileOperationExecuteDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileOperationExecuteDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getFileOperationExecuteDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileOpenMode_V2 ( FliContext context , FileOpenModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getFileOpenMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'FileOpenModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setFileOpenMode_V2 ( FliContext context , FileOpenModeEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrFileOpenModeEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setFileOpenMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'FileOpenModeEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileOpenModeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getFileOpenModeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileOpenModeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getFileOpenModeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileOpenModeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getFileOpenModeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileOpenModeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getFileOpenModeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileOpenModeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getFileOpenModeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileAccessOffset_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getFileAccessOffset_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setFileAccessOffset_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setFileAccessOffset_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileAccessOffsetMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getFileAccessOffsetMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileAccessOffsetMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getFileAccessOffsetMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileAccessOffsetUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getFileAccessOffsetUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileAccessOffsetVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getFileAccessOffsetVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileAccessOffsetAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getFileAccessOffsetAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileAccessOffsetTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getFileAccessOffsetTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileAccessOffsetDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getFileAccessOffsetDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileAccessOffsetDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getFileAccessOffsetDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileAccessLength_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getFileAccessLength_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setFileAccessLength_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setFileAccessLength_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileAccessLengthMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getFileAccessLengthMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileAccessLengthMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getFileAccessLengthMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileAccessLengthUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getFileAccessLengthUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileAccessLengthVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getFileAccessLengthVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileAccessLengthAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getFileAccessLengthAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileAccessLengthTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getFileAccessLengthTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileAccessLengthDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getFileAccessLengthDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileAccessLengthDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getFileAccessLengthDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileOperationStatus_V2 ( FliContext context , FileOperationStatusEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getFileOperationStatus_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'FileOperationStatusEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setFileOperationStatus_V2 ( FliContext context , FileOperationStatusEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrFileOperationStatusEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setFileOperationStatus_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'FileOperationStatusEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileOperationStatusVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getFileOperationStatusVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileOperationStatusAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getFileOperationStatusAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileOperationStatusTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getFileOperationStatusTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileOperationStatusDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getFileOperationStatusDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileOperationStatusDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getFileOperationStatusDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileOperationResult_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getFileOperationResult_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setFileOperationResult_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setFileOperationResult_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileOperationResultMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getFileOperationResultMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileOperationResultMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getFileOperationResultMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileOperationResultUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getFileOperationResultUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileOperationResultVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getFileOperationResultVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileOperationResultAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getFileOperationResultAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileOperationResultTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getFileOperationResultTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileOperationResultDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getFileOperationResultDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileOperationResultDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getFileOperationResultDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileSize_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getFileSize_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setFileSize_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setFileSize_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileSizeMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getFileSizeMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileSizeMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getFileSizeMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileSizeUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getFileSizeUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileSizeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getFileSizeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileSizeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getFileSizeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileSizeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getFileSizeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileSizeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getFileSizeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getFileSizeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getFileSizeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSourceCount_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSourceCount_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setSourceCount_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setSourceCount_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSourceCountMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSourceCountMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSourceCountMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSourceCountMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSourceCountUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSourceCountUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSourceCountVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSourceCountVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSourceCountAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSourceCountAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSourceCountTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSourceCountTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSourceCountDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSourceCountDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSourceCountDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSourceCountDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSourceSelector_V2 ( FliContext context , SourceSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSourceSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'SourceSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setSourceSelector_V2 ( FliContext context , SourceSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrSourceSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setSourceSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'SourceSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSourceSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSourceSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSourceSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSourceSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSourceSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSourceSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSourceSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSourceSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSourceSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSourceSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSourceIDValue_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSourceIDValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setSourceIDValue_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setSourceIDValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSourceIDValueMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSourceIDValueMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSourceIDValueMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSourceIDValueMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSourceIDValueUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSourceIDValueUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSourceIDValueVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSourceIDValueVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSourceIDValueAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getSourceIDValueAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSourceIDValueTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSourceIDValueTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSourceIDValueDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSourceIDValueDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getSourceIDValueDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getSourceIDValueDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferSelector_V2 ( FliContext context , TransferSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'TransferSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setTransferSelector_V2 ( FliContext context , TransferSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrTransferSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setTransferSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'TransferSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferControlMode_V2 ( FliContext context , TransferControlModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferControlMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'TransferControlModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setTransferControlMode_V2 ( FliContext context , TransferControlModeEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrTransferControlModeEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setTransferControlMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'TransferControlModeEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferControlModeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferControlModeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferControlModeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferControlModeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferControlModeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferControlModeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferControlModeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferControlModeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferControlModeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferControlModeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferOperationMode_V2 ( FliContext context , TransferOperationModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferOperationMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'TransferOperationModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setTransferOperationMode_V2 ( FliContext context , TransferOperationModeEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrTransferOperationModeEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setTransferOperationMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'TransferOperationModeEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferOperationModeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferOperationModeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferOperationModeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferOperationModeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferOperationModeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferOperationModeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferOperationModeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferOperationModeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferOperationModeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferOperationModeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferBlockCount_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferBlockCount_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setTransferBlockCount_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setTransferBlockCount_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferBlockCountMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferBlockCountMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferBlockCountMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferBlockCountMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferBlockCountUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferBlockCountUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferBlockCountVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferBlockCountVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferBlockCountAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferBlockCountAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferBlockCountTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferBlockCountTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferBlockCountDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferBlockCountDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferBlockCountDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferBlockCountDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferBurstCount_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferBurstCount_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setTransferBurstCount_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setTransferBurstCount_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferBurstCountMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferBurstCountMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferBurstCountMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferBurstCountMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferBurstCountUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferBurstCountUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferBurstCountVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferBurstCountVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferBurstCountAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferBurstCountAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferBurstCountTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferBurstCountTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferBurstCountDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferBurstCountDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferBurstCountDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferBurstCountDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferQueueMaxBlockCount_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferQueueMaxBlockCount_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setTransferQueueMaxBlockCount_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setTransferQueueMaxBlockCount_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferQueueMaxBlockCountMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferQueueMaxBlockCountMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferQueueMaxBlockCountMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferQueueMaxBlockCountMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferQueueMaxBlockCountUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferQueueMaxBlockCountUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferQueueMaxBlockCountVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferQueueMaxBlockCountVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferQueueMaxBlockCountAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferQueueMaxBlockCountAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferQueueMaxBlockCountTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferQueueMaxBlockCountTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferQueueMaxBlockCountDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferQueueMaxBlockCountDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferQueueMaxBlockCountDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferQueueMaxBlockCountDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferQueueCurrentBlockCount_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferQueueCurrentBlockCount_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setTransferQueueCurrentBlockCount_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setTransferQueueCurrentBlockCount_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferQueueCurrentBlockCountMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferQueueCurrentBlockCountMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferQueueCurrentBlockCountMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferQueueCurrentBlockCountMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferQueueCurrentBlockCountUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferQueueCurrentBlockCountUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferQueueCurrentBlockCountVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferQueueCurrentBlockCountVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferQueueCurrentBlockCountAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferQueueCurrentBlockCountAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferQueueCurrentBlockCountTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferQueueCurrentBlockCountTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferQueueCurrentBlockCountDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferQueueCurrentBlockCountDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferQueueCurrentBlockCountDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferQueueCurrentBlockCountDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferQueueMode_V2 ( FliContext context , TransferQueueModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferQueueMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'TransferQueueModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setTransferQueueMode_V2 ( FliContext context , TransferQueueModeEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrTransferQueueModeEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setTransferQueueMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'TransferQueueModeEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferQueueModeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferQueueModeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferQueueModeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferQueueModeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferQueueModeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferQueueModeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferQueueModeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferQueueModeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferQueueModeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferQueueModeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_executeTransferStart_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_executeTransferStart_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferStartVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferStartVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferStartAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferStartAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferStartTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferStartTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferStartDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferStartDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferStartDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferStartDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_executeTransferStop_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_executeTransferStop_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferStopVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferStopVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferStopAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferStopAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferStopTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferStopTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferStopDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferStopDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferStopDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferStopDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_executeTransferAbort_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_executeTransferAbort_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferAbortVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferAbortVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferAbortAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferAbortAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferAbortTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferAbortTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferAbortDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferAbortDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferAbortDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferAbortDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_executeTransferPause_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_executeTransferPause_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferPauseVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferPauseVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferPauseAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferPauseAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferPauseTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferPauseTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferPauseDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferPauseDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferPauseDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferPauseDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_executeTransferResume_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_executeTransferResume_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferResumeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferResumeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferResumeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferResumeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferResumeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferResumeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferResumeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferResumeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferResumeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferResumeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferTriggerSelector_V2 ( FliContext context , TransferTriggerSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferTriggerSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'TransferTriggerSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setTransferTriggerSelector_V2 ( FliContext context , TransferTriggerSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrTransferTriggerSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setTransferTriggerSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'TransferTriggerSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferTriggerSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferTriggerSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferTriggerSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferTriggerSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferTriggerSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferTriggerSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferTriggerSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferTriggerSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferTriggerSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferTriggerSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferTriggerMode_V2 ( FliContext context , TransferTriggerModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferTriggerMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'TransferTriggerModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setTransferTriggerMode_V2 ( FliContext context , TransferTriggerModeEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrTransferTriggerModeEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setTransferTriggerMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'TransferTriggerModeEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferTriggerModeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferTriggerModeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferTriggerModeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferTriggerModeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferTriggerModeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferTriggerModeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferTriggerModeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferTriggerModeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferTriggerModeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferTriggerModeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferTriggerSource_V2 ( FliContext context , TransferTriggerSourceEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferTriggerSource_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'TransferTriggerSourceEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setTransferTriggerSource_V2 ( FliContext context , TransferTriggerSourceEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrTransferTriggerSourceEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setTransferTriggerSource_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'TransferTriggerSourceEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferTriggerSourceVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferTriggerSourceVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferTriggerSourceAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferTriggerSourceAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferTriggerSourceTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferTriggerSourceTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferTriggerSourceDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferTriggerSourceDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferTriggerSourceDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferTriggerSourceDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferTriggerActivation_V2 ( FliContext context , TransferTriggerActivationEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferTriggerActivation_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'TransferTriggerActivationEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setTransferTriggerActivation_V2 ( FliContext context , TransferTriggerActivationEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrTransferTriggerActivationEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setTransferTriggerActivation_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'TransferTriggerActivationEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferTriggerActivationVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferTriggerActivationVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferTriggerActivationAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferTriggerActivationAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferTriggerActivationTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferTriggerActivationTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferTriggerActivationDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferTriggerActivationDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferTriggerActivationDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferTriggerActivationDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferStatusSelector_V2 ( FliContext context , TransferStatusSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferStatusSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'TransferStatusSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setTransferStatusSelector_V2 ( FliContext context , TransferStatusSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrTransferStatusSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setTransferStatusSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'TransferStatusSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferStatusSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferStatusSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferStatusSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferStatusSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferStatusSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferStatusSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferStatusSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferStatusSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferStatusSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferStatusSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferStatus_V2 ( FliContext context , _Bool * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferStatus_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setTransferStatus_V2 ( FliContext context , _Bool val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliSfncCamera_setTransferStatus_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferStatusVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferStatusVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferStatusAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferStatusAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferStatusTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferStatusTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferStatusDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferStatusDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferStatusDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferStatusDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferComponentSelector_V2 ( FliContext context , TransferComponentSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferComponentSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'TransferComponentSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setTransferComponentSelector_V2 ( FliContext context , TransferComponentSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrTransferComponentSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setTransferComponentSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'TransferComponentSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferComponentSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferComponentSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferComponentSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferComponentSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferComponentSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferComponentSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferComponentSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferComponentSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferComponentSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferComponentSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferStreamChannel_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferStreamChannel_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setTransferStreamChannel_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setTransferStreamChannel_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferStreamChannelMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferStreamChannelMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferStreamChannelMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferStreamChannelMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferStreamChannelUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferStreamChannelUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferStreamChannelVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferStreamChannelVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferStreamChannelAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTransferStreamChannelAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferStreamChannelTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferStreamChannelTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferStreamChannelDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferStreamChannelDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTransferStreamChannelDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTransferStreamChannelDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dExtractionSelector_V2 ( FliContext context , Scan3dExtractionSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dExtractionSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'Scan3dExtractionSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setScan3dExtractionSelector_V2 ( FliContext context , Scan3dExtractionSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrScan3dExtractionSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setScan3dExtractionSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'Scan3dExtractionSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dExtractionSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dExtractionSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dExtractionSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dExtractionSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dExtractionSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dExtractionSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dExtractionSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dExtractionSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dExtractionSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dExtractionSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dExtractionSource_V2 ( FliContext context , Scan3dExtractionSourceEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dExtractionSource_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'Scan3dExtractionSourceEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setScan3dExtractionSource_V2 ( FliContext context , Scan3dExtractionSourceEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrScan3dExtractionSourceEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setScan3dExtractionSource_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'Scan3dExtractionSourceEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dExtractionSourceVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dExtractionSourceVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dExtractionSourceAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dExtractionSourceAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dExtractionSourceTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dExtractionSourceTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dExtractionSourceDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dExtractionSourceDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dExtractionSourceDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dExtractionSourceDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dExtractionMethod_V2 ( FliContext context , Scan3dExtractionMethodEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dExtractionMethod_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'Scan3dExtractionMethodEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setScan3dExtractionMethod_V2 ( FliContext context , Scan3dExtractionMethodEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrScan3dExtractionMethodEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setScan3dExtractionMethod_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'Scan3dExtractionMethodEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dExtractionMethodVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dExtractionMethodVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dExtractionMethodAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dExtractionMethodAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dExtractionMethodTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dExtractionMethodTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dExtractionMethodDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dExtractionMethodDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dExtractionMethodDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dExtractionMethodDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dDistanceUnit_V2 ( FliContext context , Scan3dDistanceUnitEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dDistanceUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'Scan3dDistanceUnitEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setScan3dDistanceUnit_V2 ( FliContext context , Scan3dDistanceUnitEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrScan3dDistanceUnitEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setScan3dDistanceUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'Scan3dDistanceUnitEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dDistanceUnitVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dDistanceUnitVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dDistanceUnitAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dDistanceUnitAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dDistanceUnitTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dDistanceUnitTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dDistanceUnitDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dDistanceUnitDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dDistanceUnitDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dDistanceUnitDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateSystem_V2 ( FliContext context , Scan3dCoordinateSystemEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateSystem_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'Scan3dCoordinateSystemEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setScan3dCoordinateSystem_V2 ( FliContext context , Scan3dCoordinateSystemEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrScan3dCoordinateSystemEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setScan3dCoordinateSystem_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'Scan3dCoordinateSystemEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateSystemVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateSystemVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateSystemAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateSystemAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateSystemTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateSystemTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateSystemDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateSystemDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateSystemDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateSystemDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dOutputMode_V2 ( FliContext context , Scan3dOutputModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dOutputMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'Scan3dOutputModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setScan3dOutputMode_V2 ( FliContext context , Scan3dOutputModeEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrScan3dOutputModeEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setScan3dOutputMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'Scan3dOutputModeEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dOutputModeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dOutputModeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dOutputModeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dOutputModeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dOutputModeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dOutputModeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dOutputModeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dOutputModeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dOutputModeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dOutputModeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateSystemReference_V2 ( FliContext context , Scan3dCoordinateSystemReferenceEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateSystemReference_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'Scan3dCoordinateSystemReferenceEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setScan3dCoordinateSystemReference_V2 ( FliContext context , Scan3dCoordinateSystemReferenceEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrScan3dCoordinateSystemReferenceEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setScan3dCoordinateSystemReference_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'Scan3dCoordinateSystemReferenceEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateSystemReferenceVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateSystemReferenceVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateSystemReferenceAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateSystemReferenceAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateSystemReferenceTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateSystemReferenceTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateSystemReferenceDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateSystemReferenceDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateSystemReferenceDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateSystemReferenceDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateSelector_V2 ( FliContext context , Scan3dCoordinateSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'Scan3dCoordinateSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setScan3dCoordinateSelector_V2 ( FliContext context , Scan3dCoordinateSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrScan3dCoordinateSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setScan3dCoordinateSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'Scan3dCoordinateSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateScale_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateScale_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setScan3dCoordinateScale_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setScan3dCoordinateScale_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateScaleMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateScaleMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateScaleMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateScaleMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateScaleUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateScaleUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateScaleVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateScaleVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateScaleAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateScaleAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateScaleTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateScaleTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateScaleDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateScaleDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateScaleDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateScaleDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateOffset_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateOffset_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setScan3dCoordinateOffset_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setScan3dCoordinateOffset_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateOffsetMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateOffsetMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateOffsetMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateOffsetMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateOffsetUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateOffsetUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateOffsetVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateOffsetVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateOffsetAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateOffsetAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateOffsetTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateOffsetTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateOffsetDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateOffsetDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateOffsetDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateOffsetDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dInvalidDataFlag_V2 ( FliContext context , _Bool * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dInvalidDataFlag_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setScan3dInvalidDataFlag_V2 ( FliContext context , _Bool val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliSfncCamera_setScan3dInvalidDataFlag_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dInvalidDataFlagVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dInvalidDataFlagVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dInvalidDataFlagAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dInvalidDataFlagAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dInvalidDataFlagTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dInvalidDataFlagTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dInvalidDataFlagDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dInvalidDataFlagDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dInvalidDataFlagDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dInvalidDataFlagDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dInvalidDataValue_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dInvalidDataValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setScan3dInvalidDataValue_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setScan3dInvalidDataValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dInvalidDataValueMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dInvalidDataValueMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dInvalidDataValueMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dInvalidDataValueMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dInvalidDataValueUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dInvalidDataValueUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dInvalidDataValueVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dInvalidDataValueVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dInvalidDataValueAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dInvalidDataValueAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dInvalidDataValueTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dInvalidDataValueTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dInvalidDataValueDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dInvalidDataValueDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dInvalidDataValueDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dInvalidDataValueDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dAxisMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dAxisMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setScan3dAxisMin_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setScan3dAxisMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dAxisMinMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dAxisMinMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dAxisMinMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dAxisMinMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dAxisMinUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dAxisMinUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dAxisMinVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dAxisMinVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dAxisMinAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dAxisMinAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dAxisMinTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dAxisMinTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dAxisMinDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dAxisMinDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dAxisMinDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dAxisMinDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dAxisMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dAxisMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setScan3dAxisMax_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setScan3dAxisMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dAxisMaxMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dAxisMaxMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dAxisMaxMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dAxisMaxMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dAxisMaxUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dAxisMaxUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dAxisMaxVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dAxisMaxVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dAxisMaxAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dAxisMaxAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dAxisMaxTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dAxisMaxTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dAxisMaxDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dAxisMaxDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dAxisMaxDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dAxisMaxDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateTransformSelector_V2 ( FliContext context , Scan3dCoordinateTransformSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateTransformSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'Scan3dCoordinateTransformSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setScan3dCoordinateTransformSelector_V2 ( FliContext context , Scan3dCoordinateTransformSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrScan3dCoordinateTransformSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setScan3dCoordinateTransformSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'Scan3dCoordinateTransformSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateTransformSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateTransformSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateTransformSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateTransformSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateTransformSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateTransformSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateTransformSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateTransformSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateTransformSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateTransformSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dTransformValue_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dTransformValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setScan3dTransformValue_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setScan3dTransformValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dTransformValueMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dTransformValueMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dTransformValueMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dTransformValueMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dTransformValueUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dTransformValueUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dTransformValueVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dTransformValueVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dTransformValueAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dTransformValueAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dTransformValueTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dTransformValueTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dTransformValueDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dTransformValueDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dTransformValueDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dTransformValueDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateReferenceSelector_V2 ( FliContext context , Scan3dCoordinateReferenceSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateReferenceSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'Scan3dCoordinateReferenceSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setScan3dCoordinateReferenceSelector_V2 ( FliContext context , Scan3dCoordinateReferenceSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrScan3dCoordinateReferenceSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setScan3dCoordinateReferenceSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'Scan3dCoordinateReferenceSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateReferenceSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateReferenceSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateReferenceSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateReferenceSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateReferenceSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateReferenceSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateReferenceSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateReferenceSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateReferenceSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateReferenceSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateReferenceValue_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateReferenceValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setScan3dCoordinateReferenceValue_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setScan3dCoordinateReferenceValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateReferenceValueMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateReferenceValueMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateReferenceValueMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateReferenceValueMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateReferenceValueUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateReferenceValueUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateReferenceValueVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateReferenceValueVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateReferenceValueAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateReferenceValueAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateReferenceValueTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateReferenceValueTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateReferenceValueDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateReferenceValueDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dCoordinateReferenceValueDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dCoordinateReferenceValueDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dFocalLength_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dFocalLength_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setScan3dFocalLength_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setScan3dFocalLength_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dFocalLengthMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dFocalLengthMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dFocalLengthMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dFocalLengthMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dFocalLengthUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dFocalLengthUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dFocalLengthVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dFocalLengthVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dFocalLengthAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dFocalLengthAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dFocalLengthTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dFocalLengthTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dFocalLengthDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dFocalLengthDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dFocalLengthDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dFocalLengthDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dBaseline_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dBaseline_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setScan3dBaseline_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setScan3dBaseline_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dBaselineMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dBaselineMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dBaselineMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dBaselineMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dBaselineUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dBaselineUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dBaselineVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dBaselineVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dBaselineAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dBaselineAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dBaselineTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dBaselineTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dBaselineDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dBaselineDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dBaselineDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dBaselineDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dPrincipalPointU_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dPrincipalPointU_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setScan3dPrincipalPointU_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setScan3dPrincipalPointU_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dPrincipalPointUMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dPrincipalPointUMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dPrincipalPointUMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dPrincipalPointUMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dPrincipalPointUUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dPrincipalPointUUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dPrincipalPointUVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dPrincipalPointUVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dPrincipalPointUAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dPrincipalPointUAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dPrincipalPointUTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dPrincipalPointUTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dPrincipalPointUDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dPrincipalPointUDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dPrincipalPointUDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dPrincipalPointUDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dPrincipalPointV_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dPrincipalPointV_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setScan3dPrincipalPointV_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setScan3dPrincipalPointV_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dPrincipalPointVMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dPrincipalPointVMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dPrincipalPointVMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dPrincipalPointVMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dPrincipalPointVUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dPrincipalPointVUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dPrincipalPointVVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dPrincipalPointVVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dPrincipalPointVAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dPrincipalPointVAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dPrincipalPointVTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dPrincipalPointVTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dPrincipalPointVDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dPrincipalPointVDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getScan3dPrincipalPointVDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getScan3dPrincipalPointVDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightControllerSelector_V2 ( FliContext context , LightControllerSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLightControllerSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'LightControllerSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setLightControllerSelector_V2 ( FliContext context , LightControllerSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrLightControllerSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setLightControllerSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'LightControllerSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightControllerSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLightControllerSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightControllerSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLightControllerSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightControllerSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLightControllerSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightControllerSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLightControllerSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightControllerSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLightControllerSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightControllerSource_V2 ( FliContext context , LightControllerSourceEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLightControllerSource_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'LightControllerSourceEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setLightControllerSource_V2 ( FliContext context , LightControllerSourceEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrLightControllerSourceEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setLightControllerSource_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'LightControllerSourceEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightControllerSourceVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLightControllerSourceVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightControllerSourceAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLightControllerSourceAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightControllerSourceTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLightControllerSourceTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightControllerSourceDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLightControllerSourceDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightControllerSourceDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLightControllerSourceDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightCurrentRating_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLightCurrentRating_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setLightCurrentRating_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setLightCurrentRating_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightCurrentRatingMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLightCurrentRatingMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightCurrentRatingMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLightCurrentRatingMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightCurrentRatingUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLightCurrentRatingUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightCurrentRatingVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLightCurrentRatingVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightCurrentRatingAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLightCurrentRatingAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightCurrentRatingTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLightCurrentRatingTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightCurrentRatingDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLightCurrentRatingDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightCurrentRatingDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLightCurrentRatingDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightVoltageRating_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLightVoltageRating_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setLightVoltageRating_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setLightVoltageRating_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightVoltageRatingMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLightVoltageRatingMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightVoltageRatingMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLightVoltageRatingMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightVoltageRatingUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLightVoltageRatingUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightVoltageRatingVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLightVoltageRatingVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightVoltageRatingAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLightVoltageRatingAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightVoltageRatingTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLightVoltageRatingTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightVoltageRatingDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLightVoltageRatingDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightVoltageRatingDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLightVoltageRatingDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightBrightness_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLightBrightness_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setLightBrightness_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setLightBrightness_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightBrightnessMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLightBrightnessMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightBrightnessMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLightBrightnessMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightBrightnessUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLightBrightnessUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightBrightnessVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLightBrightnessVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightBrightnessAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLightBrightnessAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightBrightnessTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLightBrightnessTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightBrightnessDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLightBrightnessDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightBrightnessDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLightBrightnessDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightConnectionStatus_V2 ( FliContext context , LightConnectionStatusEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLightConnectionStatus_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'LightConnectionStatusEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setLightConnectionStatus_V2 ( FliContext context , LightConnectionStatusEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrLightConnectionStatusEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setLightConnectionStatus_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'LightConnectionStatusEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightConnectionStatusVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLightConnectionStatusVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightConnectionStatusAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLightConnectionStatusAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightConnectionStatusTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLightConnectionStatusTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightConnectionStatusDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLightConnectionStatusDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightConnectionStatusDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLightConnectionStatusDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightCurrentMeasured_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLightCurrentMeasured_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setLightCurrentMeasured_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setLightCurrentMeasured_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightCurrentMeasuredMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLightCurrentMeasuredMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightCurrentMeasuredMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLightCurrentMeasuredMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightCurrentMeasuredUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLightCurrentMeasuredUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightCurrentMeasuredVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLightCurrentMeasuredVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightCurrentMeasuredAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLightCurrentMeasuredAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightCurrentMeasuredTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLightCurrentMeasuredTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightCurrentMeasuredDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLightCurrentMeasuredDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightCurrentMeasuredDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLightCurrentMeasuredDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightVoltageMeasured_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLightVoltageMeasured_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setLightVoltageMeasured_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setLightVoltageMeasured_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightVoltageMeasuredMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLightVoltageMeasuredMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightVoltageMeasuredMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLightVoltageMeasuredMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightVoltageMeasuredUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLightVoltageMeasuredUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightVoltageMeasuredVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLightVoltageMeasuredVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightVoltageMeasuredAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getLightVoltageMeasuredAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightVoltageMeasuredTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLightVoltageMeasuredTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightVoltageMeasuredDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLightVoltageMeasuredDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getLightVoltageMeasuredDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getLightVoltageMeasuredDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkModeActive_V2 ( FliContext context , _Bool * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkModeActive_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkModeActive_V2 ( FliContext context , _Bool val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliSfncCamera_setChunkModeActive_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkModeActiveVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkModeActiveVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkModeActiveAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkModeActiveAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkModeActiveTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkModeActiveTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkModeActiveDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkModeActiveDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkModeActiveDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkModeActiveDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkXMLEnable_V2 ( FliContext context , _Bool * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkXMLEnable_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkXMLEnable_V2 ( FliContext context , _Bool val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliSfncCamera_setChunkXMLEnable_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkXMLEnableVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkXMLEnableVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkXMLEnableAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkXMLEnableAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkXMLEnableTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkXMLEnableTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkXMLEnableDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkXMLEnableDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkXMLEnableDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkXMLEnableDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkSelector_V2 ( FliContext context , ChunkSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ChunkSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkSelector_V2 ( FliContext context , ChunkSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrChunkSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setChunkSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ChunkSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkEnable_V2 ( FliContext context , _Bool * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkEnable_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkEnable_V2 ( FliContext context , _Bool val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliSfncCamera_setChunkEnable_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkEnableVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkEnableVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkEnableAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkEnableAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkEnableTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkEnableTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkEnableDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkEnableDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkEnableDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkEnableDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkRegionSelector_V2 ( FliContext context , ChunkRegionSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkRegionSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ChunkRegionSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkRegionSelector_V2 ( FliContext context , ChunkRegionSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrChunkRegionSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setChunkRegionSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ChunkRegionSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkRegionSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkRegionSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkRegionSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkRegionSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkRegionSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkRegionSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkRegionSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkRegionSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkRegionSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkRegionSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkRegionID_V2 ( FliContext context , ChunkRegionIDEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkRegionID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ChunkRegionIDEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkRegionID_V2 ( FliContext context , ChunkRegionIDEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrChunkRegionIDEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setChunkRegionID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ChunkRegionIDEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkRegionIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkRegionIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkRegionIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkRegionIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkRegionIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkRegionIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkRegionIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkRegionIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkRegionIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkRegionIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkRegionIDValue_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkRegionIDValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkRegionIDValue_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setChunkRegionIDValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkRegionIDValueMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkRegionIDValueMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkRegionIDValueMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkRegionIDValueMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkRegionIDValueUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkRegionIDValueUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkRegionIDValueVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkRegionIDValueVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkRegionIDValueAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkRegionIDValueAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkRegionIDValueTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkRegionIDValueTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkRegionIDValueDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkRegionIDValueDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkRegionIDValueDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkRegionIDValueDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkComponentSelector_V2 ( FliContext context , ChunkComponentSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkComponentSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ChunkComponentSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkComponentSelector_V2 ( FliContext context , ChunkComponentSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrChunkComponentSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setChunkComponentSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ChunkComponentSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkComponentSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkComponentSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkComponentSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkComponentSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkComponentSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkComponentSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkComponentSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkComponentSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkComponentSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkComponentSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkComponentID_V2 ( FliContext context , ChunkComponentIDEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkComponentID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ChunkComponentIDEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkComponentID_V2 ( FliContext context , ChunkComponentIDEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrChunkComponentIDEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setChunkComponentID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ChunkComponentIDEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkComponentIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkComponentIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkComponentIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkComponentIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkComponentIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkComponentIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkComponentIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkComponentIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkComponentIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkComponentIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkComponentIDValue_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkComponentIDValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkComponentIDValue_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setChunkComponentIDValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkComponentIDValueMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkComponentIDValueMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkComponentIDValueMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkComponentIDValueMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkComponentIDValueUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkComponentIDValueUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkComponentIDValueVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkComponentIDValueVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkComponentIDValueAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkComponentIDValueAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkComponentIDValueTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkComponentIDValueTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkComponentIDValueDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkComponentIDValueDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkComponentIDValueDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkComponentIDValueDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkGroupSelector_V2 ( FliContext context , ChunkGroupSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkGroupSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ChunkGroupSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkGroupSelector_V2 ( FliContext context , ChunkGroupSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrChunkGroupSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setChunkGroupSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ChunkGroupSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkGroupSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkGroupSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkGroupSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkGroupSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkGroupSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkGroupSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkGroupSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkGroupSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkGroupSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkGroupSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkGroupID_V2 ( FliContext context , ChunkGroupIDEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkGroupID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ChunkGroupIDEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkGroupID_V2 ( FliContext context , ChunkGroupIDEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrChunkGroupIDEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setChunkGroupID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ChunkGroupIDEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkGroupIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkGroupIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkGroupIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkGroupIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkGroupIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkGroupIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkGroupIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkGroupIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkGroupIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkGroupIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkGroupIDValue_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkGroupIDValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkGroupIDValue_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setChunkGroupIDValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkGroupIDValueMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkGroupIDValueMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkGroupIDValueMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkGroupIDValueMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkGroupIDValueUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkGroupIDValueUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkGroupIDValueVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkGroupIDValueVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkGroupIDValueAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkGroupIDValueAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkGroupIDValueTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkGroupIDValueTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkGroupIDValueDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkGroupIDValueDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkGroupIDValueDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkGroupIDValueDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkOffsetX_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkOffsetX_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkOffsetX_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setChunkOffsetX_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkOffsetXMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkOffsetXMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkOffsetXMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkOffsetXMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkOffsetXUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkOffsetXUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkOffsetXVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkOffsetXVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkOffsetXAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkOffsetXAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkOffsetXTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkOffsetXTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkOffsetXDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkOffsetXDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkOffsetXDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkOffsetXDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkOffsetY_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkOffsetY_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkOffsetY_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setChunkOffsetY_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkOffsetYMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkOffsetYMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkOffsetYMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkOffsetYMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkOffsetYUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkOffsetYUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkOffsetYVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkOffsetYVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkOffsetYAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkOffsetYAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkOffsetYTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkOffsetYTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkOffsetYDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkOffsetYDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkOffsetYDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkOffsetYDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkWidth_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkWidth_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkWidth_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setChunkWidth_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkWidthMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkWidthMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkWidthMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkWidthMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkWidthUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkWidthUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkWidthVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkWidthVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkWidthAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkWidthAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkWidthTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkWidthTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkWidthDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkWidthDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkWidthDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkWidthDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkHeight_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkHeight_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkHeight_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setChunkHeight_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkHeightMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkHeightMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkHeightMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkHeightMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkHeightUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkHeightUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkHeightVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkHeightVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkHeightAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkHeightAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkHeightTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkHeightTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkHeightDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkHeightDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkHeightDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkHeightDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkPixelFormat_V2 ( FliContext context , ChunkPixelFormatEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkPixelFormat_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ChunkPixelFormatEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkPixelFormat_V2 ( FliContext context , ChunkPixelFormatEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrChunkPixelFormatEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setChunkPixelFormat_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ChunkPixelFormatEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkPixelFormatVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkPixelFormatVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkPixelFormatAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkPixelFormatAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkPixelFormatTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkPixelFormatTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkPixelFormatDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkPixelFormatDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkPixelFormatDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkPixelFormatDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkPixelDynamicRangeMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkPixelDynamicRangeMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkPixelDynamicRangeMin_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setChunkPixelDynamicRangeMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkPixelDynamicRangeMinMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkPixelDynamicRangeMinMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkPixelDynamicRangeMinMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkPixelDynamicRangeMinMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkPixelDynamicRangeMinUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkPixelDynamicRangeMinUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkPixelDynamicRangeMinVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkPixelDynamicRangeMinVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkPixelDynamicRangeMinAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkPixelDynamicRangeMinAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkPixelDynamicRangeMinTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkPixelDynamicRangeMinTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkPixelDynamicRangeMinDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkPixelDynamicRangeMinDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkPixelDynamicRangeMinDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkPixelDynamicRangeMinDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkPixelDynamicRangeMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkPixelDynamicRangeMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkPixelDynamicRangeMax_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setChunkPixelDynamicRangeMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkPixelDynamicRangeMaxMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkPixelDynamicRangeMaxMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkPixelDynamicRangeMaxMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkPixelDynamicRangeMaxMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkPixelDynamicRangeMaxUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkPixelDynamicRangeMaxUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkPixelDynamicRangeMaxVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkPixelDynamicRangeMaxVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkPixelDynamicRangeMaxAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkPixelDynamicRangeMaxAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkPixelDynamicRangeMaxTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkPixelDynamicRangeMaxTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkPixelDynamicRangeMaxDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkPixelDynamicRangeMaxDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkPixelDynamicRangeMaxDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkPixelDynamicRangeMaxDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkBinningHorizontal_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkBinningHorizontal_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkBinningHorizontal_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setChunkBinningHorizontal_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkBinningHorizontalMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkBinningHorizontalMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkBinningHorizontalMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkBinningHorizontalMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkBinningHorizontalUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkBinningHorizontalUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkBinningHorizontalVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkBinningHorizontalVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkBinningHorizontalAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkBinningHorizontalAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkBinningHorizontalTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkBinningHorizontalTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkBinningHorizontalDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkBinningHorizontalDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkBinningHorizontalDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkBinningHorizontalDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkBinningVertical_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkBinningVertical_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkBinningVertical_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setChunkBinningVertical_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkBinningVerticalMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkBinningVerticalMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkBinningVerticalMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkBinningVerticalMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkBinningVerticalUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkBinningVerticalUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkBinningVerticalVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkBinningVerticalVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkBinningVerticalAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkBinningVerticalAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkBinningVerticalTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkBinningVerticalTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkBinningVerticalDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkBinningVerticalDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkBinningVerticalDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkBinningVerticalDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkDecimationHorizontal_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkDecimationHorizontal_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkDecimationHorizontal_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setChunkDecimationHorizontal_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkDecimationHorizontalMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkDecimationHorizontalMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkDecimationHorizontalMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkDecimationHorizontalMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkDecimationHorizontalUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkDecimationHorizontalUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkDecimationHorizontalVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkDecimationHorizontalVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkDecimationHorizontalAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkDecimationHorizontalAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkDecimationHorizontalTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkDecimationHorizontalTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkDecimationHorizontalDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkDecimationHorizontalDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkDecimationHorizontalDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkDecimationHorizontalDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkDecimationVertical_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkDecimationVertical_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkDecimationVertical_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setChunkDecimationVertical_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkDecimationVerticalMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkDecimationVerticalMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkDecimationVerticalMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkDecimationVerticalMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkDecimationVerticalUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkDecimationVerticalUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkDecimationVerticalVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkDecimationVerticalVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkDecimationVerticalAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkDecimationVerticalAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkDecimationVerticalTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkDecimationVerticalTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkDecimationVerticalDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkDecimationVerticalDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkDecimationVerticalDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkDecimationVerticalDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkReverseX_V2 ( FliContext context , _Bool * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkReverseX_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkReverseX_V2 ( FliContext context , _Bool val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliSfncCamera_setChunkReverseX_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkReverseXVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkReverseXVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkReverseXAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkReverseXAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkReverseXTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkReverseXTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkReverseXDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkReverseXDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkReverseXDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkReverseXDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkReverseY_V2 ( FliContext context , _Bool * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkReverseY_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkReverseY_V2 ( FliContext context , _Bool val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliSfncCamera_setChunkReverseY_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkReverseYVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkReverseYVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkReverseYAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkReverseYAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkReverseYTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkReverseYTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkReverseYDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkReverseYDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkReverseYDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkReverseYDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTimestamp_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkTimestamp_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setChunkTimestamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTimestampMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTimestampMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTimestampMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTimestampMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTimestampUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTimestampUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTimestampVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTimestampVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTimestampAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTimestampAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTimestampTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTimestampTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTimestampDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTimestampDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTimestampDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTimestampDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTimestampLatchValue_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTimestampLatchValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkTimestampLatchValue_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setChunkTimestampLatchValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTimestampLatchValueMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTimestampLatchValueMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTimestampLatchValueMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTimestampLatchValueMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTimestampLatchValueUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTimestampLatchValueUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTimestampLatchValueVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTimestampLatchValueVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTimestampLatchValueAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTimestampLatchValueAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTimestampLatchValueTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTimestampLatchValueTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTimestampLatchValueDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTimestampLatchValueDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTimestampLatchValueDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTimestampLatchValueDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkLineStatusAll_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkLineStatusAll_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkLineStatusAll_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setChunkLineStatusAll_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkLineStatusAllMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkLineStatusAllMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkLineStatusAllMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkLineStatusAllMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkLineStatusAllUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkLineStatusAllUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkLineStatusAllVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkLineStatusAllVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkLineStatusAllAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkLineStatusAllAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkLineStatusAllTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkLineStatusAllTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkLineStatusAllDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkLineStatusAllDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkLineStatusAllDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkLineStatusAllDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkCounterSelector_V2 ( FliContext context , ChunkCounterSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkCounterSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ChunkCounterSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkCounterSelector_V2 ( FliContext context , ChunkCounterSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrChunkCounterSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setChunkCounterSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ChunkCounterSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkCounterSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkCounterSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkCounterSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkCounterSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkCounterSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkCounterSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkCounterSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkCounterSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkCounterSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkCounterSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkCounterValue_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkCounterValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkCounterValue_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setChunkCounterValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkCounterValueMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkCounterValueMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkCounterValueMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkCounterValueMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkCounterValueUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkCounterValueUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkCounterValueVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkCounterValueVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkCounterValueAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkCounterValueAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkCounterValueTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkCounterValueTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkCounterValueDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkCounterValueDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkCounterValueDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkCounterValueDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTimerSelector_V2 ( FliContext context , ChunkTimerSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTimerSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ChunkTimerSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkTimerSelector_V2 ( FliContext context , ChunkTimerSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrChunkTimerSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setChunkTimerSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ChunkTimerSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTimerSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTimerSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTimerSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTimerSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTimerSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTimerSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTimerSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTimerSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTimerSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTimerSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTimerValue_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTimerValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkTimerValue_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setChunkTimerValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTimerValueMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTimerValueMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTimerValueMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTimerValueMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTimerValueUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTimerValueUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTimerValueVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTimerValueVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTimerValueAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTimerValueAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTimerValueTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTimerValueTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTimerValueDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTimerValueDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTimerValueDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTimerValueDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScanLineSelector_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScanLineSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkScanLineSelector_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setChunkScanLineSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScanLineSelectorMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScanLineSelectorMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScanLineSelectorMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScanLineSelectorMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScanLineSelectorUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScanLineSelectorUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScanLineSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScanLineSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScanLineSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScanLineSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScanLineSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScanLineSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScanLineSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScanLineSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScanLineSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScanLineSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkEncoderSelector_V2 ( FliContext context , ChunkEncoderSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkEncoderSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ChunkEncoderSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkEncoderSelector_V2 ( FliContext context , ChunkEncoderSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrChunkEncoderSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setChunkEncoderSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ChunkEncoderSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkEncoderSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkEncoderSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkEncoderSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkEncoderSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkEncoderSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkEncoderSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkEncoderSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkEncoderSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkEncoderSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkEncoderSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkEncoderValue_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkEncoderValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkEncoderValue_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setChunkEncoderValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkEncoderValueMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkEncoderValueMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkEncoderValueMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkEncoderValueMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkEncoderValueUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkEncoderValueUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkEncoderValueVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkEncoderValueVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkEncoderValueAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkEncoderValueAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkEncoderValueTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkEncoderValueTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkEncoderValueDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkEncoderValueDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkEncoderValueDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkEncoderValueDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkEncoderStatus_V2 ( FliContext context , ChunkEncoderStatusEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkEncoderStatus_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ChunkEncoderStatusEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkEncoderStatus_V2 ( FliContext context , ChunkEncoderStatusEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrChunkEncoderStatusEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setChunkEncoderStatus_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ChunkEncoderStatusEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkEncoderStatusVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkEncoderStatusVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkEncoderStatusAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkEncoderStatusAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkEncoderStatusTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkEncoderStatusTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkEncoderStatusDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkEncoderStatusDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkEncoderStatusDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkEncoderStatusDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkExposureTimeSelector_V2 ( FliContext context , ChunkExposureTimeSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkExposureTimeSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ChunkExposureTimeSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkExposureTimeSelector_V2 ( FliContext context , ChunkExposureTimeSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrChunkExposureTimeSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setChunkExposureTimeSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ChunkExposureTimeSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkExposureTimeSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkExposureTimeSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkExposureTimeSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkExposureTimeSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkExposureTimeSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkExposureTimeSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkExposureTimeSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkExposureTimeSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkExposureTimeSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkExposureTimeSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkExposureTime_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkExposureTime_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkExposureTime_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setChunkExposureTime_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkExposureTimeMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkExposureTimeMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkExposureTimeMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkExposureTimeMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkExposureTimeUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkExposureTimeUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkExposureTimeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkExposureTimeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkExposureTimeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkExposureTimeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkExposureTimeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkExposureTimeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkExposureTimeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkExposureTimeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkExposureTimeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkExposureTimeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkGainSelector_V2 ( FliContext context , ChunkGainSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkGainSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ChunkGainSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkGainSelector_V2 ( FliContext context , ChunkGainSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrChunkGainSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setChunkGainSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ChunkGainSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkGainSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkGainSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkGainSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkGainSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkGainSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkGainSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkGainSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkGainSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkGainSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkGainSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkGain_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkGain_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkGain_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setChunkGain_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkGainMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkGainMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkGainMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkGainMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkGainUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkGainUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkGainVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkGainVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkGainAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkGainAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkGainTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkGainTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkGainDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkGainDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkGainDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkGainDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkBlackLevelSelector_V2 ( FliContext context , ChunkBlackLevelSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkBlackLevelSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ChunkBlackLevelSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkBlackLevelSelector_V2 ( FliContext context , ChunkBlackLevelSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrChunkBlackLevelSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setChunkBlackLevelSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ChunkBlackLevelSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkBlackLevelSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkBlackLevelSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkBlackLevelSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkBlackLevelSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkBlackLevelSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkBlackLevelSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkBlackLevelSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkBlackLevelSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkBlackLevelSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkBlackLevelSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkBlackLevel_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkBlackLevel_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkBlackLevel_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setChunkBlackLevel_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkBlackLevelMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkBlackLevelMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkBlackLevelMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkBlackLevelMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkBlackLevelUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkBlackLevelUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkBlackLevelVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkBlackLevelVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkBlackLevelAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkBlackLevelAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkBlackLevelTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkBlackLevelTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkBlackLevelDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkBlackLevelDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkBlackLevelDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkBlackLevelDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkLinePitch_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkLinePitch_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkLinePitch_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setChunkLinePitch_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkLinePitchMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkLinePitchMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkLinePitchMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkLinePitchMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkLinePitchUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkLinePitchUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkLinePitchVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkLinePitchVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkLinePitchAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkLinePitchAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkLinePitchTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkLinePitchTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkLinePitchDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkLinePitchDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkLinePitchDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkLinePitchDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkFrameID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkFrameID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setChunkFrameID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkFrameIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkFrameIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkFrameIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkFrameIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkFrameIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkFrameIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkFrameIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkFrameIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkFrameIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkFrameIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkFrameIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkFrameIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkFrameIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkFrameIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkFrameIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkFrameIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkSourceSelector_V2 ( FliContext context , ChunkSourceSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkSourceSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ChunkSourceSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkSourceSelector_V2 ( FliContext context , ChunkSourceSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrChunkSourceSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setChunkSourceSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ChunkSourceSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkSourceSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkSourceSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkSourceSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkSourceSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkSourceSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkSourceSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkSourceSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkSourceSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkSourceSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkSourceSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkSourceID_V2 ( FliContext context , ChunkSourceIDEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkSourceID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ChunkSourceIDEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkSourceID_V2 ( FliContext context , ChunkSourceIDEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrChunkSourceIDEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setChunkSourceID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ChunkSourceIDEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkSourceIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkSourceIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkSourceIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkSourceIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkSourceIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkSourceIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkSourceIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkSourceIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkSourceIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkSourceIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkSourceIDValue_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkSourceIDValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkSourceIDValue_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setChunkSourceIDValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkSourceIDValueMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkSourceIDValueMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkSourceIDValueMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkSourceIDValueMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkSourceIDValueUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkSourceIDValueUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkSourceIDValueVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkSourceIDValueVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkSourceIDValueAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkSourceIDValueAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkSourceIDValueTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkSourceIDValueTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkSourceIDValueDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkSourceIDValueDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkSourceIDValueDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkSourceIDValueDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTransferBlockID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTransferBlockID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkTransferBlockID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setChunkTransferBlockID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTransferBlockIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTransferBlockIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTransferBlockIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTransferBlockIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTransferBlockIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTransferBlockIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTransferBlockIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTransferBlockIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTransferBlockIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTransferBlockIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTransferBlockIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTransferBlockIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTransferBlockIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTransferBlockIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTransferBlockIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTransferBlockIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTransferStreamID_V2 ( FliContext context , ChunkTransferStreamIDEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTransferStreamID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ChunkTransferStreamIDEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkTransferStreamID_V2 ( FliContext context , ChunkTransferStreamIDEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrChunkTransferStreamIDEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setChunkTransferStreamID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ChunkTransferStreamIDEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTransferStreamIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTransferStreamIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTransferStreamIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTransferStreamIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTransferStreamIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTransferStreamIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTransferStreamIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTransferStreamIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTransferStreamIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTransferStreamIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTransferQueueCurrentBlockCount_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTransferQueueCurrentBlockCount_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkTransferQueueCurrentBlockCount_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setChunkTransferQueueCurrentBlockCount_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTransferQueueCurrentBlockCountMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTransferQueueCurrentBlockCountMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTransferQueueCurrentBlockCountMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTransferQueueCurrentBlockCountMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTransferQueueCurrentBlockCountUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTransferQueueCurrentBlockCountUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTransferQueueCurrentBlockCountVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTransferQueueCurrentBlockCountVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTransferQueueCurrentBlockCountAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTransferQueueCurrentBlockCountAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTransferQueueCurrentBlockCountTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTransferQueueCurrentBlockCountTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTransferQueueCurrentBlockCountDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTransferQueueCurrentBlockCountDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkTransferQueueCurrentBlockCountDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkTransferQueueCurrentBlockCountDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkStreamChannelID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkStreamChannelID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkStreamChannelID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setChunkStreamChannelID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkStreamChannelIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkStreamChannelIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkStreamChannelIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkStreamChannelIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkStreamChannelIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkStreamChannelIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkStreamChannelIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkStreamChannelIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkStreamChannelIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkStreamChannelIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkStreamChannelIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkStreamChannelIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkStreamChannelIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkStreamChannelIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkStreamChannelIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkStreamChannelIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkSequencerSetActive_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkSequencerSetActive_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkSequencerSetActive_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setChunkSequencerSetActive_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkSequencerSetActiveMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkSequencerSetActiveMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkSequencerSetActiveMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkSequencerSetActiveMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkSequencerSetActiveUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkSequencerSetActiveUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkSequencerSetActiveVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkSequencerSetActiveVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkSequencerSetActiveAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkSequencerSetActiveAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkSequencerSetActiveTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkSequencerSetActiveTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkSequencerSetActiveDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkSequencerSetActiveDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkSequencerSetActiveDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkSequencerSetActiveDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dDistanceUnit_V2 ( FliContext context , ChunkScan3dDistanceUnitEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dDistanceUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ChunkScan3dDistanceUnitEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkScan3dDistanceUnit_V2 ( FliContext context , ChunkScan3dDistanceUnitEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrChunkScan3dDistanceUnitEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setChunkScan3dDistanceUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ChunkScan3dDistanceUnitEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dDistanceUnitVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dDistanceUnitVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dDistanceUnitAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dDistanceUnitAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dDistanceUnitTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dDistanceUnitTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dDistanceUnitDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dDistanceUnitDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dDistanceUnitDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dDistanceUnitDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dOutputMode_V2 ( FliContext context , ChunkScan3dOutputModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dOutputMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ChunkScan3dOutputModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkScan3dOutputMode_V2 ( FliContext context , ChunkScan3dOutputModeEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrChunkScan3dOutputModeEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setChunkScan3dOutputMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ChunkScan3dOutputModeEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dOutputModeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dOutputModeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dOutputModeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dOutputModeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dOutputModeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dOutputModeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dOutputModeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dOutputModeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dOutputModeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dOutputModeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateSystem_V2 ( FliContext context , ChunkScan3dCoordinateSystemEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateSystem_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ChunkScan3dCoordinateSystemEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkScan3dCoordinateSystem_V2 ( FliContext context , ChunkScan3dCoordinateSystemEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrChunkScan3dCoordinateSystemEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setChunkScan3dCoordinateSystem_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ChunkScan3dCoordinateSystemEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateSystemVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateSystemVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateSystemAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateSystemAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateSystemTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateSystemTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateSystemDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateSystemDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateSystemDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateSystemDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateSystemReference_V2 ( FliContext context , ChunkScan3dCoordinateSystemReferenceEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateSystemReference_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ChunkScan3dCoordinateSystemReferenceEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkScan3dCoordinateSystemReference_V2 ( FliContext context , ChunkScan3dCoordinateSystemReferenceEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrChunkScan3dCoordinateSystemReferenceEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setChunkScan3dCoordinateSystemReference_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ChunkScan3dCoordinateSystemReferenceEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateSystemReferenceVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateSystemReferenceVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateSystemReferenceAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateSystemReferenceAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateSystemReferenceTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateSystemReferenceTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateSystemReferenceDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateSystemReferenceDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateSystemReferenceDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateSystemReferenceDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateSelector_V2 ( FliContext context , ChunkScan3dCoordinateSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ChunkScan3dCoordinateSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkScan3dCoordinateSelector_V2 ( FliContext context , ChunkScan3dCoordinateSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrChunkScan3dCoordinateSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setChunkScan3dCoordinateSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ChunkScan3dCoordinateSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateScale_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateScale_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkScan3dCoordinateScale_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setChunkScan3dCoordinateScale_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateScaleMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateScaleMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateScaleMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateScaleMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateScaleUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateScaleUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateScaleVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateScaleVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateScaleAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateScaleAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateScaleTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateScaleTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateScaleDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateScaleDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateScaleDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateScaleDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateOffset_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateOffset_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkScan3dCoordinateOffset_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setChunkScan3dCoordinateOffset_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateOffsetMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateOffsetMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateOffsetMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateOffsetMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateOffsetUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateOffsetUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateOffsetVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateOffsetVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateOffsetAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateOffsetAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateOffsetTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateOffsetTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateOffsetDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateOffsetDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateOffsetDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateOffsetDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dInvalidDataFlag_V2 ( FliContext context , _Bool * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dInvalidDataFlag_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkScan3dInvalidDataFlag_V2 ( FliContext context , _Bool val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliSfncCamera_setChunkScan3dInvalidDataFlag_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dInvalidDataFlagVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dInvalidDataFlagVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dInvalidDataFlagAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dInvalidDataFlagAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dInvalidDataFlagTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dInvalidDataFlagTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dInvalidDataFlagDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dInvalidDataFlagDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dInvalidDataFlagDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dInvalidDataFlagDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dInvalidDataValue_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dInvalidDataValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkScan3dInvalidDataValue_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setChunkScan3dInvalidDataValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dInvalidDataValueMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dInvalidDataValueMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dInvalidDataValueMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dInvalidDataValueMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dInvalidDataValueUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dInvalidDataValueUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dInvalidDataValueVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dInvalidDataValueVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dInvalidDataValueAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dInvalidDataValueAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dInvalidDataValueTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dInvalidDataValueTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dInvalidDataValueDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dInvalidDataValueDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dInvalidDataValueDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dInvalidDataValueDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dAxisMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dAxisMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkScan3dAxisMin_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setChunkScan3dAxisMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dAxisMinMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dAxisMinMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dAxisMinMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dAxisMinMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dAxisMinUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dAxisMinUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dAxisMinVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dAxisMinVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dAxisMinAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dAxisMinAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dAxisMinTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dAxisMinTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dAxisMinDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dAxisMinDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dAxisMinDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dAxisMinDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dAxisMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dAxisMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkScan3dAxisMax_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setChunkScan3dAxisMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dAxisMaxMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dAxisMaxMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dAxisMaxMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dAxisMaxMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dAxisMaxUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dAxisMaxUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dAxisMaxVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dAxisMaxVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dAxisMaxAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dAxisMaxAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dAxisMaxTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dAxisMaxTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dAxisMaxDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dAxisMaxDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dAxisMaxDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dAxisMaxDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateTransformSelector_V2 ( FliContext context , ChunkScan3dCoordinateTransformSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateTransformSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ChunkScan3dCoordinateTransformSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkScan3dCoordinateTransformSelector_V2 ( FliContext context , ChunkScan3dCoordinateTransformSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrChunkScan3dCoordinateTransformSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setChunkScan3dCoordinateTransformSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ChunkScan3dCoordinateTransformSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateTransformSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateTransformSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateTransformSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateTransformSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateTransformSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateTransformSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateTransformSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateTransformSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateTransformSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateTransformSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dTransformValue_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dTransformValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkScan3dTransformValue_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setChunkScan3dTransformValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dTransformValueMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dTransformValueMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dTransformValueMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dTransformValueMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dTransformValueUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dTransformValueUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dTransformValueVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dTransformValueVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dTransformValueAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dTransformValueAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dTransformValueTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dTransformValueTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dTransformValueDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dTransformValueDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dTransformValueDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dTransformValueDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateReferenceSelector_V2 ( FliContext context , ChunkScan3dCoordinateReferenceSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateReferenceSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ChunkScan3dCoordinateReferenceSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkScan3dCoordinateReferenceSelector_V2 ( FliContext context , ChunkScan3dCoordinateReferenceSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrChunkScan3dCoordinateReferenceSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setChunkScan3dCoordinateReferenceSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ChunkScan3dCoordinateReferenceSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateReferenceSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateReferenceSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateReferenceSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateReferenceSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateReferenceSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateReferenceSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateReferenceSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateReferenceSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateReferenceSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateReferenceSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateReferenceValue_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateReferenceValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkScan3dCoordinateReferenceValue_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setChunkScan3dCoordinateReferenceValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateReferenceValueMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateReferenceValueMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateReferenceValueMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateReferenceValueMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateReferenceValueUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateReferenceValueUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateReferenceValueVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateReferenceValueVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateReferenceValueAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateReferenceValueAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateReferenceValueTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateReferenceValueTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateReferenceValueDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateReferenceValueDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dCoordinateReferenceValueDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dCoordinateReferenceValueDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dFocalLength_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dFocalLength_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkScan3dFocalLength_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setChunkScan3dFocalLength_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dFocalLengthMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dFocalLengthMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dFocalLengthMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dFocalLengthMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dFocalLengthUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dFocalLengthUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dFocalLengthVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dFocalLengthVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dFocalLengthAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dFocalLengthAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dFocalLengthTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dFocalLengthTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dFocalLengthDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dFocalLengthDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dFocalLengthDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dFocalLengthDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dBaseline_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dBaseline_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkScan3dBaseline_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setChunkScan3dBaseline_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dBaselineMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dBaselineMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dBaselineMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dBaselineMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dBaselineUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dBaselineUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dBaselineVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dBaselineVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dBaselineAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dBaselineAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dBaselineTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dBaselineTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dBaselineDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dBaselineDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dBaselineDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dBaselineDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dPrincipalPointU_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dPrincipalPointU_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkScan3dPrincipalPointU_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setChunkScan3dPrincipalPointU_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dPrincipalPointUMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dPrincipalPointUMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dPrincipalPointUMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dPrincipalPointUMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dPrincipalPointUUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dPrincipalPointUUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dPrincipalPointUVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dPrincipalPointUVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dPrincipalPointUAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dPrincipalPointUAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dPrincipalPointUTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dPrincipalPointUTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dPrincipalPointUDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dPrincipalPointUDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dPrincipalPointUDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dPrincipalPointUDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dPrincipalPointV_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dPrincipalPointV_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setChunkScan3dPrincipalPointV_V2 ( FliContext context , double val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrdoubleThunk';fcns.name{fcnNum}='FliSfncCamera_setChunkScan3dPrincipalPointV_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'double'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dPrincipalPointVMin_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dPrincipalPointVMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dPrincipalPointVMax_V2 ( FliContext context , double * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dPrincipalPointVMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'doublePtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dPrincipalPointVUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dPrincipalPointVUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dPrincipalPointVVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dPrincipalPointVVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dPrincipalPointVAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dPrincipalPointVAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dPrincipalPointVTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dPrincipalPointVTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dPrincipalPointVDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dPrincipalPointVDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getChunkScan3dPrincipalPointVDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getChunkScan3dPrincipalPointVDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTestPendingAck_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTestPendingAck_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setTestPendingAck_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setTestPendingAck_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTestPendingAckMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTestPendingAckMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTestPendingAckMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTestPendingAckMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTestPendingAckUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTestPendingAckUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTestPendingAckVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTestPendingAckVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTestPendingAckAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTestPendingAckAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTestPendingAckTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTestPendingAckTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTestPendingAckDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTestPendingAckDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTestPendingAckDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTestPendingAckDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_executeTestEventGenerate_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_executeTestEventGenerate_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTestEventGenerateVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTestEventGenerateVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTestEventGenerateAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTestEventGenerateAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTestEventGenerateTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTestEventGenerateTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTestEventGenerateDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTestEventGenerateDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTestEventGenerateDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTestEventGenerateDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTestPayloadFormatMode_V2 ( FliContext context , TestPayloadFormatModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTestPayloadFormatMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'TestPayloadFormatModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setTestPayloadFormatMode_V2 ( FliContext context , TestPayloadFormatModeEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrTestPayloadFormatModeEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setTestPayloadFormatMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'TestPayloadFormatModeEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTestPayloadFormatModeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTestPayloadFormatModeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTestPayloadFormatModeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTestPayloadFormatModeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTestPayloadFormatModeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTestPayloadFormatModeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTestPayloadFormatModeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTestPayloadFormatModeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTestPayloadFormatModeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTestPayloadFormatModeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTLParamsLocked_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTLParamsLocked_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setTLParamsLocked_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setTLParamsLocked_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTLParamsLockedMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTLParamsLockedMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTLParamsLockedMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTLParamsLockedMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTLParamsLockedUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTLParamsLockedUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTLParamsLockedVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTLParamsLockedVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTLParamsLockedAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTLParamsLockedAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTLParamsLockedTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTLParamsLockedTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTLParamsLockedDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTLParamsLockedDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTLParamsLockedDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTLParamsLockedDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTLParamsLockedSelector_V2 ( FliContext context , TLParamsLockedSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTLParamsLockedSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'TLParamsLockedSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setTLParamsLockedSelector_V2 ( FliContext context , TLParamsLockedSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrTLParamsLockedSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setTLParamsLockedSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'TLParamsLockedSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTLParamsLockedSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTLParamsLockedSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTLParamsLockedSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTLParamsLockedSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTLParamsLockedSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTLParamsLockedSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTLParamsLockedSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTLParamsLockedSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTLParamsLockedSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTLParamsLockedSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTLParamsLockedState_V2 ( FliContext context , _Bool * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTLParamsLockedState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setTLParamsLockedState_V2 ( FliContext context , _Bool val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliSfncCamera_setTLParamsLockedState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTLParamsLockedStateVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTLParamsLockedStateVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTLParamsLockedStateAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getTLParamsLockedStateAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTLParamsLockedStateTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTLParamsLockedStateTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTLParamsLockedStateDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTLParamsLockedStateDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getTLParamsLockedStateDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getTLParamsLockedStateDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPayloadSize_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPayloadSize_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setPayloadSize_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setPayloadSize_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPayloadSizeMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPayloadSizeMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPayloadSizeMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPayloadSizeMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPayloadSizeUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPayloadSizeUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPayloadSizeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPayloadSizeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPayloadSizeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPayloadSizeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPayloadSizeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPayloadSizeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPayloadSizeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPayloadSizeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPayloadSizeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPayloadSizeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGenDCStreamingMode_V2 ( FliContext context , GenDCStreamingModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGenDCStreamingMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'GenDCStreamingModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGenDCStreamingMode_V2 ( FliContext context , GenDCStreamingModeEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrGenDCStreamingModeEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setGenDCStreamingMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'GenDCStreamingModeEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGenDCStreamingModeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGenDCStreamingModeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGenDCStreamingModeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGenDCStreamingModeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGenDCStreamingModeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGenDCStreamingModeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGenDCStreamingModeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGenDCStreamingModeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGenDCStreamingModeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGenDCStreamingModeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGenDCStreamingStatus_V2 ( FliContext context , GenDCStreamingStatusEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGenDCStreamingStatus_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'GenDCStreamingStatusEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGenDCStreamingStatus_V2 ( FliContext context , GenDCStreamingStatusEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrGenDCStreamingStatusEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setGenDCStreamingStatus_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'GenDCStreamingStatusEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGenDCStreamingStatusVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGenDCStreamingStatusVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGenDCStreamingStatusAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGenDCStreamingStatusAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGenDCStreamingStatusTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGenDCStreamingStatusTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGenDCStreamingStatusDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGenDCStreamingStatusDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGenDCStreamingStatusDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGenDCStreamingStatusDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTapGeometry_V2 ( FliContext context , DeviceTapGeometryEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTapGeometry_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'DeviceTapGeometryEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setDeviceTapGeometry_V2 ( FliContext context , DeviceTapGeometryEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrDeviceTapGeometryEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setDeviceTapGeometry_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'DeviceTapGeometryEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTapGeometryVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTapGeometryVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTapGeometryAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTapGeometryAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTapGeometryTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTapGeometryTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTapGeometryDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTapGeometryDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getDeviceTapGeometryDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getDeviceTapGeometryDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpEnable_V2 ( FliContext context , _Bool * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPtpEnable_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setPtpEnable_V2 ( FliContext context , _Bool val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliSfncCamera_setPtpEnable_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpEnableVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPtpEnableVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpEnableAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPtpEnableAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpEnableTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPtpEnableTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpEnableDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPtpEnableDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpEnableDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPtpEnableDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpClockAccuracy_V2 ( FliContext context , PtpClockAccuracyEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPtpClockAccuracy_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'PtpClockAccuracyEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setPtpClockAccuracy_V2 ( FliContext context , PtpClockAccuracyEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrPtpClockAccuracyEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setPtpClockAccuracy_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'PtpClockAccuracyEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpClockAccuracyVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPtpClockAccuracyVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpClockAccuracyAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPtpClockAccuracyAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpClockAccuracyTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPtpClockAccuracyTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpClockAccuracyDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPtpClockAccuracyDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpClockAccuracyDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPtpClockAccuracyDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_executePtpDataSetLatch_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_executePtpDataSetLatch_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpDataSetLatchVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPtpDataSetLatchVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpDataSetLatchAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPtpDataSetLatchAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpDataSetLatchTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPtpDataSetLatchTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpDataSetLatchDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPtpDataSetLatchDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpDataSetLatchDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPtpDataSetLatchDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpStatus_V2 ( FliContext context , PtpStatusEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPtpStatus_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'PtpStatusEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setPtpStatus_V2 ( FliContext context , PtpStatusEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrPtpStatusEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setPtpStatus_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'PtpStatusEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpStatusVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPtpStatusVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpStatusAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPtpStatusAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpStatusTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPtpStatusTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpStatusDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPtpStatusDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpStatusDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPtpStatusDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpServoStatus_V2 ( FliContext context , PtpServoStatusEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPtpServoStatus_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'PtpServoStatusEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setPtpServoStatus_V2 ( FliContext context , PtpServoStatusEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrPtpServoStatusEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setPtpServoStatus_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'PtpServoStatusEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpServoStatusVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPtpServoStatusVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpServoStatusAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPtpServoStatusAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpServoStatusTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPtpServoStatusTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpServoStatusDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPtpServoStatusDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpServoStatusDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPtpServoStatusDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpOffsetFromMaster_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPtpOffsetFromMaster_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setPtpOffsetFromMaster_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setPtpOffsetFromMaster_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpOffsetFromMasterMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPtpOffsetFromMasterMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpOffsetFromMasterMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPtpOffsetFromMasterMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpOffsetFromMasterUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPtpOffsetFromMasterUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpOffsetFromMasterVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPtpOffsetFromMasterVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpOffsetFromMasterAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPtpOffsetFromMasterAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpOffsetFromMasterTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPtpOffsetFromMasterTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpOffsetFromMasterDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPtpOffsetFromMasterDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpOffsetFromMasterDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPtpOffsetFromMasterDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpClockID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPtpClockID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setPtpClockID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setPtpClockID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpClockIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPtpClockIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpClockIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPtpClockIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpClockIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPtpClockIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpClockIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPtpClockIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpClockIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPtpClockIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpClockIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPtpClockIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpClockIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPtpClockIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpClockIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPtpClockIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpParentClockID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPtpParentClockID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setPtpParentClockID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setPtpParentClockID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpParentClockIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPtpParentClockIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpParentClockIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPtpParentClockIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpParentClockIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPtpParentClockIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpParentClockIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPtpParentClockIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpParentClockIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPtpParentClockIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpParentClockIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPtpParentClockIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpParentClockIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPtpParentClockIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpParentClockIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPtpParentClockIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpGrandmasterClockID_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPtpGrandmasterClockID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setPtpGrandmasterClockID_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setPtpGrandmasterClockID_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpGrandmasterClockIDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPtpGrandmasterClockIDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpGrandmasterClockIDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPtpGrandmasterClockIDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpGrandmasterClockIDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPtpGrandmasterClockIDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpGrandmasterClockIDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPtpGrandmasterClockIDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpGrandmasterClockIDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getPtpGrandmasterClockIDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpGrandmasterClockIDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPtpGrandmasterClockIDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpGrandmasterClockIDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPtpGrandmasterClockIDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getPtpGrandmasterClockIDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getPtpGrandmasterClockIDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPhysicalLinkConfiguration_V2 ( FliContext context , GevPhysicalLinkConfigurationEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevPhysicalLinkConfiguration_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'GevPhysicalLinkConfigurationEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGevPhysicalLinkConfiguration_V2 ( FliContext context , GevPhysicalLinkConfigurationEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrGevPhysicalLinkConfigurationEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setGevPhysicalLinkConfiguration_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'GevPhysicalLinkConfigurationEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPhysicalLinkConfigurationVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevPhysicalLinkConfigurationVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPhysicalLinkConfigurationAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevPhysicalLinkConfigurationAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPhysicalLinkConfigurationTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevPhysicalLinkConfigurationTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPhysicalLinkConfigurationDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevPhysicalLinkConfigurationDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPhysicalLinkConfigurationDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevPhysicalLinkConfigurationDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCurrentPhysicalLinkConfiguration_V2 ( FliContext context , GevCurrentPhysicalLinkConfigurationEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevCurrentPhysicalLinkConfiguration_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'GevCurrentPhysicalLinkConfigurationEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGevCurrentPhysicalLinkConfiguration_V2 ( FliContext context , GevCurrentPhysicalLinkConfigurationEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrGevCurrentPhysicalLinkConfigurationEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setGevCurrentPhysicalLinkConfiguration_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'GevCurrentPhysicalLinkConfigurationEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCurrentPhysicalLinkConfigurationVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevCurrentPhysicalLinkConfigurationVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCurrentPhysicalLinkConfigurationAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevCurrentPhysicalLinkConfigurationAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCurrentPhysicalLinkConfigurationTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevCurrentPhysicalLinkConfigurationTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCurrentPhysicalLinkConfigurationDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevCurrentPhysicalLinkConfigurationDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCurrentPhysicalLinkConfigurationDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevCurrentPhysicalLinkConfigurationDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevActiveLinkCount_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevActiveLinkCount_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGevActiveLinkCount_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setGevActiveLinkCount_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevActiveLinkCountMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevActiveLinkCountMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevActiveLinkCountMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevActiveLinkCountMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevActiveLinkCountUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevActiveLinkCountUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevActiveLinkCountVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevActiveLinkCountVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevActiveLinkCountAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevActiveLinkCountAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevActiveLinkCountTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevActiveLinkCountTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevActiveLinkCountDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevActiveLinkCountDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevActiveLinkCountDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevActiveLinkCountDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSupportedOptionSelector_V2 ( FliContext context , GevSupportedOptionSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSupportedOptionSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'GevSupportedOptionSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGevSupportedOptionSelector_V2 ( FliContext context , GevSupportedOptionSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrGevSupportedOptionSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setGevSupportedOptionSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'GevSupportedOptionSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSupportedOptionSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSupportedOptionSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSupportedOptionSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSupportedOptionSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSupportedOptionSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSupportedOptionSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSupportedOptionSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSupportedOptionSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSupportedOptionSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSupportedOptionSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSupportedOption_V2 ( FliContext context , _Bool * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSupportedOption_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGevSupportedOption_V2 ( FliContext context , _Bool val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliSfncCamera_setGevSupportedOption_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSupportedOptionVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSupportedOptionVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSupportedOptionAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSupportedOptionAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSupportedOptionTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSupportedOptionTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSupportedOptionDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSupportedOptionDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSupportedOptionDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSupportedOptionDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevInterfaceSelector_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevInterfaceSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGevInterfaceSelector_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setGevInterfaceSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevInterfaceSelectorMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevInterfaceSelectorMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevInterfaceSelectorMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevInterfaceSelectorMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevInterfaceSelectorUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevInterfaceSelectorUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevInterfaceSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevInterfaceSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevInterfaceSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevInterfaceSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevInterfaceSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevInterfaceSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevInterfaceSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevInterfaceSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevInterfaceSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevInterfaceSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMACAddress_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevMACAddress_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGevMACAddress_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setGevMACAddress_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMACAddressMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevMACAddressMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMACAddressMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevMACAddressMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMACAddressUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevMACAddressUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMACAddressVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevMACAddressVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMACAddressAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevMACAddressAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMACAddressTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevMACAddressTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMACAddressDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevMACAddressDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMACAddressDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevMACAddressDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPAUSEFrameReception_V2 ( FliContext context , _Bool * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevPAUSEFrameReception_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGevPAUSEFrameReception_V2 ( FliContext context , _Bool val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliSfncCamera_setGevPAUSEFrameReception_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPAUSEFrameReceptionVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevPAUSEFrameReceptionVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPAUSEFrameReceptionAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevPAUSEFrameReceptionAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPAUSEFrameReceptionTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevPAUSEFrameReceptionTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPAUSEFrameReceptionDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevPAUSEFrameReceptionDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPAUSEFrameReceptionDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevPAUSEFrameReceptionDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPAUSEFrameTransmission_V2 ( FliContext context , _Bool * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevPAUSEFrameTransmission_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGevPAUSEFrameTransmission_V2 ( FliContext context , _Bool val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliSfncCamera_setGevPAUSEFrameTransmission_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPAUSEFrameTransmissionVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevPAUSEFrameTransmissionVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPAUSEFrameTransmissionAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevPAUSEFrameTransmissionAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPAUSEFrameTransmissionTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevPAUSEFrameTransmissionTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPAUSEFrameTransmissionDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevPAUSEFrameTransmissionDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPAUSEFrameTransmissionDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevPAUSEFrameTransmissionDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCurrentIPConfigurationLLA_V2 ( FliContext context , _Bool * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevCurrentIPConfigurationLLA_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGevCurrentIPConfigurationLLA_V2 ( FliContext context , _Bool val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliSfncCamera_setGevCurrentIPConfigurationLLA_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCurrentIPConfigurationLLAVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevCurrentIPConfigurationLLAVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCurrentIPConfigurationLLAAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevCurrentIPConfigurationLLAAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCurrentIPConfigurationLLATooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevCurrentIPConfigurationLLATooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCurrentIPConfigurationLLADescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevCurrentIPConfigurationLLADescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCurrentIPConfigurationLLADisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevCurrentIPConfigurationLLADisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCurrentIPConfigurationDHCP_V2 ( FliContext context , _Bool * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevCurrentIPConfigurationDHCP_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGevCurrentIPConfigurationDHCP_V2 ( FliContext context , _Bool val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliSfncCamera_setGevCurrentIPConfigurationDHCP_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCurrentIPConfigurationDHCPVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevCurrentIPConfigurationDHCPVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCurrentIPConfigurationDHCPAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevCurrentIPConfigurationDHCPAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCurrentIPConfigurationDHCPTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevCurrentIPConfigurationDHCPTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCurrentIPConfigurationDHCPDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevCurrentIPConfigurationDHCPDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCurrentIPConfigurationDHCPDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevCurrentIPConfigurationDHCPDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCurrentIPConfigurationPersistentIP_V2 ( FliContext context , _Bool * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevCurrentIPConfigurationPersistentIP_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGevCurrentIPConfigurationPersistentIP_V2 ( FliContext context , _Bool val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliSfncCamera_setGevCurrentIPConfigurationPersistentIP_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCurrentIPConfigurationPersistentIPVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevCurrentIPConfigurationPersistentIPVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCurrentIPConfigurationPersistentIPAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevCurrentIPConfigurationPersistentIPAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCurrentIPConfigurationPersistentIPTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevCurrentIPConfigurationPersistentIPTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCurrentIPConfigurationPersistentIPDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevCurrentIPConfigurationPersistentIPDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCurrentIPConfigurationPersistentIPDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevCurrentIPConfigurationPersistentIPDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCurrentIPAddress_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevCurrentIPAddress_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGevCurrentIPAddress_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setGevCurrentIPAddress_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCurrentIPAddressMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevCurrentIPAddressMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCurrentIPAddressMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevCurrentIPAddressMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCurrentIPAddressUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevCurrentIPAddressUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCurrentIPAddressVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevCurrentIPAddressVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCurrentIPAddressAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevCurrentIPAddressAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCurrentIPAddressTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevCurrentIPAddressTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCurrentIPAddressDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevCurrentIPAddressDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCurrentIPAddressDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevCurrentIPAddressDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCurrentSubnetMask_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevCurrentSubnetMask_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGevCurrentSubnetMask_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setGevCurrentSubnetMask_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCurrentSubnetMaskMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevCurrentSubnetMaskMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCurrentSubnetMaskMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevCurrentSubnetMaskMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCurrentSubnetMaskUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevCurrentSubnetMaskUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCurrentSubnetMaskVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevCurrentSubnetMaskVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCurrentSubnetMaskAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevCurrentSubnetMaskAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCurrentSubnetMaskTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevCurrentSubnetMaskTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCurrentSubnetMaskDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevCurrentSubnetMaskDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCurrentSubnetMaskDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevCurrentSubnetMaskDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCurrentDefaultGateway_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevCurrentDefaultGateway_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGevCurrentDefaultGateway_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setGevCurrentDefaultGateway_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCurrentDefaultGatewayMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevCurrentDefaultGatewayMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCurrentDefaultGatewayMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevCurrentDefaultGatewayMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCurrentDefaultGatewayUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevCurrentDefaultGatewayUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCurrentDefaultGatewayVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevCurrentDefaultGatewayVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCurrentDefaultGatewayAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevCurrentDefaultGatewayAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCurrentDefaultGatewayTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevCurrentDefaultGatewayTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCurrentDefaultGatewayDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevCurrentDefaultGatewayDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCurrentDefaultGatewayDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevCurrentDefaultGatewayDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevIPConfigurationStatus_V2 ( FliContext context , GevIPConfigurationStatusEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevIPConfigurationStatus_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'GevIPConfigurationStatusEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGevIPConfigurationStatus_V2 ( FliContext context , GevIPConfigurationStatusEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrGevIPConfigurationStatusEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setGevIPConfigurationStatus_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'GevIPConfigurationStatusEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevIPConfigurationStatusVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevIPConfigurationStatusVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevIPConfigurationStatusAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevIPConfigurationStatusAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevIPConfigurationStatusTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevIPConfigurationStatusTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevIPConfigurationStatusDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevIPConfigurationStatusDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevIPConfigurationStatusDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevIPConfigurationStatusDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevFirstURL_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevFirstURL_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGevFirstURL_V2 ( FliContext context , const char * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliSfncCamera_setGevFirstURL_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevFirstURLVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevFirstURLVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevFirstURLAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevFirstURLAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevFirstURLTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevFirstURLTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevFirstURLDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevFirstURLDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevFirstURLDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevFirstURLDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSecondURL_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSecondURL_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGevSecondURL_V2 ( FliContext context , const char * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliSfncCamera_setGevSecondURL_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSecondURLVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSecondURLVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSecondURLAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSecondURLAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSecondURLTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSecondURLTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSecondURLDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSecondURLDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSecondURLDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSecondURLDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPersistentIPAddress_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevPersistentIPAddress_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGevPersistentIPAddress_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setGevPersistentIPAddress_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPersistentIPAddressMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevPersistentIPAddressMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPersistentIPAddressMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevPersistentIPAddressMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPersistentIPAddressUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevPersistentIPAddressUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPersistentIPAddressVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevPersistentIPAddressVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPersistentIPAddressAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevPersistentIPAddressAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPersistentIPAddressTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevPersistentIPAddressTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPersistentIPAddressDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevPersistentIPAddressDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPersistentIPAddressDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevPersistentIPAddressDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPersistentSubnetMask_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevPersistentSubnetMask_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGevPersistentSubnetMask_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setGevPersistentSubnetMask_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPersistentSubnetMaskMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevPersistentSubnetMaskMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPersistentSubnetMaskMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevPersistentSubnetMaskMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPersistentSubnetMaskUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevPersistentSubnetMaskUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPersistentSubnetMaskVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevPersistentSubnetMaskVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPersistentSubnetMaskAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevPersistentSubnetMaskAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPersistentSubnetMaskTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevPersistentSubnetMaskTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPersistentSubnetMaskDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevPersistentSubnetMaskDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPersistentSubnetMaskDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevPersistentSubnetMaskDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPersistentDefaultGateway_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevPersistentDefaultGateway_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGevPersistentDefaultGateway_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setGevPersistentDefaultGateway_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPersistentDefaultGatewayMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevPersistentDefaultGatewayMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPersistentDefaultGatewayMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevPersistentDefaultGatewayMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPersistentDefaultGatewayUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevPersistentDefaultGatewayUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPersistentDefaultGatewayVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevPersistentDefaultGatewayVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPersistentDefaultGatewayAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevPersistentDefaultGatewayAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPersistentDefaultGatewayTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevPersistentDefaultGatewayTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPersistentDefaultGatewayDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevPersistentDefaultGatewayDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPersistentDefaultGatewayDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevPersistentDefaultGatewayDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevDiscoveryAckDelay_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevDiscoveryAckDelay_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGevDiscoveryAckDelay_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setGevDiscoveryAckDelay_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevDiscoveryAckDelayMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevDiscoveryAckDelayMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevDiscoveryAckDelayMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevDiscoveryAckDelayMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevDiscoveryAckDelayUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevDiscoveryAckDelayUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevDiscoveryAckDelayVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevDiscoveryAckDelayVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevDiscoveryAckDelayAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevDiscoveryAckDelayAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevDiscoveryAckDelayTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevDiscoveryAckDelayTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevDiscoveryAckDelayDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevDiscoveryAckDelayDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevDiscoveryAckDelayDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevDiscoveryAckDelayDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevGVCPExtendedStatusCodesSelector_V2 ( FliContext context , GevGVCPExtendedStatusCodesSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevGVCPExtendedStatusCodesSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'GevGVCPExtendedStatusCodesSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGevGVCPExtendedStatusCodesSelector_V2 ( FliContext context , GevGVCPExtendedStatusCodesSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrGevGVCPExtendedStatusCodesSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setGevGVCPExtendedStatusCodesSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'GevGVCPExtendedStatusCodesSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevGVCPExtendedStatusCodesSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevGVCPExtendedStatusCodesSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevGVCPExtendedStatusCodesSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevGVCPExtendedStatusCodesSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevGVCPExtendedStatusCodesSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevGVCPExtendedStatusCodesSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevGVCPExtendedStatusCodesSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevGVCPExtendedStatusCodesSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevGVCPExtendedStatusCodesSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevGVCPExtendedStatusCodesSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevGVCPExtendedStatusCodes_V2 ( FliContext context , _Bool * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevGVCPExtendedStatusCodes_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGevGVCPExtendedStatusCodes_V2 ( FliContext context , _Bool val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliSfncCamera_setGevGVCPExtendedStatusCodes_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevGVCPExtendedStatusCodesVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevGVCPExtendedStatusCodesVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevGVCPExtendedStatusCodesAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevGVCPExtendedStatusCodesAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevGVCPExtendedStatusCodesTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevGVCPExtendedStatusCodesTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevGVCPExtendedStatusCodesDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevGVCPExtendedStatusCodesDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevGVCPExtendedStatusCodesDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevGVCPExtendedStatusCodesDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevGVCPPendingAck_V2 ( FliContext context , _Bool * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevGVCPPendingAck_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGevGVCPPendingAck_V2 ( FliContext context , _Bool val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliSfncCamera_setGevGVCPPendingAck_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevGVCPPendingAckVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevGVCPPendingAckVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevGVCPPendingAckAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevGVCPPendingAckAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevGVCPPendingAckTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevGVCPPendingAckTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevGVCPPendingAckDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevGVCPPendingAckDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevGVCPPendingAckDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevGVCPPendingAckDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPrimaryApplicationSwitchoverKey_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevPrimaryApplicationSwitchoverKey_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGevPrimaryApplicationSwitchoverKey_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setGevPrimaryApplicationSwitchoverKey_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPrimaryApplicationSwitchoverKeyMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevPrimaryApplicationSwitchoverKeyMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPrimaryApplicationSwitchoverKeyMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevPrimaryApplicationSwitchoverKeyMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPrimaryApplicationSwitchoverKeyUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevPrimaryApplicationSwitchoverKeyUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPrimaryApplicationSwitchoverKeyVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevPrimaryApplicationSwitchoverKeyVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPrimaryApplicationSwitchoverKeyAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevPrimaryApplicationSwitchoverKeyAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPrimaryApplicationSwitchoverKeyTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevPrimaryApplicationSwitchoverKeyTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPrimaryApplicationSwitchoverKeyDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevPrimaryApplicationSwitchoverKeyDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPrimaryApplicationSwitchoverKeyDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevPrimaryApplicationSwitchoverKeyDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevGVSPExtendedIDMode_V2 ( FliContext context , GevGVSPExtendedIDModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevGVSPExtendedIDMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'GevGVSPExtendedIDModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGevGVSPExtendedIDMode_V2 ( FliContext context , GevGVSPExtendedIDModeEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrGevGVSPExtendedIDModeEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setGevGVSPExtendedIDMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'GevGVSPExtendedIDModeEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevGVSPExtendedIDModeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevGVSPExtendedIDModeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevGVSPExtendedIDModeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevGVSPExtendedIDModeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevGVSPExtendedIDModeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevGVSPExtendedIDModeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevGVSPExtendedIDModeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevGVSPExtendedIDModeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevGVSPExtendedIDModeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevGVSPExtendedIDModeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCCP_V2 ( FliContext context , GevCCPEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevCCP_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'GevCCPEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGevCCP_V2 ( FliContext context , GevCCPEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrGevCCPEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setGevCCP_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'GevCCPEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCCPVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevCCPVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCCPAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevCCPAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCCPTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevCCPTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCCPDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevCCPDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevCCPDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevCCPDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPrimaryApplicationSocket_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevPrimaryApplicationSocket_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGevPrimaryApplicationSocket_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setGevPrimaryApplicationSocket_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPrimaryApplicationSocketMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevPrimaryApplicationSocketMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPrimaryApplicationSocketMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevPrimaryApplicationSocketMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPrimaryApplicationSocketUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevPrimaryApplicationSocketUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPrimaryApplicationSocketVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevPrimaryApplicationSocketVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPrimaryApplicationSocketAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevPrimaryApplicationSocketAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPrimaryApplicationSocketTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevPrimaryApplicationSocketTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPrimaryApplicationSocketDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevPrimaryApplicationSocketDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPrimaryApplicationSocketDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevPrimaryApplicationSocketDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPrimaryApplicationIPAddress_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevPrimaryApplicationIPAddress_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGevPrimaryApplicationIPAddress_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setGevPrimaryApplicationIPAddress_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPrimaryApplicationIPAddressMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevPrimaryApplicationIPAddressMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPrimaryApplicationIPAddressMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevPrimaryApplicationIPAddressMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPrimaryApplicationIPAddressUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevPrimaryApplicationIPAddressUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPrimaryApplicationIPAddressVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevPrimaryApplicationIPAddressVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPrimaryApplicationIPAddressAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevPrimaryApplicationIPAddressAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPrimaryApplicationIPAddressTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevPrimaryApplicationIPAddressTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPrimaryApplicationIPAddressDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevPrimaryApplicationIPAddressDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevPrimaryApplicationIPAddressDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevPrimaryApplicationIPAddressDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMCPHostPort_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevMCPHostPort_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGevMCPHostPort_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setGevMCPHostPort_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMCPHostPortMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevMCPHostPortMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMCPHostPortMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevMCPHostPortMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMCPHostPortUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevMCPHostPortUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMCPHostPortVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevMCPHostPortVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMCPHostPortAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevMCPHostPortAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMCPHostPortTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevMCPHostPortTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMCPHostPortDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevMCPHostPortDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMCPHostPortDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevMCPHostPortDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMCDA_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevMCDA_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGevMCDA_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setGevMCDA_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMCDAMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevMCDAMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMCDAMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevMCDAMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMCDAUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevMCDAUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMCDAVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevMCDAVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMCDAAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevMCDAAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMCDATooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevMCDATooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMCDADescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevMCDADescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMCDADisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevMCDADisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMCTT_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevMCTT_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGevMCTT_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setGevMCTT_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMCTTMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevMCTTMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMCTTMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevMCTTMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMCTTUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevMCTTUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMCTTVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevMCTTVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMCTTAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevMCTTAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMCTTTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevMCTTTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMCTTDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevMCTTDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMCTTDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevMCTTDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMCRC_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevMCRC_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGevMCRC_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setGevMCRC_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMCRCMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevMCRCMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMCRCMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevMCRCMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMCRCUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevMCRCUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMCRCVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevMCRCVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMCRCAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevMCRCAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMCRCTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevMCRCTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMCRCDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevMCRCDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMCRCDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevMCRCDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMCSP_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevMCSP_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGevMCSP_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setGevMCSP_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMCSPMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevMCSPMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMCSPMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevMCSPMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMCSPUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevMCSPUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMCSPVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevMCSPVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMCSPAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevMCSPAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMCSPTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevMCSPTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMCSPDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevMCSPDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevMCSPDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevMCSPDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevStreamChannelSelector_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevStreamChannelSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGevStreamChannelSelector_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setGevStreamChannelSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevStreamChannelSelectorMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevStreamChannelSelectorMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevStreamChannelSelectorMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevStreamChannelSelectorMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevStreamChannelSelectorUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevStreamChannelSelectorUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevStreamChannelSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevStreamChannelSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevStreamChannelSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevStreamChannelSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevStreamChannelSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevStreamChannelSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevStreamChannelSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevStreamChannelSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevStreamChannelSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevStreamChannelSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCCFGPacketResendDestination_V2 ( FliContext context , _Bool * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCCFGPacketResendDestination_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGevSCCFGPacketResendDestination_V2 ( FliContext context , _Bool val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliSfncCamera_setGevSCCFGPacketResendDestination_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCCFGPacketResendDestinationVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCCFGPacketResendDestinationVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCCFGPacketResendDestinationAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCCFGPacketResendDestinationAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCCFGPacketResendDestinationTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCCFGPacketResendDestinationTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCCFGPacketResendDestinationDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCCFGPacketResendDestinationDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCCFGPacketResendDestinationDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCCFGPacketResendDestinationDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCCFGAllInTransmission_V2 ( FliContext context , _Bool * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCCFGAllInTransmission_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGevSCCFGAllInTransmission_V2 ( FliContext context , _Bool val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliSfncCamera_setGevSCCFGAllInTransmission_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCCFGAllInTransmissionVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCCFGAllInTransmissionVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCCFGAllInTransmissionAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCCFGAllInTransmissionAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCCFGAllInTransmissionTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCCFGAllInTransmissionTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCCFGAllInTransmissionDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCCFGAllInTransmissionDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCCFGAllInTransmissionDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCCFGAllInTransmissionDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCCFGUnconditionalStreaming_V2 ( FliContext context , _Bool * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCCFGUnconditionalStreaming_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGevSCCFGUnconditionalStreaming_V2 ( FliContext context , _Bool val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliSfncCamera_setGevSCCFGUnconditionalStreaming_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCCFGUnconditionalStreamingVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCCFGUnconditionalStreamingVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCCFGUnconditionalStreamingAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCCFGUnconditionalStreamingAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCCFGUnconditionalStreamingTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCCFGUnconditionalStreamingTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCCFGUnconditionalStreamingDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCCFGUnconditionalStreamingDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCCFGUnconditionalStreamingDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCCFGUnconditionalStreamingDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCCFGExtendedChunkData_V2 ( FliContext context , _Bool * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCCFGExtendedChunkData_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGevSCCFGExtendedChunkData_V2 ( FliContext context , _Bool val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliSfncCamera_setGevSCCFGExtendedChunkData_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCCFGExtendedChunkDataVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCCFGExtendedChunkDataVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCCFGExtendedChunkDataAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCCFGExtendedChunkDataAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCCFGExtendedChunkDataTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCCFGExtendedChunkDataTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCCFGExtendedChunkDataDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCCFGExtendedChunkDataDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCCFGExtendedChunkDataDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCCFGExtendedChunkDataDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCPInterfaceIndex_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCPInterfaceIndex_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGevSCPInterfaceIndex_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setGevSCPInterfaceIndex_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCPInterfaceIndexMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCPInterfaceIndexMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCPInterfaceIndexMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCPInterfaceIndexMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCPInterfaceIndexUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCPInterfaceIndexUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCPInterfaceIndexVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCPInterfaceIndexVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCPInterfaceIndexAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCPInterfaceIndexAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCPInterfaceIndexTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCPInterfaceIndexTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCPInterfaceIndexDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCPInterfaceIndexDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCPInterfaceIndexDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCPInterfaceIndexDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCPHostPort_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCPHostPort_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGevSCPHostPort_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setGevSCPHostPort_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCPHostPortMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCPHostPortMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCPHostPortMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCPHostPortMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCPHostPortUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCPHostPortUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCPHostPortVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCPHostPortVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCPHostPortAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCPHostPortAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCPHostPortTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCPHostPortTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCPHostPortDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCPHostPortDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCPHostPortDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCPHostPortDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCPSFireTestPacket_V2 ( FliContext context , _Bool * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCPSFireTestPacket_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGevSCPSFireTestPacket_V2 ( FliContext context , _Bool val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliSfncCamera_setGevSCPSFireTestPacket_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCPSFireTestPacketVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCPSFireTestPacketVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCPSFireTestPacketAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCPSFireTestPacketAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCPSFireTestPacketTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCPSFireTestPacketTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCPSFireTestPacketDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCPSFireTestPacketDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCPSFireTestPacketDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCPSFireTestPacketDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCPSDoNotFragment_V2 ( FliContext context , _Bool * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCPSDoNotFragment_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGevSCPSDoNotFragment_V2 ( FliContext context , _Bool val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliSfncCamera_setGevSCPSDoNotFragment_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCPSDoNotFragmentVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCPSDoNotFragmentVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCPSDoNotFragmentAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCPSDoNotFragmentAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCPSDoNotFragmentTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCPSDoNotFragmentTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCPSDoNotFragmentDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCPSDoNotFragmentDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCPSDoNotFragmentDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCPSDoNotFragmentDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCPSPacketSize_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCPSPacketSize_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGevSCPSPacketSize_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setGevSCPSPacketSize_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCPSPacketSizeMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCPSPacketSizeMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCPSPacketSizeMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCPSPacketSizeMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCPSPacketSizeUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCPSPacketSizeUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCPSPacketSizeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCPSPacketSizeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCPSPacketSizeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCPSPacketSizeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCPSPacketSizeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCPSPacketSizeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCPSPacketSizeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCPSPacketSizeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCPSPacketSizeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCPSPacketSizeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCPD_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCPD_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGevSCPD_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setGevSCPD_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCPDMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCPDMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCPDMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCPDMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCPDUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCPDUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCPDVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCPDVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCPDAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCPDAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCPDTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCPDTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCPDDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCPDDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCPDDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCPDDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCDA_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCDA_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGevSCDA_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setGevSCDA_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCDAMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCDAMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCDAMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCDAMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCDAUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCDAUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCDAVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCDAVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCDAAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCDAAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCDATooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCDATooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCDADescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCDADescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCDADisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCDADisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCSP_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCSP_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGevSCSP_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setGevSCSP_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCSPMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCSPMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCSPMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCSPMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCSPUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCSPUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCSPVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCSPVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCSPAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCSPAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCSPTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCSPTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCSPDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCSPDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCSPDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCSPDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCZoneCount_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCZoneCount_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGevSCZoneCount_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setGevSCZoneCount_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCZoneCountMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCZoneCountMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCZoneCountMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCZoneCountMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCZoneCountUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCZoneCountUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCZoneCountVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCZoneCountVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCZoneCountAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCZoneCountAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCZoneCountTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCZoneCountTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCZoneCountDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCZoneCountDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCZoneCountDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCZoneCountDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCZoneDirectionAll_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCZoneDirectionAll_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGevSCZoneDirectionAll_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setGevSCZoneDirectionAll_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCZoneDirectionAllMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCZoneDirectionAllMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCZoneDirectionAllMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCZoneDirectionAllMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCZoneDirectionAllUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCZoneDirectionAllUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCZoneDirectionAllVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCZoneDirectionAllVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCZoneDirectionAllAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCZoneDirectionAllAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCZoneDirectionAllTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCZoneDirectionAllTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCZoneDirectionAllDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCZoneDirectionAllDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCZoneDirectionAllDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCZoneDirectionAllDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCZoneConfigurationLock_V2 ( FliContext context , _Bool * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCZoneConfigurationLock_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setGevSCZoneConfigurationLock_V2 ( FliContext context , _Bool val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliSfncCamera_setGevSCZoneConfigurationLock_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCZoneConfigurationLockVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCZoneConfigurationLockVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCZoneConfigurationLockAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCZoneConfigurationLockAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCZoneConfigurationLockTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCZoneConfigurationLockTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCZoneConfigurationLockDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCZoneConfigurationLockDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getGevSCZoneConfigurationLockDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getGevSCZoneConfigurationLockDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getaPAUSEMACCtrlFramesTransmitted_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getaPAUSEMACCtrlFramesTransmitted_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setaPAUSEMACCtrlFramesTransmitted_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setaPAUSEMACCtrlFramesTransmitted_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getaPAUSEMACCtrlFramesTransmittedMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getaPAUSEMACCtrlFramesTransmittedMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getaPAUSEMACCtrlFramesTransmittedMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getaPAUSEMACCtrlFramesTransmittedMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getaPAUSEMACCtrlFramesTransmittedUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getaPAUSEMACCtrlFramesTransmittedUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getaPAUSEMACCtrlFramesTransmittedVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getaPAUSEMACCtrlFramesTransmittedVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getaPAUSEMACCtrlFramesTransmittedAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getaPAUSEMACCtrlFramesTransmittedAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getaPAUSEMACCtrlFramesTransmittedTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getaPAUSEMACCtrlFramesTransmittedTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getaPAUSEMACCtrlFramesTransmittedDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getaPAUSEMACCtrlFramesTransmittedDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getaPAUSEMACCtrlFramesTransmittedDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getaPAUSEMACCtrlFramesTransmittedDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getaPAUSEMACCtrlFramesReceived_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getaPAUSEMACCtrlFramesReceived_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setaPAUSEMACCtrlFramesReceived_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setaPAUSEMACCtrlFramesReceived_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getaPAUSEMACCtrlFramesReceivedMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getaPAUSEMACCtrlFramesReceivedMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getaPAUSEMACCtrlFramesReceivedMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getaPAUSEMACCtrlFramesReceivedMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getaPAUSEMACCtrlFramesReceivedUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getaPAUSEMACCtrlFramesReceivedUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getaPAUSEMACCtrlFramesReceivedVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getaPAUSEMACCtrlFramesReceivedVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getaPAUSEMACCtrlFramesReceivedAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getaPAUSEMACCtrlFramesReceivedAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getaPAUSEMACCtrlFramesReceivedTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getaPAUSEMACCtrlFramesReceivedTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getaPAUSEMACCtrlFramesReceivedDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getaPAUSEMACCtrlFramesReceivedDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getaPAUSEMACCtrlFramesReceivedDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getaPAUSEMACCtrlFramesReceivedDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getClConfiguration_V2 ( FliContext context , ClConfigurationEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getClConfiguration_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ClConfigurationEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setClConfiguration_V2 ( FliContext context , ClConfigurationEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrClConfigurationEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setClConfiguration_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ClConfigurationEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getClConfigurationVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getClConfigurationVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getClConfigurationAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getClConfigurationAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getClConfigurationTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getClConfigurationTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getClConfigurationDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getClConfigurationDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getClConfigurationDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getClConfigurationDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getClTimeSlotsCount_V2 ( FliContext context , ClTimeSlotsCountEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getClTimeSlotsCount_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ClTimeSlotsCountEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setClTimeSlotsCount_V2 ( FliContext context , ClTimeSlotsCountEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrClTimeSlotsCountEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setClTimeSlotsCount_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'ClTimeSlotsCountEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getClTimeSlotsCountVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getClTimeSlotsCountVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getClTimeSlotsCountAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getClTimeSlotsCountAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getClTimeSlotsCountTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getClTimeSlotsCountTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getClTimeSlotsCountDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getClTimeSlotsCountDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getClTimeSlotsCountDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getClTimeSlotsCountDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkConfigurationStatus_V2 ( FliContext context , CxpLinkConfigurationStatusEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkConfigurationStatus_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'CxpLinkConfigurationStatusEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setCxpLinkConfigurationStatus_V2 ( FliContext context , CxpLinkConfigurationStatusEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrCxpLinkConfigurationStatusEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setCxpLinkConfigurationStatus_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'CxpLinkConfigurationStatusEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkConfigurationStatusVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkConfigurationStatusVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkConfigurationStatusAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkConfigurationStatusAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkConfigurationStatusTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkConfigurationStatusTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkConfigurationStatusDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkConfigurationStatusDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkConfigurationStatusDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkConfigurationStatusDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkConfigurationPreferred_V2 ( FliContext context , CxpLinkConfigurationPreferredEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkConfigurationPreferred_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'CxpLinkConfigurationPreferredEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setCxpLinkConfigurationPreferred_V2 ( FliContext context , CxpLinkConfigurationPreferredEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrCxpLinkConfigurationPreferredEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setCxpLinkConfigurationPreferred_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'CxpLinkConfigurationPreferredEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkConfigurationPreferredVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkConfigurationPreferredVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkConfigurationPreferredAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkConfigurationPreferredAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkConfigurationPreferredTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkConfigurationPreferredTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkConfigurationPreferredDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkConfigurationPreferredDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkConfigurationPreferredDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkConfigurationPreferredDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkConfiguration_V2 ( FliContext context , CxpLinkConfigurationEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkConfiguration_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'CxpLinkConfigurationEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setCxpLinkConfiguration_V2 ( FliContext context , CxpLinkConfigurationEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrCxpLinkConfigurationEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setCxpLinkConfiguration_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'CxpLinkConfigurationEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkConfigurationVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkConfigurationVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkConfigurationAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkConfigurationAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkConfigurationTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkConfigurationTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkConfigurationDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkConfigurationDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkConfigurationDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkConfigurationDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingEnable_V2 ( FliContext context , _Bool * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingEnable_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setCxpLinkSharingEnable_V2 ( FliContext context , _Bool val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolThunk';fcns.name{fcnNum}='FliSfncCamera_setCxpLinkSharingEnable_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingEnableVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingEnableVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingEnableAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingEnableAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingEnableTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingEnableTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingEnableDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingEnableDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingEnableDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingEnableDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingSubDeviceSelector_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingSubDeviceSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setCxpLinkSharingSubDeviceSelector_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setCxpLinkSharingSubDeviceSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingSubDeviceSelectorMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingSubDeviceSelectorMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingSubDeviceSelectorMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingSubDeviceSelectorMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingSubDeviceSelectorUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingSubDeviceSelectorUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingSubDeviceSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingSubDeviceSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingSubDeviceSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingSubDeviceSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingSubDeviceSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingSubDeviceSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingSubDeviceSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingSubDeviceSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingSubDeviceSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingSubDeviceSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingStatus_V2 ( FliContext context , CxpLinkSharingStatusEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingStatus_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'CxpLinkSharingStatusEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setCxpLinkSharingStatus_V2 ( FliContext context , CxpLinkSharingStatusEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrCxpLinkSharingStatusEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setCxpLinkSharingStatus_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'CxpLinkSharingStatusEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingStatusVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingStatusVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingStatusAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingStatusAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingStatusTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingStatusTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingStatusDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingStatusDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingStatusDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingStatusDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingSubDeviceType_V2 ( FliContext context , CxpLinkSharingSubDeviceTypeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingSubDeviceType_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'CxpLinkSharingSubDeviceTypeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setCxpLinkSharingSubDeviceType_V2 ( FliContext context , CxpLinkSharingSubDeviceTypeEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrCxpLinkSharingSubDeviceTypeEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setCxpLinkSharingSubDeviceType_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'CxpLinkSharingSubDeviceTypeEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingSubDeviceTypeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingSubDeviceTypeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingSubDeviceTypeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingSubDeviceTypeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingSubDeviceTypeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingSubDeviceTypeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingSubDeviceTypeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingSubDeviceTypeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingSubDeviceTypeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingSubDeviceTypeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingHorizontalStripeCount_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingHorizontalStripeCount_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setCxpLinkSharingHorizontalStripeCount_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setCxpLinkSharingHorizontalStripeCount_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingHorizontalStripeCountMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingHorizontalStripeCountMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingHorizontalStripeCountMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingHorizontalStripeCountMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingHorizontalStripeCountUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingHorizontalStripeCountUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingHorizontalStripeCountVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingHorizontalStripeCountVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingHorizontalStripeCountAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingHorizontalStripeCountAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingHorizontalStripeCountTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingHorizontalStripeCountTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingHorizontalStripeCountDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingHorizontalStripeCountDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingHorizontalStripeCountDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingHorizontalStripeCountDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingVerticalStripeCount_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingVerticalStripeCount_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setCxpLinkSharingVerticalStripeCount_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setCxpLinkSharingVerticalStripeCount_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingVerticalStripeCountMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingVerticalStripeCountMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingVerticalStripeCountMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingVerticalStripeCountMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingVerticalStripeCountUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingVerticalStripeCountUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingVerticalStripeCountVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingVerticalStripeCountVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingVerticalStripeCountAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingVerticalStripeCountAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingVerticalStripeCountTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingVerticalStripeCountTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingVerticalStripeCountDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingVerticalStripeCountDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingVerticalStripeCountDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingVerticalStripeCountDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingHorizontalOverlap_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingHorizontalOverlap_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setCxpLinkSharingHorizontalOverlap_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setCxpLinkSharingHorizontalOverlap_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingHorizontalOverlapMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingHorizontalOverlapMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingHorizontalOverlapMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingHorizontalOverlapMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingHorizontalOverlapUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingHorizontalOverlapUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingHorizontalOverlapVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingHorizontalOverlapVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingHorizontalOverlapAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingHorizontalOverlapAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingHorizontalOverlapTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingHorizontalOverlapTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingHorizontalOverlapDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingHorizontalOverlapDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingHorizontalOverlapDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingHorizontalOverlapDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingVerticalOverlap_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingVerticalOverlap_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setCxpLinkSharingVerticalOverlap_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setCxpLinkSharingVerticalOverlap_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingVerticalOverlapMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingVerticalOverlapMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingVerticalOverlapMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingVerticalOverlapMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingVerticalOverlapUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingVerticalOverlapUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingVerticalOverlapVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingVerticalOverlapVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingVerticalOverlapAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingVerticalOverlapAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingVerticalOverlapTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingVerticalOverlapTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingVerticalOverlapDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingVerticalOverlapDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingVerticalOverlapDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingVerticalOverlapDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingDuplicateStripe_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingDuplicateStripe_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setCxpLinkSharingDuplicateStripe_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setCxpLinkSharingDuplicateStripe_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingDuplicateStripeMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingDuplicateStripeMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingDuplicateStripeMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingDuplicateStripeMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingDuplicateStripeUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingDuplicateStripeUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingDuplicateStripeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingDuplicateStripeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingDuplicateStripeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingDuplicateStripeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingDuplicateStripeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingDuplicateStripeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingDuplicateStripeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingDuplicateStripeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpLinkSharingDuplicateStripeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpLinkSharingDuplicateStripeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpConnectionSelector_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpConnectionSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setCxpConnectionSelector_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setCxpConnectionSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpConnectionSelectorMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpConnectionSelectorMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpConnectionSelectorMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpConnectionSelectorMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpConnectionSelectorUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpConnectionSelectorUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpConnectionSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpConnectionSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpConnectionSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpConnectionSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpConnectionSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpConnectionSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpConnectionSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpConnectionSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpConnectionSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpConnectionSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpConnectionTestMode_V2 ( FliContext context , CxpConnectionTestModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpConnectionTestMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'CxpConnectionTestModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setCxpConnectionTestMode_V2 ( FliContext context , CxpConnectionTestModeEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrCxpConnectionTestModeEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setCxpConnectionTestMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'CxpConnectionTestModeEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpConnectionTestModeVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpConnectionTestModeVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpConnectionTestModeAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpConnectionTestModeAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpConnectionTestModeTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpConnectionTestModeTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpConnectionTestModeDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpConnectionTestModeDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpConnectionTestModeDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpConnectionTestModeDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpConnectionTestErrorCount_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpConnectionTestErrorCount_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setCxpConnectionTestErrorCount_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setCxpConnectionTestErrorCount_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpConnectionTestErrorCountMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpConnectionTestErrorCountMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpConnectionTestErrorCountMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpConnectionTestErrorCountMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpConnectionTestErrorCountUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpConnectionTestErrorCountUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpConnectionTestErrorCountVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpConnectionTestErrorCountVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpConnectionTestErrorCountAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpConnectionTestErrorCountAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpConnectionTestErrorCountTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpConnectionTestErrorCountTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpConnectionTestErrorCountDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpConnectionTestErrorCountDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpConnectionTestErrorCountDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpConnectionTestErrorCountDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpSendReceiveSelector_V2 ( FliContext context , CxpSendReceiveSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpSendReceiveSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'CxpSendReceiveSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setCxpSendReceiveSelector_V2 ( FliContext context , CxpSendReceiveSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrCxpSendReceiveSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setCxpSendReceiveSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'CxpSendReceiveSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpSendReceiveSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpSendReceiveSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpSendReceiveSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpSendReceiveSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpSendReceiveSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpSendReceiveSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpSendReceiveSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpSendReceiveSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpSendReceiveSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpSendReceiveSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpConnectionTestPacketCount_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpConnectionTestPacketCount_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setCxpConnectionTestPacketCount_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setCxpConnectionTestPacketCount_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpConnectionTestPacketCountMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpConnectionTestPacketCountMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpConnectionTestPacketCountMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpConnectionTestPacketCountMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpConnectionTestPacketCountUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpConnectionTestPacketCountUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpConnectionTestPacketCountVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpConnectionTestPacketCountVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpConnectionTestPacketCountAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpConnectionTestPacketCountAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpConnectionTestPacketCountTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpConnectionTestPacketCountTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpConnectionTestPacketCountDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpConnectionTestPacketCountDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpConnectionTestPacketCountDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpConnectionTestPacketCountDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpErrorCounterSelector_V2 ( FliContext context , CxpErrorCounterSelectorEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpErrorCounterSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'CxpErrorCounterSelectorEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setCxpErrorCounterSelector_V2 ( FliContext context , CxpErrorCounterSelectorEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrCxpErrorCounterSelectorEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setCxpErrorCounterSelector_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'CxpErrorCounterSelectorEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpErrorCounterSelectorVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpErrorCounterSelectorVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpErrorCounterSelectorAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpErrorCounterSelectorAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpErrorCounterSelectorTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpErrorCounterSelectorTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpErrorCounterSelectorDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpErrorCounterSelectorDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpErrorCounterSelectorDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpErrorCounterSelectorDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_executeCxpErrorCounterReset_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_executeCxpErrorCounterReset_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpErrorCounterResetVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpErrorCounterResetVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpErrorCounterResetAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpErrorCounterResetAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpErrorCounterResetTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpErrorCounterResetTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpErrorCounterResetDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpErrorCounterResetDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpErrorCounterResetDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpErrorCounterResetDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpErrorCounterValue_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpErrorCounterValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setCxpErrorCounterValue_V2 ( FliContext context , int64_t val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint64Thunk';fcns.name{fcnNum}='FliSfncCamera_setCxpErrorCounterValue_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpErrorCounterValueMin_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpErrorCounterValueMin_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpErrorCounterValueMax_V2 ( FliContext context , int64_t * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpErrorCounterValueMax_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int64Ptr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpErrorCounterValueUnit_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpErrorCounterValueUnit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpErrorCounterValueVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpErrorCounterValueVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpErrorCounterValueAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpErrorCounterValueAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpErrorCounterValueTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpErrorCounterValueTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpErrorCounterValueDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpErrorCounterValueDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpErrorCounterValueDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpErrorCounterValueDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpErrorCounterStatus_V2 ( FliContext context , CxpErrorCounterStatusEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpErrorCounterStatus_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'CxpErrorCounterStatusEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setCxpErrorCounterStatus_V2 ( FliContext context , CxpErrorCounterStatusEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrCxpErrorCounterStatusEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setCxpErrorCounterStatus_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'CxpErrorCounterStatusEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpErrorCounterStatusVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpErrorCounterStatusVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpErrorCounterStatusAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpErrorCounterStatusAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpErrorCounterStatusTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpErrorCounterStatusTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpErrorCounterStatusDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpErrorCounterStatusDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpErrorCounterStatusDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpErrorCounterStatusDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_executeCxpPoCxpAuto_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_executeCxpPoCxpAuto_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpPoCxpAutoVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpPoCxpAutoVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpPoCxpAutoAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpPoCxpAutoAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpPoCxpAutoTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpPoCxpAutoTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpPoCxpAutoDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpPoCxpAutoDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpPoCxpAutoDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpPoCxpAutoDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_executeCxpPoCxpTurnOff_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_executeCxpPoCxpTurnOff_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpPoCxpTurnOffVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpPoCxpTurnOffVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpPoCxpTurnOffAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpPoCxpTurnOffAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpPoCxpTurnOffTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpPoCxpTurnOffTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpPoCxpTurnOffDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpPoCxpTurnOffDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpPoCxpTurnOffDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpPoCxpTurnOffDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_executeCxpPoCxpTripReset_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_executeCxpPoCxpTripReset_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpPoCxpTripResetVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpPoCxpTripResetVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpPoCxpTripResetAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpPoCxpTripResetAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpPoCxpTripResetTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpPoCxpTripResetTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpPoCxpTripResetDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpPoCxpTripResetDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpPoCxpTripResetDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpPoCxpTripResetDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpPoCxpStatus_V2 ( FliContext context , CxpPoCxpStatusEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpPoCxpStatus_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'CxpPoCxpStatusEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_setCxpPoCxpStatus_V2 ( FliContext context , CxpPoCxpStatusEnum val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrCxpPoCxpStatusEnumThunk';fcns.name{fcnNum}='FliSfncCamera_setCxpPoCxpStatus_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'CxpPoCxpStatusEnum'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpPoCxpStatusVisibility_V2 ( FliContext context , VisibilityEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpPoCxpStatusVisibility_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'VisibilityEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpPoCxpStatusAccessMode_V2 ( FliContext context , AccessModeEnum * val ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSfncCamera_getCxpPoCxpStatusAccessMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'AccessModeEnumPtr'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpPoCxpStatusTooltip_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpPoCxpStatusTooltip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpPoCxpStatusDescription_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpPoCxpStatusDescription_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSfncCamera_getCxpPoCxpStatusDisplayName_V2 ( FliContext context , char * val , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSfncCamera_getCxpPoCxpStatusDisplayName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  void FliImageProcessing_enableIndependentMode_V2 ( FliContext context , ProcessingId id , _Bool enable ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32_BoolThunk';fcns.name{fcnNum}='FliImageProcessing_enableIndependentMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliImageProcessing_isIndependent_V2 ( FliContext context , ProcessingId id ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint32Thunk';fcns.name{fcnNum}='FliImageProcessing_isIndependent_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int32'};fcnNum=fcnNum+1;
%  unsigned char * FliImageProcessing_getProcessedImage_V2 ( FliContext context , ProcessingId id , const uint8_t * image ); 
fcns.thunkname{fcnNum}='voidPtrvoidPtrint32voidPtrThunk';fcns.name{fcnNum}='FliImageProcessing_getProcessedImage_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='uint8Ptr'; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'uint8Ptr'};fcnNum=fcnNum+1;
%  void FliImageProcessing_getColormapList_V2 ( FliContext context , ProcessingId id , char * colormapList , size_t size ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32cstringuint64Thunk';fcns.name{fcnNum}='FliImageProcessing_getColormapList_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  void FliImageProcessing_setColorMap_V2 ( FliContext context , ProcessingId id , const char * colorMap ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32cstringThunk';fcns.name{fcnNum}='FliImageProcessing_setColorMap_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'cstring'};fcnNum=fcnNum+1;
%  void FliImageProcessing_getClippingList_V2 ( FliContext context , ProcessingId id , char * clippingList , size_t size ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32cstringuint64Thunk';fcns.name{fcnNum}='FliImageProcessing_getClippingList_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  void FliImageProcessing_setClippingType_V2 ( FliContext context , ProcessingId id , const char * clipping ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32cstringThunk';fcns.name{fcnNum}='FliImageProcessing_setClippingType_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'cstring'};fcnNum=fcnNum+1;
%  void FliImageProcessing_setDimension_V2 ( FliContext context , ProcessingId id , unsigned int width , unsigned int height ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32uint32uint32Thunk';fcns.name{fcnNum}='FliImageProcessing_setDimension_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'uint32', 'uint32'};fcnNum=fcnNum+1;
%  void FliImageProcessing_setGamma_V2 ( FliContext context , ProcessingId id , double gamma ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32doubleThunk';fcns.name{fcnNum}='FliImageProcessing_setGamma_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'double'};fcnNum=fcnNum+1;
%  void FliImageProcessing_setRotationAngle_V2 ( FliContext context , ProcessingId id , unsigned int angle ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32uint32Thunk';fcns.name{fcnNum}='FliImageProcessing_setRotationAngle_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'uint32'};fcnNum=fcnNum+1;
%  void FliImageProcessing_enableDisplayInfos_V2 ( FliContext context , ProcessingId id , _Bool enable ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32_BoolThunk';fcns.name{fcnNum}='FliImageProcessing_enableDisplayInfos_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'bool'};fcnNum=fcnNum+1;
%  double FliImageProcessing_getMean16b_V2 ( FliContext context , ProcessingId id ); 
fcns.thunkname{fcnNum}='doublevoidPtrint32Thunk';fcns.name{fcnNum}='FliImageProcessing_getMean16b_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}={'voidPtr', 'int32'};fcnNum=fcnNum+1;
%  double FliImageProcessing_getSpatialStdDev16b_V2 ( FliContext context , ProcessingId id ); 
fcns.thunkname{fcnNum}='doublevoidPtrint32Thunk';fcns.name{fcnNum}='FliImageProcessing_getSpatialStdDev16b_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}={'voidPtr', 'int32'};fcnNum=fcnNum+1;
%  double FliImageProcessing_getMean8b_V2 ( FliContext context , ProcessingId id ); 
fcns.thunkname{fcnNum}='doublevoidPtrint32Thunk';fcns.name{fcnNum}='FliImageProcessing_getMean8b_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}={'voidPtr', 'int32'};fcnNum=fcnNum+1;
%  double FliImageProcessing_getSpatialStdDev8b_V2 ( FliContext context , ProcessingId id ); 
fcns.thunkname{fcnNum}='doublevoidPtrint32Thunk';fcns.name{fcnNum}='FliImageProcessing_getSpatialStdDev8b_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}={'voidPtr', 'int32'};fcnNum=fcnNum+1;
%  double FliImageProcessing_getClipBlack_V2 ( FliContext context , ProcessingId id ); 
fcns.thunkname{fcnNum}='doublevoidPtrint32Thunk';fcns.name{fcnNum}='FliImageProcessing_getClipBlack_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}={'voidPtr', 'int32'};fcnNum=fcnNum+1;
%  void FliImageProcessing_setClipBlack_V2 ( FliContext context , ProcessingId id , int16_t val ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32int16Thunk';fcns.name{fcnNum}='FliImageProcessing_setClipBlack_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'int16'};fcnNum=fcnNum+1;
%  double FliImageProcessing_getClipWhite_V2 ( FliContext context , ProcessingId id ); 
fcns.thunkname{fcnNum}='doublevoidPtrint32Thunk';fcns.name{fcnNum}='FliImageProcessing_getClipWhite_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}={'voidPtr', 'int32'};fcnNum=fcnNum+1;
%  void FliImageProcessing_setClipWhite_V2 ( FliContext context , ProcessingId id , int16_t val ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32int16Thunk';fcns.name{fcnNum}='FliImageProcessing_setClipWhite_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'int16'};fcnNum=fcnNum+1;
%  int16_t FliImageProcessing_getMinVal_V2 ( FliContext context , ProcessingId id ); 
fcns.thunkname{fcnNum}='int16voidPtrint32Thunk';fcns.name{fcnNum}='FliImageProcessing_getMinVal_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='int16'; fcns.RHS{fcnNum}={'voidPtr', 'int32'};fcnNum=fcnNum+1;
%  int32_t FliImageProcessing_getMaxVal_V2 ( FliContext context , ProcessingId id ); 
fcns.thunkname{fcnNum}='int32voidPtrint32Thunk';fcns.name{fcnNum}='FliImageProcessing_getMaxVal_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}={'voidPtr', 'int32'};fcnNum=fcnNum+1;
%  const uint64_t * FliImageProcessing_getHistogram8b_V2 ( FliContext context , ProcessingId id , size_t * size ); 
fcns.thunkname{fcnNum}='voidPtrvoidPtrint32voidPtrThunk';fcns.name{fcnNum}='FliImageProcessing_getHistogram8b_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='uint64Ptr'; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'uint64Ptr'};fcnNum=fcnNum+1;
%  const uint64_t * FliImageProcessing_getHistogram16b_V2 ( FliContext context , ProcessingId id , size_t * size ); 
fcns.thunkname{fcnNum}='voidPtrvoidPtrint32voidPtrThunk';fcns.name{fcnNum}='FliImageProcessing_getHistogram16b_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='uint64Ptr'; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'uint64Ptr'};fcnNum=fcnNum+1;
%  const uint64_t * FliImageProcessing_getHistogram16bNegative_V2 ( FliContext context , ProcessingId id , size_t * size ); 
fcns.thunkname{fcnNum}='voidPtrvoidPtrint32voidPtrThunk';fcns.name{fcnNum}='FliImageProcessing_getHistogram16bNegative_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='uint64Ptr'; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'uint64Ptr'};fcnNum=fcnNum+1;
%  void FliImageProcessing_clip_V2 ( FliContext context , ProcessingId id , int x , int y , int width , int height ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32int32int32int32int32Thunk';fcns.name{fcnNum}='FliImageProcessing_clip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'int32', 'int32', 'int32', 'int32'};fcnNum=fcnNum+1;
%  void FliImageProcessing_enableAutoClip_V2 ( FliContext context , ProcessingId id , _Bool enable ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32_BoolThunk';fcns.name{fcnNum}='FliImageProcessing_enableAutoClip_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'bool'};fcnNum=fcnNum+1;
%  void FliImageProcessing_enableAutoExposure_V2 ( FliContext context , ProcessingId id , _Bool enable ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32_BoolThunk';fcns.name{fcnNum}='FliImageProcessing_enableAutoExposure_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'bool'};fcnNum=fcnNum+1;
%  void FliImageProcessing_updateAutoExposureParam_V2 ( FliContext context , ProcessingId id ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32Thunk';fcns.name{fcnNum}='FliImageProcessing_updateAutoExposureParam_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32'};fcnNum=fcnNum+1;
%  void FliImageProcessing_enableFilters_V2 ( FliContext context , ProcessingId id , _Bool enable ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32_BoolThunk';fcns.name{fcnNum}='FliImageProcessing_enableFilters_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'bool'};fcnNum=fcnNum+1;
%  double FliImageProcessing_getCoeffA_V2 ( FliContext context , ProcessingId id ); 
fcns.thunkname{fcnNum}='doublevoidPtrint32Thunk';fcns.name{fcnNum}='FliImageProcessing_getCoeffA_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}={'voidPtr', 'int32'};fcnNum=fcnNum+1;
%  double FliImageProcessing_getCoeffB_V2 ( FliContext context , ProcessingId id ); 
fcns.thunkname{fcnNum}='doublevoidPtrint32Thunk';fcns.name{fcnNum}='FliImageProcessing_getCoeffB_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='double'; fcns.RHS{fcnNum}={'voidPtr', 'int32'};fcnNum=fcnNum+1;
%  void FliImageProcessing_setStdDevAndMeanSelection_V2 ( FliContext context , ProcessingId id , uint16_t x , uint16_t y , uint16_t width , uint16_t height ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32uint16uint16uint16uint16Thunk';fcns.name{fcnNum}='FliImageProcessing_setStdDevAndMeanSelection_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'uint16', 'uint16', 'uint16', 'uint16'};fcnNum=fcnNum+1;
%  void FliImageProcessing_enableDenoising_V2 ( FliContext context , ProcessingId id , _Bool enable ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32_BoolThunk';fcns.name{fcnNum}='FliImageProcessing_enableDenoising_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'bool'};fcnNum=fcnNum+1;
%  void FliImageProcessing_setDenoisingH_V2 ( FliContext context , ProcessingId id , float val ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32floatThunk';fcns.name{fcnNum}='FliImageProcessing_setDenoisingH_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'single'};fcnNum=fcnNum+1;
%  void FliImageProcessing_setDenoisingTemplateWindowSize_V2 ( FliContext context , ProcessingId id , int val ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32int32Thunk';fcns.name{fcnNum}='FliImageProcessing_setDenoisingTemplateWindowSize_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'int32'};fcnNum=fcnNum+1;
%  void FliImageProcessing_setDenoisingSearchWindowSize_V2 ( FliContext context , ProcessingId id , int val ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32int32Thunk';fcns.name{fcnNum}='FliImageProcessing_setDenoisingSearchWindowSize_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'int32'};fcnNum=fcnNum+1;
%  void FliImageProcessing_enableSmoothImage_V2 ( FliContext context , ProcessingId id , _Bool enable ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32_BoolThunk';fcns.name{fcnNum}='FliImageProcessing_enableSmoothImage_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'bool'};fcnNum=fcnNum+1;
%  void FliImageProcessing_enableManualClippingCoeff_V2 ( FliContext context , ProcessingId id , _Bool enable ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32_BoolThunk';fcns.name{fcnNum}='FliImageProcessing_enableManualClippingCoeff_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'bool'};fcnNum=fcnNum+1;
%  void FliImageProcessing_setClippingAlpha_V2 ( FliContext context , ProcessingId id , double alpha ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32doubleThunk';fcns.name{fcnNum}='FliImageProcessing_setClippingAlpha_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'double'};fcnNum=fcnNum+1;
%  void FliImageProcessing_setClippingBeta_V2 ( FliContext context , ProcessingId id , double beta ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32doubleThunk';fcns.name{fcnNum}='FliImageProcessing_setClippingBeta_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'double'};fcnNum=fcnNum+1;
%  void FliImageProcessing_enableSharpen_V2 ( FliContext context , ProcessingId id , _Bool enable ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32_BoolThunk';fcns.name{fcnNum}='FliImageProcessing_enableSharpen_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'bool'};fcnNum=fcnNum+1;
%  void FliImageProcessing_setSharpenKsize_V2 ( FliContext context , ProcessingId id , int width , int height ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32int32int32Thunk';fcns.name{fcnNum}='FliImageProcessing_setSharpenKsize_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'int32', 'int32'};fcnNum=fcnNum+1;
%  void FliImageProcessing_setSharpenSigmaX_V2 ( FliContext context , ProcessingId id , double val ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32doubleThunk';fcns.name{fcnNum}='FliImageProcessing_setSharpenSigmaX_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'double'};fcnNum=fcnNum+1;
%  void FliImageProcessing_setSharpenSigmaY_V2 ( FliContext context , ProcessingId id , double val ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32doubleThunk';fcns.name{fcnNum}='FliImageProcessing_setSharpenSigmaY_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'double'};fcnNum=fcnNum+1;
%  void FliImageProcessing_setSharpenAlpha_V2 ( FliContext context , ProcessingId id , double val ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32doubleThunk';fcns.name{fcnNum}='FliImageProcessing_setSharpenAlpha_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'double'};fcnNum=fcnNum+1;
%  void FliImageProcessing_setSharpenBeta_V2 ( FliContext context , ProcessingId id , double val ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32doubleThunk';fcns.name{fcnNum}='FliImageProcessing_setSharpenBeta_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'double'};fcnNum=fcnNum+1;
%  void FliImageProcessing_setSharpenGamma_V2 ( FliContext context , ProcessingId id , double val ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32doubleThunk';fcns.name{fcnNum}='FliImageProcessing_setSharpenGamma_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'double'};fcnNum=fcnNum+1;
%  void FliImageProcessing_enableClahe_V2 ( FliContext context , ProcessingId id , _Bool enable ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32_BoolThunk';fcns.name{fcnNum}='FliImageProcessing_enableClahe_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'bool'};fcnNum=fcnNum+1;
%  void FliImageProcessing_setClaheCliplimit_V2 ( FliContext context , ProcessingId id , double limit ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32doubleThunk';fcns.name{fcnNum}='FliImageProcessing_setClaheCliplimit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'double'};fcnNum=fcnNum+1;
%  void FliImageProcessing_setClaheTileGridSize_V2 ( FliContext context , ProcessingId id , int width , int height ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32int32int32Thunk';fcns.name{fcnNum}='FliImageProcessing_setClaheTileGridSize_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'int32', 'int32'};fcnNum=fcnNum+1;
%  void FliImageProcessing_enableImagesAccumulation_V2 ( FliContext context , ProcessingId id , _Bool enable ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32_BoolThunk';fcns.name{fcnNum}='FliImageProcessing_enableImagesAccumulation_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'bool'};fcnNum=fcnNum+1;
%  void FliImageProcessing_setNbImagesAccumulation_V2 ( FliContext context , ProcessingId id , uint8_t val ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32uint8Thunk';fcns.name{fcnNum}='FliImageProcessing_setNbImagesAccumulation_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'uint8'};fcnNum=fcnNum+1;
%  void FliImageProcessing_flipVertically_V2 ( FliContext context , ProcessingId id ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32Thunk';fcns.name{fcnNum}='FliImageProcessing_flipVertically_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32'};fcnNum=fcnNum+1;
%  void FliImageProcessing_flipHorizontally_V2 ( FliContext context , ProcessingId id ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32Thunk';fcns.name{fcnNum}='FliImageProcessing_flipHorizontally_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32'};fcnNum=fcnNum+1;
%  _Bool FliImageProcessing_isFlippedHorizontally_V2 ( FliContext context , ProcessingId id ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint32Thunk';fcns.name{fcnNum}='FliImageProcessing_isFlippedHorizontally_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int32'};fcnNum=fcnNum+1;
%  _Bool FliImageProcessing_isFlippedVertically_V2 ( FliContext context , ProcessingId id ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint32Thunk';fcns.name{fcnNum}='FliImageProcessing_isFlippedVertically_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int32'};fcnNum=fcnNum+1;
%  void FliImageProcessing_setToneMappingNormal_V2 ( FliContext context , ProcessingId id ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32Thunk';fcns.name{fcnNum}='FliImageProcessing_setToneMappingNormal_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32'};fcnNum=fcnNum+1;
%  void FliImageProcessing_setToneMappingDrago_V2 ( FliContext context , ProcessingId id ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32Thunk';fcns.name{fcnNum}='FliImageProcessing_setToneMappingDrago_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32'};fcnNum=fcnNum+1;
%  void FliImageProcessing_setToneMappingReinhard_V2 ( FliContext context , ProcessingId id ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32Thunk';fcns.name{fcnNum}='FliImageProcessing_setToneMappingReinhard_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32'};fcnNum=fcnNum+1;
%  void FliImageProcessing_setToneMappingMantiuk_V2 ( FliContext context , ProcessingId id ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32Thunk';fcns.name{fcnNum}='FliImageProcessing_setToneMappingMantiuk_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32'};fcnNum=fcnNum+1;
%  void FliImageProcessing_setDragoGamma_V2 ( FliContext context , ProcessingId id , float gamma ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32floatThunk';fcns.name{fcnNum}='FliImageProcessing_setDragoGamma_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'single'};fcnNum=fcnNum+1;
%  void FliImageProcessing_setDragoSaturation_V2 ( FliContext context , ProcessingId id , float saturation ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32floatThunk';fcns.name{fcnNum}='FliImageProcessing_setDragoSaturation_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'single'};fcnNum=fcnNum+1;
%  void FliImageProcessing_setDragoBias_V2 ( FliContext context , ProcessingId id , float bias ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32floatThunk';fcns.name{fcnNum}='FliImageProcessing_setDragoBias_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'single'};fcnNum=fcnNum+1;
%  void FliImageProcessing_setDragoMultiplicator_V2 ( FliContext context , ProcessingId id , uint8_t multiplicator ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32uint8Thunk';fcns.name{fcnNum}='FliImageProcessing_setDragoMultiplicator_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'uint8'};fcnNum=fcnNum+1;
%  void FliImageProcessing_setReinhardGamma_V2 ( FliContext context , ProcessingId id , float gamma ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32floatThunk';fcns.name{fcnNum}='FliImageProcessing_setReinhardGamma_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'single'};fcnNum=fcnNum+1;
%  void FliImageProcessing_setReinhardIntensity_V2 ( FliContext context , ProcessingId id , float intensity ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32floatThunk';fcns.name{fcnNum}='FliImageProcessing_setReinhardIntensity_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'single'};fcnNum=fcnNum+1;
%  void FliImageProcessing_setReinhardLightAdapt_V2 ( FliContext context , ProcessingId id , float light ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32floatThunk';fcns.name{fcnNum}='FliImageProcessing_setReinhardLightAdapt_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'single'};fcnNum=fcnNum+1;
%  void FliImageProcessing_setReinhardColorAdapt_V2 ( FliContext context , ProcessingId id , float color ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32floatThunk';fcns.name{fcnNum}='FliImageProcessing_setReinhardColorAdapt_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'single'};fcnNum=fcnNum+1;
%  void FliImageProcessing_setMantiukGamma_V2 ( FliContext context , ProcessingId id , float gamma ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32floatThunk';fcns.name{fcnNum}='FliImageProcessing_setMantiukGamma_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'single'};fcnNum=fcnNum+1;
%  void FliImageProcessing_setMantiukScale_V2 ( FliContext context , ProcessingId id , float scale ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32floatThunk';fcns.name{fcnNum}='FliImageProcessing_setMantiukScale_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'single'};fcnNum=fcnNum+1;
%  void FliImageProcessing_setMantiukSaturation_V2 ( FliContext context , ProcessingId id , float saturation ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32floatThunk';fcns.name{fcnNum}='FliImageProcessing_setMantiukSaturation_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'single'};fcnNum=fcnNum+1;
%  void FliImageProcessing_setMantiukMultiplicator_V2 ( FliContext context , ProcessingId id , uint8_t multiplicator ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32uint8Thunk';fcns.name{fcnNum}='FliImageProcessing_setMantiukMultiplicator_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'uint8'};fcnNum=fcnNum+1;
%  void FliImageProcessing_setBadPixelsCarto_V2 ( FliContext context , ProcessingId id , const _Bool * carto , size_t size ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32voidPtruint64Thunk';fcns.name{fcnNum}='FliImageProcessing_setBadPixelsCarto_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'boolPtr', 'uint64'};fcnNum=fcnNum+1;
%  void FliImageProcessing_enableBadPixelsCarto_V2 ( FliContext context , ProcessingId id , _Bool enable ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32_BoolThunk';fcns.name{fcnNum}='FliImageProcessing_enableBadPixelsCarto_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliImageProcessing_badPixelsCartoLoaded_V2 ( FliContext context , ProcessingId id ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrint32Thunk';fcns.name{fcnNum}='FliImageProcessing_badPixelsCartoLoaded_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'int32'};fcnNum=fcnNum+1;
%  uint8_t * FliImageProcessing_getColorMapImage_V2 ( FliContext context , ProcessingId id , uint16_t width , uint16_t height ); 
fcns.thunkname{fcnNum}='voidPtrvoidPtrint32uint16uint16Thunk';fcns.name{fcnNum}='FliImageProcessing_getColorMapImage_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='uint8Ptr'; fcns.RHS{fcnNum}={'voidPtr', 'int32', 'uint16', 'uint16'};fcnNum=fcnNum+1;
%  FliContext FliSdk_init_V2 (); 
fcns.thunkname{fcnNum}='voidPtrThunk';fcns.name{fcnNum}='FliSdk_init_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='voidPtr'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
%  void FliSdk_exit_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='voidvoidPtrThunk';fcns.name{fcnNum}='FliSdk_exit_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  void FliSdk_detectGrabbers_V2 ( FliContext context , char * listOfGrabbers , size_t size ); 
fcns.thunkname{fcnNum}='voidvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSdk_detectGrabbers_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  void FliSdk_getDetectedGrabbers_V2 ( FliContext context , char * listOfGrabbers , size_t size ); 
fcns.thunkname{fcnNum}='voidvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSdk_getDetectedGrabbers_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  void FliSdk_detectCameras_V2 ( FliContext context , char * listOfCameras , size_t size ); 
fcns.thunkname{fcnNum}='voidvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSdk_detectCameras_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  void FliSdk_getDetectedCameras_V2 ( FliContext context , char * listOfCameras , size_t size ); 
fcns.thunkname{fcnNum}='voidvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSdk_getDetectedCameras_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSdk_setGrabber_V2 ( FliContext context , const char * grabberName ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliSdk_setGrabber_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliSdk_setCamera_V2 ( FliContext context , const char * cameraName ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringThunk';fcns.name{fcnNum}='FliSdk_setCamera_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  _Bool FliSdk_getCurrentCameraName_V2 ( FliContext context , char * cameraName , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSdk_getCurrentCameraName_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  void FliSdk_setMode_V2 ( FliContext context , Mode mode ); 
fcns.thunkname{fcnNum}='voidvoidPtrModeThunk';fcns.name{fcnNum}='FliSdk_setMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'Mode'};fcnNum=fcnNum+1;
%  void FliSdk_setImageDimension_V2 ( FliContext context , uint16_t width , uint16_t height ); 
fcns.thunkname{fcnNum}='voidvoidPtruint16uint16Thunk';fcns.name{fcnNum}='FliSdk_setImageDimension_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'uint16', 'uint16'};fcnNum=fcnNum+1;
%  _Bool FliSdk_update_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSdk_update_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliSdk_start_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSdk_start_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliSdk_stop_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSdk_stop_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliSdk_isStarted_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSdk_isStarted_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  CameraModel_C FliSdk_getCurrentCameraModel_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='CameraModel_CvoidPtrThunk';fcns.name{fcnNum}='FliSdk_getCurrentCameraModel_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='CameraModel_C'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  void FliSdk_getCameraModelAsString_V2 ( FliContext context , char * model , size_t size ); 
fcns.thunkname{fcnNum}='voidvoidPtrcstringuint64Thunk';fcns.name{fcnNum}='FliSdk_getCameraModelAsString_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  _Bool FliSdk_enableGrabN_V2 ( FliContext context , uint32_t nbFrames ); 
fcns.thunkname{fcnNum}='_BoolvoidPtruint32Thunk';fcns.name{fcnNum}='FliSdk_enableGrabN_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'uint32'};fcnNum=fcnNum+1;
%  _Bool FliSdk_disableGrabN_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSdk_disableGrabN_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliSdk_isGrabNEnabled_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSdk_isGrabNEnabled_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliSdk_isGrabNFinished_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSdk_isGrabNFinished_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  const unsigned char * FliSdk_getRawImage_V2 ( FliContext context , int64_t index ); 
fcns.thunkname{fcnNum}='voidPtrvoidPtrint64Thunk';fcns.name{fcnNum}='FliSdk_getRawImage_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='uint8Ptr'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  void FliSdk_display8bImage_V2 ( FliContext context , uint8_t * image , const char * windowName ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrcstringThunk';fcns.name{fcnNum}='FliSdk_display8bImage_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'uint8Ptr', 'cstring'};fcnNum=fcnNum+1;
%  void FliSdk_display16bImage_V2 ( FliContext context , uint8_t * image , const char * windowName , _Bool unsignedPixels ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrcstring_BoolThunk';fcns.name{fcnNum}='FliSdk_display16bImage_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'uint8Ptr', 'cstring', 'bool'};fcnNum=fcnNum+1;
%  void FliSdk_initLog_V2 ( FliContext context , const char * appName ); 
fcns.thunkname{fcnNum}='voidvoidPtrcstringThunk';fcns.name{fcnNum}='FliSdk_initLog_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'cstring'};fcnNum=fcnNum+1;
%  uint32_t FliSdk_getFps_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='uint32voidPtrThunk';fcns.name{fcnNum}='FliSdk_getFps_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='uint32'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  uint32_t FliSdk_getBufferFilling_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='uint32voidPtrThunk';fcns.name{fcnNum}='FliSdk_getBufferFilling_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='uint32'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  void FliSdk_setBufferSizeInImages_V2 ( FliContext context , uint64_t nbImages ); 
fcns.thunkname{fcnNum}='voidvoidPtruint64Thunk';fcns.name{fcnNum}='FliSdk_setBufferSizeInImages_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'uint64'};fcnNum=fcnNum+1;
%  void FliSdk_setBufferSize_V2 ( FliContext context , uint16_t sizeMo ); 
fcns.thunkname{fcnNum}='voidvoidPtruint16Thunk';fcns.name{fcnNum}='FliSdk_setBufferSize_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'uint16'};fcnNum=fcnNum+1;
%  uint16_t FliSdk_getBufferSize_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='uint16voidPtrThunk';fcns.name{fcnNum}='FliSdk_getBufferSize_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='uint16'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliSdk_loadBufferFromFile_V2 ( FliContext context , const char * path , CroppingData_C * bufferCrop ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringvoidPtrThunk';fcns.name{fcnNum}='FliSdk_loadBufferFromFile_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'CroppingData_CPtr'};fcnNum=fcnNum+1;
%  _Bool FliSdk_loadBufferRaw_V2 ( FliContext context , const uint8_t * buffer , uint32_t nbImages ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtruint32Thunk';fcns.name{fcnNum}='FliSdk_loadBufferRaw_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'uint8Ptr', 'uint32'};fcnNum=fcnNum+1;
%  _Bool FliSdk_getBufferWithInfo_V2 ( FliContext context , const char * path , LoadBufferInfo_C * info ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringvoidPtrThunk';fcns.name{fcnNum}='FliSdk_getBufferWithInfo_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'LoadBufferInfo_CPtr'};fcnNum=fcnNum+1;
%  void FliSdk_resetBuffer_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='voidvoidPtrThunk';fcns.name{fcnNum}='FliSdk_resetBuffer_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliSdk_saveBuffer_V2 ( FliContext context , const char * path , uint32_t startIndex , uint32_t endIndex ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint32uint32Thunk';fcns.name{fcnNum}='FliSdk_saveBuffer_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint32', 'uint32'};fcnNum=fcnNum+1;
%  _Bool FliSdk_saveBufferWithOptions_V2 ( FliContext context , const char * path , uint32_t startIndex , uint32_t endIndex , saveBufferProgressionCallback func , _Bool withMetadata , uint16_t offset , _Bool forceUnsigned , uint16_t decimation ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringuint32uint32voidPtr_Booluint16_Booluint16Thunk';fcns.name{fcnNum}='FliSdk_saveBufferWithOptions_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint32', 'uint32', 'FcnPtr', 'bool', 'uint16', 'bool', 'uint16'};fcnNum=fcnNum+1;
%  uint32_t FliSdk_getImagesCapacity_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='uint32voidPtrThunk';fcns.name{fcnNum}='FliSdk_getImagesCapacity_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='uint32'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  uint8_t * FliSdk_getProcessedImage_V2 ( FliContext context , int64_t index ); 
fcns.thunkname{fcnNum}='voidPtrvoidPtrint64Thunk';fcns.name{fcnNum}='FliSdk_getProcessedImage_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='uint8Ptr'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  uint8_t * FliSdk_getProcessedImage16b_V2 ( FliContext context , int64_t index ); 
fcns.thunkname{fcnNum}='voidPtrvoidPtrint64Thunk';fcns.name{fcnNum}='FliSdk_getProcessedImage16b_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='uint8Ptr'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  _Bool FliSdk_isCroppingDataValid_V2 ( FliContext context , CroppingData_C croppingData ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrCroppingData_CThunk';fcns.name{fcnNum}='FliSdk_isCroppingDataValid_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'CroppingData_C'};fcnNum=fcnNum+1;
%  _Bool FliSdk_getCroppingState_V2 ( FliContext context , _Bool * isEnabled , CroppingData_C * croppingData ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSdk_getCroppingState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'boolPtr', 'CroppingData_CPtr'};fcnNum=fcnNum+1;
%  _Bool FliSdk_setCroppingState_V2 ( FliContext context , _Bool enable , CroppingData_C croppingData ); 
fcns.thunkname{fcnNum}='_BoolvoidPtr_BoolCroppingData_CThunk';fcns.name{fcnNum}='FliSdk_setCroppingState_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'bool', 'CroppingData_C'};fcnNum=fcnNum+1;
%  void FliSdk_getCurrentImageDimension_V2 ( FliContext context , uint16_t * width , uint16_t * height ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSdk_getCurrentImageDimension_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'uint16Ptr', 'uint16Ptr'};fcnNum=fcnNum+1;
%  callbackHandler FliSdk_addCallbackNewImage_V2 ( FliContext context , newImageAvailableCallBack func , uint16_t fpsTrigger , _Bool beforeCopy , void * ctx ); 
fcns.thunkname{fcnNum}='voidPtrvoidPtrvoidPtruint16_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSdk_addCallbackNewImage_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='voidPtr'; fcns.RHS{fcnNum}={'voidPtr', 'FcnPtr', 'uint16', 'bool', 'voidPtr'};fcnNum=fcnNum+1;
%  void FliSdk_removeCallbackNewImage_V2 ( FliContext context , callbackHandler ctx ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtrThunk';fcns.name{fcnNum}='FliSdk_removeCallbackNewImage_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'voidPtr'};fcnNum=fcnNum+1;
%  void FliSdk_setFpsTrigger_V2 ( FliContext context , callbackHandler ctx , uint16_t fps ); 
fcns.thunkname{fcnNum}='voidvoidPtrvoidPtruint16Thunk';fcns.name{fcnNum}='FliSdk_setFpsTrigger_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'voidPtr', 'uint16'};fcnNum=fcnNum+1;
%  _Bool FliSdk_isCredOne_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSdk_isCredOne_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliSdk_isCredTwo_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSdk_isCredTwo_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliSdk_isCredTwoLite_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSdk_isCredTwoLite_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliSdk_isCredThree_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSdk_isCredThree_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliSdk_isCblueOne_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSdk_isCblueOne_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliSdk_isCblueTwo_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSdk_isCblueTwo_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliSdk_isCred_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSdk_isCred_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliSdk_isCblueSfnc_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSdk_isCblueSfnc_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliSdk_isOcam2k_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSdk_isOcam2k_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliSdk_isOcam2s_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSdk_isOcam2s_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliSdk_isSerialCamera_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSdk_isSerialCamera_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  void FliSdk_forceCurrentCameraModel_V2 ( FliContext context , CameraModel_C model ); 
fcns.thunkname{fcnNum}='voidvoidPtrCameraModel_CThunk';fcns.name{fcnNum}='FliSdk_forceCurrentCameraModel_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'CameraModel_C'};fcnNum=fcnNum+1;
%  void FliSdk_setNbImagesPerBuffer_V2 ( FliContext context , uint8_t nbImages ); 
fcns.thunkname{fcnNum}='voidvoidPtruint8Thunk';fcns.name{fcnNum}='FliSdk_setNbImagesPerBuffer_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'uint8'};fcnNum=fcnNum+1;
%  _Bool FliSdk_isUnsignedPixel_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSdk_isUnsignedPixel_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  _Bool FliSdk_isMono8Pixel_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrThunk';fcns.name{fcnNum}='FliSdk_isMono8Pixel_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  void FliSdk_enableUnsignedPixel_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='voidvoidPtr_BoolThunk';fcns.name{fcnNum}='FliSdk_enableUnsignedPixel_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  void FliSdk_enableRingBuffer_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='voidvoidPtr_BoolThunk';fcns.name{fcnNum}='FliSdk_enableRingBuffer_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  void FliSdk_getAvailableSaveFormats_V2 ( FliContext context , char * fullName , size_t fullNameSize , char * extension , size_t extensionSize ); 
fcns.thunkname{fcnNum}='voidvoidPtrcstringuint64cstringuint64Thunk';fcns.name{fcnNum}='FliSdk_getAvailableSaveFormats_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'uint64', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  uint64_t FliSdk_getNbCountError_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='uint64voidPtrThunk';fcns.name{fcnNum}='FliSdk_getNbCountError_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='uint64'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  unsigned int FliSdk_getOcamFrameNumber_V2 ( FliContext context , int64_t index ); 
fcns.thunkname{fcnNum}='uint32voidPtrint64Thunk';fcns.name{fcnNum}='FliSdk_getOcamFrameNumber_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='uint32'; fcns.RHS{fcnNum}={'voidPtr', 'int64'};fcnNum=fcnNum+1;
%  void FliSdk_setOcamFrameNumberOffset_V2 ( FliContext context , uint8_t offset ); 
fcns.thunkname{fcnNum}='voidvoidPtruint8Thunk';fcns.name{fcnNum}='FliSdk_setOcamFrameNumberOffset_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'uint8'};fcnNum=fcnNum+1;
%  void FliSdk_setBurstFilter_V2 ( FliContext context , int16_t id ); 
fcns.thunkname{fcnNum}='voidvoidPtrint16Thunk';fcns.name{fcnNum}='FliSdk_setBurstFilter_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int16'};fcnNum=fcnNum+1;
%  int16_t FliSdk_getBurstFilter_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='int16voidPtrThunk';fcns.name{fcnNum}='FliSdk_getBurstFilter_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='int16'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  void FliSdk_enableSubstractMode_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='voidvoidPtr_BoolThunk';fcns.name{fcnNum}='FliSdk_enableSubstractMode_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  void FliSdk_enableFowlerProcessing_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='voidvoidPtr_BoolThunk';fcns.name{fcnNum}='FliSdk_enableFowlerProcessing_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  void FliSdk_setFowlerOffset_V2 ( FliContext context , int16_t offset ); 
fcns.thunkname{fcnNum}='voidvoidPtrint16Thunk';fcns.name{fcnNum}='FliSdk_setFowlerOffset_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int16'};fcnNum=fcnNum+1;
%  void FliSdk_enableFollowUpTheRamp_V2 ( FliContext context , _Bool enable ); 
fcns.thunkname{fcnNum}='voidvoidPtr_BoolThunk';fcns.name{fcnNum}='FliSdk_enableFollowUpTheRamp_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'bool'};fcnNum=fcnNum+1;
%  _Bool FliSdk_addEthernetCamera_V2 ( FliContext context , const char * ip , const char * userName , const char * sshPassword , char * cameraName , size_t size ); 
fcns.thunkname{fcnNum}='_BoolvoidPtrcstringcstringcstringcstringuint64Thunk';fcns.name{fcnNum}='FliSdk_addEthernetCamera_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='bool'; fcns.RHS{fcnNum}={'voidPtr', 'cstring', 'cstring', 'cstring', 'cstring', 'uint64'};fcnNum=fcnNum+1;
%  ProcessingId FliSdk_addImageProcessing_V2 ( FliContext context ); 
fcns.thunkname{fcnNum}='int32voidPtrThunk';fcns.name{fcnNum}='FliSdk_addImageProcessing_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  void FliSdk_removeImageProcessing_V2 ( FliContext context , ProcessingId id ); 
fcns.thunkname{fcnNum}='voidvoidPtrint32Thunk';fcns.name{fcnNum}='FliSdk_removeImageProcessing_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int32'};fcnNum=fcnNum+1;
%  void FliSdk_getProcessedImage_lv_V2 ( FliContext context , int64_t index , uint32_t * image ); 
fcns.thunkname{fcnNum}='voidvoidPtrint64voidPtrThunk';fcns.name{fcnNum}='FliSdk_getProcessedImage_lv_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int64', 'uint32Ptr'};fcnNum=fcnNum+1;
%  void FliSdk_getProcessedImage16b_lv_V2 ( FliContext context , int64_t index , uint16_t * image ); 
fcns.thunkname{fcnNum}='voidvoidPtrint64voidPtrThunk';fcns.name{fcnNum}='FliSdk_getProcessedImage16b_lv_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int64', 'uint16Ptr'};fcnNum=fcnNum+1;
%  void FliSdk_getRawImage_lv_V2 ( FliContext context , int64_t index , uint16_t * image ); 
fcns.thunkname{fcnNum}='voidvoidPtrint64voidPtrThunk';fcns.name{fcnNum}='FliSdk_getRawImage_lv_V2'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'voidPtr', 'int64', 'uint16Ptr'};fcnNum=fcnNum+1;
structs.CroppingData_C.members=struct('col1', 'uint16', 'col2', 'uint16', 'row1', 'uint16', 'row2', 'uint16', 'cred1Cols', 'bool#10', 'cred1Rows', 'bool#256');
structs.LoadBufferInfo_C.members=struct('width', 'uint16', 'height', 'uint16', 'mono8', 'bool', 'unsignedPixel', 'bool', 'meta', 'int8#2048', 'buffer', 'uint8PtrPtr');
structs.Ocam2Conf_C.members=struct('wmode', 'Ocam2Mode_C', 'width', 'uint16', 'height', 'uint16', 'nbPixels', 'uint16', 'rawWidth', 'uint16', 'rawHeight', 'uint16', 'rawNbPixels', 'uint16', 'binningOffset', 'uint16', 'nbIdenticPixels', 'uint16', 'fpsMax', 'uint16');
structs.CCD219AmpBias_C.members=struct('opening', 'int32#31', 'intervalOpen', 'int32', 'closing', 'int32#31', 'intervalClosed', 'int32', 'biasO1', 'int32#31', 'biasO2', 'int32#31', 'biasIO1', 'int32#31', 'biasIO2', 'int32#31', 'biasC1', 'int32#31', 'biasC2', 'int32#31', 'biasIC1', 'int32#31', 'biasIC2', 'int32#31', 'openingPixel_X', 'int32', 'openingPixel_Y', 'int32', 'closingPixel_X', 'int32', 'closingPixel_Y', 'int32');
structs.Shutter_C.members=struct('enabled', 'bool', 'isInternal', 'bool', 'isBurst', 'bool', 'sweep', 'uint32', 'pulseWidth', 'uint32', 'blanking', 'uint32', 'position', 'uint32', 'step', 'uint32', 'end', 'uint32', 'count', 'uint32', 'ticks', 'double', 'inhibitWhileRead', 'bool', 'correctGlitch', 'bool', 'openPhase', 'uint8', 'closePhase', 'uint8', 'amps', 'CCD219AmpBias_C#8');
enuminfo.LineSelectorEnum=struct('LineSelector_Line0',0,'LineSelector_Line1',1,'LineSelector_Line2',2,'LineSelector_LinkTrigger0',4,'LineSelector_LinkTrigger1',5,'LineSelector_LinkTrigger2',6,'LineSelector_CC1',8,'LineSelector_CC2',9,'LineSelector_CC3',10,'LineSelector_CC4',11);
enuminfo.GainAutoBalanceEnum=struct('GainAutoBalance_Off',0,'GainAutoBalance_Once',1,'GainAutoBalance_Continuous',2);
enuminfo.GevCCPEnum=struct('GevCCP_OpenAccess',0,'GevCCP_ExclusiveAccess',1,'GevCCP_ControlAccess',2,'GevCCP_ControlAccessSwitchoverActive',3);
enuminfo.ImageCompressionModeEnum=struct('ImageCompressionMode_Off',0,'ImageCompressionMode_JPEG',1,'ImageCompressionMode_JPEG2000',2,'ImageCompressionMode_H264',3);
enuminfo.ChunkScan3dDistanceUnitEnum=struct('ChunkScan3dDistanceUnit_Millimeter',0,'ChunkScan3dDistanceUnit_Inch',1,'ChunkScan3dDistanceUnit_Pixel',2);
enuminfo.DeviceStreamChannelTypeEnum=struct('DeviceStreamChannelType_Transmitter',0,'DeviceStreamChannelType_Receiver',1);
enuminfo.TimerStatusEnum=struct('TimerStatus_TimerIdle',0,'TimerStatus_TimerTriggerWait',1,'TimerStatus_TimerActive',2,'TimerStatus_TimerCompleted',3);
enuminfo.SequencerConfigurationModeEnum=struct('SequencerConfigurationMode_On',0,'SequencerConfigurationMode_Off',1);
enuminfo.MultiSlopeModeEnum=struct('MultiSlopeMode_Off',0,'MultiSlopeMode_Manual',1,'MultiSlopeMode_PresetSoft',2,'MultiSlopeMode_PresetMedium',3,'MultiSlopeMode_PresetAggressive',4);
enuminfo.TriggerSelectorEnum=struct('TriggerSelector_AcquisitionStart',0,'TriggerSelector_AcquisitionEnd',1,'TriggerSelector_AcquisitionActive',2,'TriggerSelector_FrameStart',3,'TriggerSelector_FrameEnd',4,'TriggerSelector_FrameActive',5,'TriggerSelector_FrameBurstStart',6,'TriggerSelector_FrameBurstEnd',7,'TriggerSelector_FrameBurstActive',8,'TriggerSelector_LineStart',9,'TriggerSelector_ExposureStart',10,'TriggerSelector_ExposureEnd',11,'TriggerSelector_ExposureActive',12,'TriggerSelector_MultiSlopeExposureLimit1',13);
enuminfo.Ocam2CoolingState_C=struct('on',0,'off',1,'mode_alarm',2);
enuminfo.ChunkGroupIDEnum=struct('ChunkGroupID_Group0',0,'ChunkGroupID_Group1',1,'ChunkGroupID_Group2',2);
enuminfo.LineSourceEnum=struct('LineSource_Off',0,'LineSource_UserOutput0',1,'LineSource_UserOutput1',2,'LineSource_UserOutput2',3,'LineSource_AcquisitionTriggerWait',5,'LineSource_AcquisitionTrigger',6,'LineSource_AcquisitionTriggerMissed',7,'LineSource_AcquisitionActive',8,'LineSource_FrameTriggerWait',9,'LineSource_FrameTrigger',10,'LineSource_FrameTriggerMissed',11,'LineSource_FrameActive',12,'LineSource_ExposureActive',13,'LineSource_LineTriggerWait',14,'LineSource_LineTrigger',15,'LineSource_LineTriggerMissed',16,'LineSource_LineActive',17,'LineSource_Counter0Active',18,'LineSource_Counter1Active',19,'LineSource_Counter2Active',20,'LineSource_Timer0Active',22,'LineSource_Timer1Active',23,'LineSource_Timer2Active',24,'LineSource_Encoder0',26,'LineSource_Encoder1',27,'LineSource_Encoder2',28,'LineSource_LogicBlock0',30,'LineSource_LogicBlock1',31,'LineSource_LogicBlock2',32,'LineSource_SoftwareSignal0',34,'LineSource_SoftwareSignal1',35,'LineSource_SoftwareSignal2',36,'LineSource_Stream0TransferActive',38,'LineSource_Stream1TransferActive',39,'LineSource_Stream0TransferPaused',41,'LineSource_Stream1TransferPaused',42,'LineSource_Stream0TransferStopping',44,'LineSource_Stream1TransferStopping',45,'LineSource_Stream0TransferStopped',47,'LineSource_Stream1TransferStopped',48,'LineSource_Stream0TransferOverflow',50,'LineSource_Stream1TransferOverflow',51);
enuminfo.TimerTriggerActivationEnum=struct('TimerTriggerActivation_RisingEdge',0,'TimerTriggerActivation_FallingEdge',1,'TimerTriggerActivation_AnyEdge',2,'TimerTriggerActivation_LevelHigh',3,'TimerTriggerActivation_LevelLow',4);
enuminfo.GevCurrentPhysicalLinkConfigurationEnum=struct('GevCurrentPhysicalLinkConfiguration_SingleLink',0,'GevCurrentPhysicalLinkConfiguration_MultiLink',1,'GevCurrentPhysicalLinkConfiguration_StaticLAG',2,'GevCurrentPhysicalLinkConfiguration_DynamicLAG',3);
enuminfo.BlackLevelSelectorEnum=struct('BlackLevelSelector_All',0,'BlackLevelSelector_Red',1,'BlackLevelSelector_Green',2,'BlackLevelSelector_Blue',3,'BlackLevelSelector_Y',4,'BlackLevelSelector_U',5,'BlackLevelSelector_V',6,'BlackLevelSelector_Tap1',7,'BlackLevelSelector_Tap2',8);
enuminfo.AgcParam=struct('level_pix_high_hg',0,'level_pix_high_mg',1,'level_pix_low_lg',2,'level_pix_low_mg',3,'trigger_nb_frames_hg_to_mg',4,'trigger_nb_frames_lg_to_mg',5,'trigger_nb_frames_mg_to_hg',6,'trigger_nb_frames_mg_to_lg',7,'trigger_ratio_pixels_hg_to_mg',8,'trigger_ratio_pixels_lg_to_mg',9,'trigger_ratio_pixels_mg_to_hg',10,'trigger_ratio_pixels_mg_to_lg',11);
enuminfo.TriggerModeEnum=struct('TriggerMode_Off',0,'TriggerMode_On',1);
enuminfo.SequencerTriggerActivationEnum=struct('SequencerTriggerActivation_RisingEdge',0,'SequencerTriggerActivation_FallingEdge',1,'SequencerTriggerActivation_AnyEdge',2,'SequencerTriggerActivation_LevelHigh',3,'SequencerTriggerActivation_LevelLow',4);
enuminfo.CxpPoCxpStatusEnum=struct('CxpPoCxpStatus_Auto',0,'CxpPoCxpStatus_Off',1,'CxpPoCxpStatus_Tripped',2);
enuminfo.ChunkPixelFormatEnum=struct('ChunkPixelFormat_Mono1p',16842807,'ChunkPixelFormat_Mono2p',16908344,'ChunkPixelFormat_Mono4p',17039417,'ChunkPixelFormat_Mono8',17301505,'ChunkPixelFormat_Mono8s',17301506,'ChunkPixelFormat_Mono10',17825795,'ChunkPixelFormat_Mono10p',17432646,'ChunkPixelFormat_Mono12',17825797,'ChunkPixelFormat_Mono12p',17563719,'ChunkPixelFormat_Mono14',17825829,'ChunkPixelFormat_Mono14p',17694980,'ChunkPixelFormat_Mono16',17825799,'ChunkPixelFormat_Mono32',18874641,'ChunkPixelFormat_BayerBG4p',17039632,'ChunkPixelFormat_BayerBG8',17301515,'ChunkPixelFormat_BayerBG10',17825807,'ChunkPixelFormat_BayerBG10p',17432658,'ChunkPixelFormat_BayerBG12',17825811,'ChunkPixelFormat_BayerBG12p',17563731,'ChunkPixelFormat_BayerBG14',17826060,'ChunkPixelFormat_BayerBG14p',17694984,'ChunkPixelFormat_BayerBG16',17825841,'ChunkPixelFormat_BayerGB4p',17039631,'ChunkPixelFormat_BayerGB8',17301514,'ChunkPixelFormat_BayerGB10',17825806,'ChunkPixelFormat_BayerGB10p',17432660,'ChunkPixelFormat_BayerGB12',17825810,'ChunkPixelFormat_BayerGB12p',17563733,'ChunkPixelFormat_BayerGB14',17826059,'ChunkPixelFormat_BayerGB14p',17694983,'ChunkPixelFormat_BayerGB16',17825840,'ChunkPixelFormat_BayerGR4p',17039629,'ChunkPixelFormat_BayerGR8',17301512,'ChunkPixelFormat_BayerGR10',17825804,'ChunkPixelFormat_BayerGR10p',17432662,'ChunkPixelFormat_BayerGR12',17825808,'ChunkPixelFormat_BayerGR12p',17563735,'ChunkPixelFormat_BayerGR14',17826057,'ChunkPixelFormat_BayerGR14p',17694981,'ChunkPixelFormat_BayerGR16',17825838,'ChunkPixelFormat_BayerRG4p',17039630,'ChunkPixelFormat_BayerRG8',17301513,'ChunkPixelFormat_BayerRG10',17825805,'ChunkPixelFormat_BayerRG10p',17432664,'ChunkPixelFormat_BayerRG12',17825809,'ChunkPixelFormat_BayerRG12p',17563737,'ChunkPixelFormat_BayerRG14',17826058,'ChunkPixelFormat_BayerRG14p',17694982,'ChunkPixelFormat_BayerRG16',17825839,'ChunkPixelFormat_RGBa8',35651606,'ChunkPixelFormat_RGBa10',37748831,'ChunkPixelFormat_RGBa10p',36175968,'ChunkPixelFormat_RGBa12',37748833,'ChunkPixelFormat_RGBa12p',36700258,'ChunkPixelFormat_RGBa14',37748835,'ChunkPixelFormat_RGBa16',37748836,'ChunkPixelFormat_RGB8',35127316,'ChunkPixelFormat_RGB8_Planar',35127329,'ChunkPixelFormat_RGB10',36700184,'ChunkPixelFormat_RGB10_Planar',36700194,'ChunkPixelFormat_RGB10p',35520604,'ChunkPixelFormat_RGB10p32',35651613,'ChunkPixelFormat_RGB12',36700186,'ChunkPixelFormat_RGB12_Planar',36700195,'ChunkPixelFormat_RGB12p',35913821,'ChunkPixelFormat_RGB14',36700254,'ChunkPixelFormat_RGB16',36700211,'ChunkPixelFormat_RGB16_Planar',36700196,'ChunkPixelFormat_RGB565p',34603061,'ChunkPixelFormat_BGRa8',35651607,'ChunkPixelFormat_BGRa10',37748812,'ChunkPixelFormat_BGRa10p',36175949,'ChunkPixelFormat_BGRa12',37748814,'ChunkPixelFormat_BGRa12p',36700239,'ChunkPixelFormat_BGRa14',37748816,'ChunkPixelFormat_BGRa16',37748817,'ChunkPixelFormat_BGR8',35127317,'ChunkPixelFormat_BGR10',36700185,'ChunkPixelFormat_BGR10p',35520584,'ChunkPixelFormat_BGR12',36700187,'ChunkPixelFormat_BGR12p',35913801,'ChunkPixelFormat_BGR14',36700234,'ChunkPixelFormat_BGR16',36700235,'ChunkPixelFormat_BGR565p',34603062,'ChunkPixelFormat_R8',17301705,'ChunkPixelFormat_R10',17432778,'ChunkPixelFormat_R12',17563851,'ChunkPixelFormat_R16',17825996,'ChunkPixelFormat_G8',17301709,'ChunkPixelFormat_G10',17432782,'ChunkPixelFormat_G12',17563855,'ChunkPixelFormat_G16',17826000,'ChunkPixelFormat_B8',17301713,'ChunkPixelFormat_B10',17432786,'ChunkPixelFormat_B12',17563859,'ChunkPixelFormat_B16',17826004,'ChunkPixelFormat_Coord3D_ABC8',35127474,'ChunkPixelFormat_Coord3D_ABC8_Planar',35127475,'ChunkPixelFormat_Coord3D_ABC10p',35520731,'ChunkPixelFormat_Coord3D_ABC10p_Planar',35520732,'ChunkPixelFormat_Coord3D_ABC12p',35913950,'ChunkPixelFormat_Coord3D_ABC12p_Planar',35913951,'ChunkPixelFormat_Coord3D_ABC16',36700345,'ChunkPixelFormat_Coord3D_ABC16_Planar',36700346,'ChunkPixelFormat_Coord3D_ABC32f',39846080,'ChunkPixelFormat_Coord3D_ABC32f_Planar',39846081,'ChunkPixelFormat_Coord3D_AC8',34603188,'ChunkPixelFormat_Coord3D_AC8_Planar',34603189,'ChunkPixelFormat_Coord3D_AC10p',34865392,'ChunkPixelFormat_Coord3D_AC10p_Planar',34865393,'ChunkPixelFormat_Coord3D_AC12p',35127538,'ChunkPixelFormat_Coord3D_AC12p_Planar',35127539,'ChunkPixelFormat_Coord3D_AC16',35651771,'ChunkPixelFormat_Coord3D_AC16_Planar',35651772,'ChunkPixelFormat_Coord3D_AC32f',37748930,'ChunkPixelFormat_Coord3D_AC32f_Planar',37748931,'ChunkPixelFormat_Coord3D_A8',17301679,'ChunkPixelFormat_Coord3D_A10p',17432789,'ChunkPixelFormat_Coord3D_A12p',17563864,'ChunkPixelFormat_Coord3D_A16',17825974,'ChunkPixelFormat_Coord3D_A32f',18874557,'ChunkPixelFormat_Coord3D_B8',17301680,'ChunkPixelFormat_Coord3D_B10p',17432790,'ChunkPixelFormat_Coord3D_B12p',17563865,'ChunkPixelFormat_Coord3D_B16',17825975,'ChunkPixelFormat_Coord3D_B32f',18874558,'ChunkPixelFormat_Coord3D_C8',17301681,'ChunkPixelFormat_Coord3D_C10p',17432791,'ChunkPixelFormat_Coord3D_C12p',17563866,'ChunkPixelFormat_Coord3D_C16',17825976,'ChunkPixelFormat_Coord3D_C32f',18874559,'ChunkPixelFormat_Confidence1',17301700,'ChunkPixelFormat_Confidence1p',16842949,'ChunkPixelFormat_Confidence8',17301702,'ChunkPixelFormat_Confidence16',17825991,'ChunkPixelFormat_Confidence32f',18874568,'ChunkPixelFormat_BiColorBGRG8',34603174,'ChunkPixelFormat_BiColorBGRG10',35651753,'ChunkPixelFormat_BiColorBGRG10p',34865322,'ChunkPixelFormat_BiColorBGRG12',35651757,'ChunkPixelFormat_BiColorBGRG12p',35127470,'ChunkPixelFormat_BiColorRGBG8',34603173,'ChunkPixelFormat_BiColorRGBG10',35651751,'ChunkPixelFormat_BiColorRGBG10p',34865320,'ChunkPixelFormat_BiColorRGBG12',35651755,'ChunkPixelFormat_BiColorRGBG12p',35127468,'ChunkPixelFormat_Data8',17301782,'ChunkPixelFormat_Data8s',17301783,'ChunkPixelFormat_Data16',17826072,'ChunkPixelFormat_Data16s',17826073,'ChunkPixelFormat_Data32',18874650,'ChunkPixelFormat_Data32f',18874652,'ChunkPixelFormat_Data32s',18874651,'ChunkPixelFormat_Data64',20971805,'ChunkPixelFormat_Data64f',20971807,'ChunkPixelFormat_Data64s',20971806,'ChunkPixelFormat_SCF1WBWG8',17301607,'ChunkPixelFormat_SCF1WBWG10',17825896,'ChunkPixelFormat_SCF1WBWG10p',17432681,'ChunkPixelFormat_SCF1WBWG12',17825898,'ChunkPixelFormat_SCF1WBWG12p',17563755,'ChunkPixelFormat_SCF1WBWG14',17825900,'ChunkPixelFormat_SCF1WBWG16',17825901,'ChunkPixelFormat_SCF1WGWB8',17301614,'ChunkPixelFormat_SCF1WGWB10',17825903,'ChunkPixelFormat_SCF1WGWB10p',17432688,'ChunkPixelFormat_SCF1WGWB12',17825905,'ChunkPixelFormat_SCF1WGWB12p',17563762,'ChunkPixelFormat_SCF1WGWB14',17825907,'ChunkPixelFormat_SCF1WGWB16',17825908,'ChunkPixelFormat_SCF1WGWR8',17301621,'ChunkPixelFormat_SCF1WGWR10',17825910,'ChunkPixelFormat_SCF1WGWR10p',17432695,'ChunkPixelFormat_SCF1WGWR12',17825912,'ChunkPixelFormat_SCF1WGWR12p',17563769,'ChunkPixelFormat_SCF1WGWR14',17825914,'ChunkPixelFormat_SCF1WGWR16',17825915,'ChunkPixelFormat_SCF1WRWG8',17301628,'ChunkPixelFormat_SCF1WRWG10',17825917,'ChunkPixelFormat_SCF1WRWG10p',17432702,'ChunkPixelFormat_SCF1WRWG12',17825919,'ChunkPixelFormat_SCF1WRWG12p',17563776,'ChunkPixelFormat_SCF1WRWG14',17825921,'ChunkPixelFormat_SCF1WRWG16',17825922,'ChunkPixelFormat_YCbCr8',35127387,'ChunkPixelFormat_YCbCr8_CbYCr',35127354,'ChunkPixelFormat_YCbCr10_CbYCr',36700291,'ChunkPixelFormat_YCbCr10p_CbYCr',35520644,'ChunkPixelFormat_YCbCr12_CbYCr',36700293,'ChunkPixelFormat_YCbCr12p_CbYCr',35913862,'ChunkPixelFormat_YCbCr411_8',34340954,'ChunkPixelFormat_YCbCr411_8_CbYYCrYY',34340924,'ChunkPixelFormat_YCbCr420_8_YY_CbCr_Semiplanar',34341138,'ChunkPixelFormat_YCbCr420_8_YY_CrCb_Semiplanar',34341140,'ChunkPixelFormat_YCbCr422_8',34603067,'ChunkPixelFormat_YCbCr422_8_CbYCrY',34603075,'ChunkPixelFormat_YCbCr422_8_YY_CbCr_Semiplanar',34603283,'ChunkPixelFormat_YCbCr422_8_YY_CrCb_Semiplanar',34603285,'ChunkPixelFormat_YCbCr422_10',35651685,'ChunkPixelFormat_YCbCr422_10_CbYCrY',35651737,'ChunkPixelFormat_YCbCr422_10p',34865287,'ChunkPixelFormat_YCbCr422_10p_CbYCrY',34865306,'ChunkPixelFormat_YCbCr422_12',35651686,'ChunkPixelFormat_YCbCr422_12_CbYCrY',35651739,'ChunkPixelFormat_YCbCr422_12p',35127432,'ChunkPixelFormat_YCbCr422_12p_CbYCrY',35127452,'ChunkPixelFormat_YCbCr601_8_CbYCr',35127357,'ChunkPixelFormat_YCbCr601_10_CbYCr',36700297,'ChunkPixelFormat_YCbCr601_10p_CbYCr',35520650,'ChunkPixelFormat_YCbCr601_12_CbYCr',36700299,'ChunkPixelFormat_YCbCr601_12p_CbYCr',35913868,'ChunkPixelFormat_YCbCr601_411_8_CbYYCrYY',34340927,'ChunkPixelFormat_YCbCr601_422_8',34603070,'ChunkPixelFormat_YCbCr601_422_8_CbYCrY',34603076,'ChunkPixelFormat_YCbCr601_422_10',35651725,'ChunkPixelFormat_YCbCr601_422_10_CbYCrY',35651741,'ChunkPixelFormat_YCbCr601_422_10p',34865294,'ChunkPixelFormat_YCbCr601_422_10p_CbYCrY',34865310,'ChunkPixelFormat_YCbCr601_422_12',35651727,'ChunkPixelFormat_YCbCr601_422_12_CbYCrY',35651743,'ChunkPixelFormat_YCbCr601_422_12p',35127440,'ChunkPixelFormat_YCbCr601_422_12p_CbYCrY',35127456,'ChunkPixelFormat_YCbCr709_8_CbYCr',35127360,'ChunkPixelFormat_YCbCr709_10_CbYCr',36700305,'ChunkPixelFormat_YCbCr709_10p_CbYCr',35520658,'ChunkPixelFormat_YCbCr709_12_CbYCr',36700307,'ChunkPixelFormat_YCbCr709_12p_CbYCr',35913876,'ChunkPixelFormat_YCbCr709_411_8_CbYYCrYY',34340930,'ChunkPixelFormat_YCbCr709_422_8',34603073,'ChunkPixelFormat_YCbCr709_422_8_CbYCrY',34603077,'ChunkPixelFormat_YCbCr709_422_10',35651733,'ChunkPixelFormat_YCbCr709_422_10_CbYCrY',35651745,'ChunkPixelFormat_YCbCr709_422_10p',34865302,'ChunkPixelFormat_YCbCr709_422_10p_CbYCrY',34865314,'ChunkPixelFormat_YCbCr709_422_12',35651735,'ChunkPixelFormat_YCbCr709_422_12_CbYCrY',35651747,'ChunkPixelFormat_YCbCr709_422_12p',35127448,'ChunkPixelFormat_YCbCr709_422_12p_CbYCrY',35127460,'ChunkPixelFormat_YCbCr2020_8_CbYCr',35127540,'ChunkPixelFormat_YCbCr2020_10_CbYCr',36700405,'ChunkPixelFormat_YCbCr2020_10p_CbYCr',35520758,'ChunkPixelFormat_YCbCr2020_12_CbYCr',36700407,'ChunkPixelFormat_YCbCr2020_12p_CbYCr',35913976,'ChunkPixelFormat_YCbCr2020_411_8_CbYYCrYY',34341113,'ChunkPixelFormat_YCbCr2020_422_8',34603258,'ChunkPixelFormat_YCbCr2020_422_8_CbYCrY',34603259,'ChunkPixelFormat_YCbCr2020_422_10',35651836,'ChunkPixelFormat_YCbCr2020_422_10_CbYCrY',35651837,'ChunkPixelFormat_YCbCr2020_422_10p',34865406,'ChunkPixelFormat_YCbCr2020_422_10p_CbYCrY',34865407,'ChunkPixelFormat_YCbCr2020_422_12',35651840,'ChunkPixelFormat_YCbCr2020_422_12_CbYCrY',35651841,'ChunkPixelFormat_YCbCr2020_422_12p',35127554,'ChunkPixelFormat_YCbCr2020_422_12p_CbYCrY',35127555,'ChunkPixelFormat_YUV8_UYV',35127328,'ChunkPixelFormat_YUV411_8_UYYVYY',34340894,'ChunkPixelFormat_YUV422_8',34603058,'ChunkPixelFormat_YUV422_8_UYVY',34603039);
enuminfo.ChunkScan3dCoordinateTransformSelectorEnum=struct('ChunkScan3dCoordinateTransformSelector_RotationX',0,'ChunkScan3dCoordinateTransformSelector_RotationY',1,'ChunkScan3dCoordinateTransformSelector_RotationZ',2,'ChunkScan3dCoordinateTransformSelector_TranslationX',3,'ChunkScan3dCoordinateTransformSelector_TranslationY',4,'ChunkScan3dCoordinateTransformSelector_TranslationZ',5);
enuminfo.DeviceTLTypeEnum=struct('DeviceTLType_GigEVision',0,'DeviceTLType_CameraLink',1,'DeviceTLType_CameraLinkHS',2,'DeviceTLType_CoaXPress',3,'DeviceTLType_USB3Vision',4,'DeviceTLType_Custom',5);
enuminfo.ChunkRegionIDEnum=struct('ChunkRegionID_Region0',0,'ChunkRegionID_Region1',1,'ChunkRegionID_Region2',2,'ChunkRegionID_Scan3dExtraction0',4,'ChunkRegionID_Scan3dExtraction1',5,'ChunkRegionID_Scan3dExtraction2',6);
enuminfo.ExposureModeEnum=struct('ExposureMode_Off',0,'ExposureMode_Timed',1,'ExposureMode_TriggerWidth',2,'ExposureMode_TriggerControlled',3);
enuminfo.CounterStatusEnum=struct('CounterStatus_CounterIdle',0,'CounterStatus_CounterTriggerWait',1,'CounterStatus_CounterActive',2,'CounterStatus_CounterCompleted',3,'CounterStatus_CounterOverflow',4);
enuminfo.EncoderStatusEnum=struct('EncoderStatus_EncoderUp',0,'EncoderStatus_EncoderDown',1,'EncoderStatus_EncoderIdle',2,'EncoderStatus_EncoderStatic',3);
enuminfo.ChunkEncoderSelectorEnum=struct('ChunkEncoderSelector_Encoder0',0,'ChunkEncoderSelector_Encoder1',1,'ChunkEncoderSelector_Encoder2',2);
enuminfo.LightConnectionStatusEnum=struct('LightConnectionStatus_Sensing',0,'LightConnectionStatus_Ready',1,'LightConnectionStatus_NoConnect',2,'LightConnectionStatus_Error',3);
enuminfo.DeviceConnectionStatusEnum=struct('DeviceConnectionStatus_Active',0,'DeviceConnectionStatus_Inactive',1);
enuminfo.DeviceIndicatorModeEnum=struct('DeviceIndicatorMode_Inactive',0,'DeviceIndicatorMode_Active',1,'DeviceIndicatorMode_ErrorStatus',2);
enuminfo.TransferOperationModeEnum=struct('TransferOperationMode_Continuous',0,'TransferOperationMode_MultiBlock',1);
enuminfo.ChunkExposureTimeSelectorEnum=struct('ChunkExposureTimeSelector_Common',0,'ChunkExposureTimeSelector_Red',1,'ChunkExposureTimeSelector_Green',2,'ChunkExposureTimeSelector_Blue',3,'ChunkExposureTimeSelector_Cyan',4,'ChunkExposureTimeSelector_Magenta',5,'ChunkExposureTimeSelector_Yellow',6,'ChunkExposureTimeSelector_Infrared',7,'ChunkExposureTimeSelector_Ultraviolet',8,'ChunkExposureTimeSelector_Stage1',9,'ChunkExposureTimeSelector_Stage2',10);
enuminfo.SourceSelectorEnum=struct('SourceSelector_Source0',0,'SourceSelector_Source1',1,'SourceSelector_Source2',2,'SourceSelector_All',4);
enuminfo.DecimationVerticalModeEnum=struct('DecimationVerticalMode_Discard',0,'DecimationVerticalMode_Average',1);
enuminfo.Cred1Mode=struct('none',0,'globalResetSingle',1,'globalResetBursts',2,'globalResetCds',3,'rollingResetIota',4,'rollingResetNro',5,'rollingResetSingle',6);
enuminfo.DeviceTemperatureSelectorEnum=struct('DeviceTemperatureSelector_Sensor',0,'DeviceTemperatureSelector_CPU',1,'DeviceTemperatureSelector_Power',2,'DeviceTemperatureSelector_Frontend',3,'DeviceTemperatureSelector_Heatsink',4,'DeviceTemperatureSelector_Case',5);
enuminfo.ColorTransformationSelectorEnum=struct('ColorTransformationSelector_RGBtoRGB',0,'ColorTransformationSelector_RGBtoYUV',1);
enuminfo.SoftwareSignalSelectorEnum=struct('SoftwareSignalSelector_SoftwareSignal0',0,'SoftwareSignalSelector_SoftwareSignal1',1,'SoftwareSignalSelector_SoftwareSignal2',2);
enuminfo.DeviceSerialPortSelectorEnum=struct('DeviceSerialPortSelector_CameraLink',0);
enuminfo.TransferTriggerSourceEnum=struct('TransferTriggerSource_Line0',0,'TransferTriggerSource_Line1',1,'TransferTriggerSource_Line2',2,'TransferTriggerSource_Counter0Start',4,'TransferTriggerSource_Counter1Start',5,'TransferTriggerSource_Counter2Start',6,'TransferTriggerSource_Counter0End',8,'TransferTriggerSource_Counter1End',9,'TransferTriggerSource_Counter2End',10,'TransferTriggerSource_Timer0Start',12,'TransferTriggerSource_Timer1Start',13,'TransferTriggerSource_Timer2Start',14,'TransferTriggerSource_Timer0End',16,'TransferTriggerSource_Timer1End',17,'TransferTriggerSource_Timer2End',18,'TransferTriggerSource_LogicBlock0',20,'TransferTriggerSource_LogicBlock1',21,'TransferTriggerSource_LogicBlock2',22,'TransferTriggerSource_SoftwareSignal0',24,'TransferTriggerSource_SoftwareSignal1',25,'TransferTriggerSource_SoftwareSignal2',26,'TransferTriggerSource_Action0',28,'TransferTriggerSource_Action1',29,'TransferTriggerSource_Action2',30);
enuminfo.LogicBlockFunctionEnum=struct('LogicBlockFunction_AND',0,'LogicBlockFunction_OR',1,'LogicBlockFunction_LUT',2,'LogicBlockFunction_LatchedLUT',3);
enuminfo.Scan3dCoordinateTransformSelectorEnum=struct('Scan3dCoordinateTransformSelector_RotationX',0,'Scan3dCoordinateTransformSelector_RotationY',1,'Scan3dCoordinateTransformSelector_RotationZ',2,'Scan3dCoordinateTransformSelector_TranslationX',3,'Scan3dCoordinateTransformSelector_TranslationY',4,'Scan3dCoordinateTransformSelector_TranslationZ',5);
enuminfo.GevPhysicalLinkConfigurationEnum=struct('GevPhysicalLinkConfiguration_SingleLink',0,'GevPhysicalLinkConfiguration_MultiLink',1,'GevPhysicalLinkConfiguration_StaticLAG',2,'GevPhysicalLinkConfiguration_DynamicLAG',3);
enuminfo.BlackLevelAutoBalanceEnum=struct('BlackLevelAutoBalance_Off',0,'BlackLevelAutoBalance_Once',1,'BlackLevelAutoBalance_Continuous',2);
enuminfo.DeviceLinkHeartbeatModeEnum=struct('DeviceLinkHeartbeatMode_On',0,'DeviceLinkHeartbeatMode_Off',1);
enuminfo.TimerTriggerSourceEnum=struct('TimerTriggerSource_Off',0,'TimerTriggerSource_AcquisitionTrigger',1,'TimerTriggerSource_AcquisitionTriggerMissed',2,'TimerTriggerSource_AcquisitionStart',3,'TimerTriggerSource_AcquisitionEnd',4,'TimerTriggerSource_FrameTrigger',5,'TimerTriggerSource_FrameTriggerMissed',6,'TimerTriggerSource_FrameStart',7,'TimerTriggerSource_FrameEnd',8,'TimerTriggerSource_FrameBurstStart',9,'TimerTriggerSource_FrameBurstEnd',10,'TimerTriggerSource_LineTrigger',11,'TimerTriggerSource_LineTriggerMissed',12,'TimerTriggerSource_LineStart',13,'TimerTriggerSource_LineEnd',14,'TimerTriggerSource_ExposureStart',15,'TimerTriggerSource_ExposureEnd',16,'TimerTriggerSource_Line0',17,'TimerTriggerSource_Line1',18,'TimerTriggerSource_Line2',19,'TimerTriggerSource_UserOutput0',21,'TimerTriggerSource_UserOutput1',22,'TimerTriggerSource_UserOutput2',23,'TimerTriggerSource_Counter0Start',25,'TimerTriggerSource_Counter1Start',26,'TimerTriggerSource_Counter2Start',27,'TimerTriggerSource_Counter0End',29,'TimerTriggerSource_Counter1End',30,'TimerTriggerSource_Counter2End',31,'TimerTriggerSource_Timer0Start',33,'TimerTriggerSource_Timer1Start',34,'TimerTriggerSource_Timer2Start',35,'TimerTriggerSource_Timer0End',37,'TimerTriggerSource_Timer1End',38,'TimerTriggerSource_Timer2End',39,'TimerTriggerSource_Encoder0',41,'TimerTriggerSource_Encoder1',42,'TimerTriggerSource_Encoder2',43,'TimerTriggerSource_LogicBlock0',45,'TimerTriggerSource_LogicBlock1',46,'TimerTriggerSource_LogicBlock2',47,'TimerTriggerSource_SoftwareSignal0',49,'TimerTriggerSource_SoftwareSignal1',50,'TimerTriggerSource_SoftwareSignal2',51,'TimerTriggerSource_Action0',53,'TimerTriggerSource_Action1',54,'TimerTriggerSource_Action2',55,'TimerTriggerSource_LinkTrigger0',57,'TimerTriggerSource_LinkTrigger1',58,'TimerTriggerSource_LinkTrigger2',59);
enuminfo.CredTwoLite_CoolingMode=struct('MANUAL',0,'AUTOMATIC',1,'CUSTOM_STEPS',2);
enuminfo.ChunkScan3dOutputModeEnum=struct('ChunkScan3dOutputMode_UncalibratedC',0,'ChunkScan3dOutputMode_CalibratedABC_Grid',1,'ChunkScan3dOutputMode_CalibratedABC_PointCloud',2,'ChunkScan3dOutputMode_CalibratedAC',3,'ChunkScan3dOutputMode_CalibratedAC_Linescan',4,'ChunkScan3dOutputMode_CalibratedC',5,'ChunkScan3dOutputMode_CalibratedC_Linescan',6,'ChunkScan3dOutputMode_RectifiedC',7,'ChunkScan3dOutputMode_RectifiedC_Linescan',8,'ChunkScan3dOutputMode_DisparityC',9,'ChunkScan3dOutputMode_DisparityC_Linescan',10);
enuminfo.ExposureTimeModeEnum=struct('ExposureTimeMode_Common',0,'ExposureTimeMode_Individual',1);
enuminfo.BinningSelectorEnum=struct('BinningSelector_Sensor',0,'BinningSelector_Region0',1,'BinningSelector_Region1',2,'BinningSelector_Region2',3);
enuminfo.GenDCStreamingStatusEnum=struct('GenDCStreamingStatus_Off',0,'GenDCStreamingStatus_On',1);
enuminfo.BalanceWhiteAutoEnum=struct('BalanceWhiteAuto_Off',0,'BalanceWhiteAuto_Once',1,'BalanceWhiteAuto_Continuous',2);
enuminfo.CxpLinkConfigurationStatusEnum=struct('CxpLinkConfigurationStatus_None',0,'CxpLinkConfigurationStatus_Pending',1,'CxpLinkConfigurationStatus_CXP1_X1',2,'CxpLinkConfigurationStatus_CXP2_X1',3,'CxpLinkConfigurationStatus_CXP3_X1',4,'CxpLinkConfigurationStatus_CXP5_X1',5,'CxpLinkConfigurationStatus_CXP6_X1',6,'CxpLinkConfigurationStatus_CXP10_X1',7,'CxpLinkConfigurationStatus_CXP12_X1',8,'CxpLinkConfigurationStatus_CXP1_X2',9,'CxpLinkConfigurationStatus_CXP2_X2',10,'CxpLinkConfigurationStatus_CXP3_X2',11,'CxpLinkConfigurationStatus_CXP5_X2',12,'CxpLinkConfigurationStatus_CXP6_X2',13,'CxpLinkConfigurationStatus_CXP10_X2',14,'CxpLinkConfigurationStatus_CXP12_X2',15,'CxpLinkConfigurationStatus_CXP1_X3',16,'CxpLinkConfigurationStatus_CXP2_X3',17,'CxpLinkConfigurationStatus_CXP3_X3',18,'CxpLinkConfigurationStatus_CXP5_X3',19,'CxpLinkConfigurationStatus_CXP6_X3',20,'CxpLinkConfigurationStatus_CXP10_X3',21,'CxpLinkConfigurationStatus_CXP12_X3',22,'CxpLinkConfigurationStatus_CXP1_X4',23,'CxpLinkConfigurationStatus_CXP2_X4',24,'CxpLinkConfigurationStatus_CXP3_X4',25,'CxpLinkConfigurationStatus_CXP5_X4',26,'CxpLinkConfigurationStatus_CXP6_X4',27,'CxpLinkConfigurationStatus_CXP10_X4',28,'CxpLinkConfigurationStatus_CXP12_X4',29,'CxpLinkConfigurationStatus_CXP1_X5',30,'CxpLinkConfigurationStatus_CXP2_X5',31,'CxpLinkConfigurationStatus_CXP3_X5',32,'CxpLinkConfigurationStatus_CXP5_X5',33,'CxpLinkConfigurationStatus_CXP6_X5',34,'CxpLinkConfigurationStatus_CXP10_X5',35,'CxpLinkConfigurationStatus_CXP12_X5',36,'CxpLinkConfigurationStatus_CXP1_X6',37,'CxpLinkConfigurationStatus_CXP2_X6',38,'CxpLinkConfigurationStatus_CXP3_X6',39,'CxpLinkConfigurationStatus_CXP5_X6',40,'CxpLinkConfigurationStatus_CXP6_X6',41,'CxpLinkConfigurationStatus_CXP10_X6',42,'CxpLinkConfigurationStatus_CXP12_X6',43);
enuminfo.ChunkGainSelectorEnum=struct('ChunkGainSelector_All',0,'ChunkGainSelector_Red',1,'ChunkGainSelector_Green',2,'ChunkGainSelector_Blue',3,'ChunkGainSelector_Y',4,'ChunkGainSelector_U',5,'ChunkGainSelector_V',6,'ChunkGainSelector_Tap1',7,'ChunkGainSelector_Tap2',8,'ChunkGainSelector_AnalogAll',10,'ChunkGainSelector_AnalogRed',11,'ChunkGainSelector_AnalogGreen',12,'ChunkGainSelector_AnalogBlue',13,'ChunkGainSelector_AnalogY',14,'ChunkGainSelector_AnalogU',15,'ChunkGainSelector_AnalogV',16,'ChunkGainSelector_AnalogTap1',17,'ChunkGainSelector_AnalogTap2',18,'ChunkGainSelector_DigitalAll',20,'ChunkGainSelector_DigitalRed',21,'ChunkGainSelector_DigitalGreen',22,'ChunkGainSelector_DigitalBlue',23,'ChunkGainSelector_DigitalY',24,'ChunkGainSelector_DigitalU',25,'ChunkGainSelector_DigitalV',26,'ChunkGainSelector_DigitalTap1',27,'ChunkGainSelector_DigitalTap2',28);
enuminfo.LogicBlockLUTSelectorEnum=struct('LogicBlockLUTSelector_Value',0,'LogicBlockLUTSelector_Enable',1);
enuminfo.GevGVCPExtendedStatusCodesSelectorEnum=struct('GevGVCPExtendedStatusCodesSelector_Version1_1',0,'GevGVCPExtendedStatusCodesSelector_Version2_0',1);
enuminfo.SequencerFeatureSelectorEnum=struct('SequencerFeatureSelector_DeviceSpecific',0);
enuminfo.ChunkScan3dCoordinateSystemReferenceEnum=struct('ChunkScan3dCoordinateSystemReference_Anchor',0,'ChunkScan3dCoordinateSystemReference_Transformed',1);
enuminfo.EncoderOutputModeEnum=struct('EncoderOutputMode_Off',0,'EncoderOutputMode_PositionUp',1,'EncoderOutputMode_PositionDown',2,'EncoderOutputMode_DirectionUp',3,'EncoderOutputMode_DirectionDown',4,'EncoderOutputMode_Motion',5);
enuminfo.TransferTriggerModeEnum=struct('TransferTriggerMode_Off',0,'TransferTriggerMode_On',1);
enuminfo.CxpLinkSharingSubDeviceTypeEnum=struct('CxpLinkSharingSubDeviceType_Master',0,'CxpLinkSharingSubDeviceType_Slave',1);
enuminfo.DeviceStreamChannelEndiannessEnum=struct('DeviceStreamChannelEndianness_Big',0,'DeviceStreamChannelEndianness_Little',1);
enuminfo.Scan3dOutputModeEnum=struct('Scan3dOutputMode_UncalibratedC',0,'Scan3dOutputMode_CalibratedABC_Grid',1,'Scan3dOutputMode_CalibratedABC_PointCloud',2,'Scan3dOutputMode_CalibratedAC',3,'Scan3dOutputMode_CalibratedAC_Linescan',4,'Scan3dOutputMode_CalibratedC',5,'Scan3dOutputMode_CalibratedC_Linescan',6,'Scan3dOutputMode_RectifiedC',7,'Scan3dOutputMode_RectifiedC_Linescan',8,'Scan3dOutputMode_DisparityC',9,'Scan3dOutputMode_DisparityC_Linescan',10);
enuminfo.ChunkSourceSelectorEnum=struct('ChunkSourceSelector_Source0',0,'ChunkSourceSelector_Source1',1,'ChunkSourceSelector_Source2',2);
enuminfo.TransferSelectorEnum=struct('TransferSelector_Stream0',0,'TransferSelector_Stream1',1,'TransferSelector_Stream2',2,'TransferSelector_All',4);
enuminfo.Scan3dExtractionSourceEnum=struct('Scan3dExtractionSource_Region0',0,'Scan3dExtractionSource_Region1',1);
enuminfo.TLParamsLockedSelectorEnum=struct('TLParamsLockedSelector_ImageSize',0,'TLParamsLockedSelector_PixelFormat',1,'TLParamsLockedSelector_PixelSize',2,'TLParamsLockedSelector_ExtendedPayload',3);
enuminfo.TransferComponentSelectorEnum=struct('TransferComponentSelector_Red',0,'TransferComponentSelector_Green',1,'TransferComponentSelector_Blue',2,'TransferComponentSelector_All',3);
enuminfo.SensorShutterModeEnum=struct('SensorShutterMode_Global',0,'SensorShutterMode_Rolling',1,'SensorShutterMode_GlobalReset',2);
enuminfo.LightControllerSourceEnum=struct('LightControllerSource_Line0',0,'LightControllerSource_Timer0',2,'LightControllerSource_Counter0',4,'LightControllerSource_UserOutput0',6);
enuminfo.FileSelectorEnum=struct('FileSelector_UserSetDefault',0,'FileSelector_UserSet1',1,'FileSelector_UserSet2',2,'FileSelector_UserSet3',3,'FileSelector_LUTLuminance',5,'FileSelector_LUTRed',6,'FileSelector_LUTGreen',7,'FileSelector_LUTBlue',8);
enuminfo.DeviceTapGeometryEnum=struct('DeviceTapGeometry_Geometry_1X_1Y',0,'DeviceTapGeometry_Geometry_1X2_1Y',1,'DeviceTapGeometry_Geometry_1X2_1Y2',2,'DeviceTapGeometry_Geometry_2X_1Y',3,'DeviceTapGeometry_Geometry_2X_1Y2',4,'DeviceTapGeometry_Geometry_2XE_1Y',5,'DeviceTapGeometry_Geometry_2XE_1Y2',6,'DeviceTapGeometry_Geometry_2XM_1Y',7,'DeviceTapGeometry_Geometry_2XM_1Y2',8,'DeviceTapGeometry_Geometry_1X_1Y2',9,'DeviceTapGeometry_Geometry_1X_2YE',10,'DeviceTapGeometry_Geometry_1X3_1Y',11,'DeviceTapGeometry_Geometry_3X_1Y',12,'DeviceTapGeometry_Geometry_1X',13,'DeviceTapGeometry_Geometry_1X2',14,'DeviceTapGeometry_Geometry_2X',15,'DeviceTapGeometry_Geometry_2XE',16,'DeviceTapGeometry_Geometry_2XM',17,'DeviceTapGeometry_Geometry_1X3',18,'DeviceTapGeometry_Geometry_3X',19,'DeviceTapGeometry_Geometry_1X4_1Y',20,'DeviceTapGeometry_Geometry_4X_1Y',21,'DeviceTapGeometry_Geometry_2X2_1Y',22,'DeviceTapGeometry_Geometry_2X2E_1Y',23,'DeviceTapGeometry_Geometry_2X2M_1Y',24,'DeviceTapGeometry_Geometry_1X2_2YE',25,'DeviceTapGeometry_Geometry_2X_2YE',26,'DeviceTapGeometry_Geometry_2XE_2YE',27,'DeviceTapGeometry_Geometry_2XM_2YE',28,'DeviceTapGeometry_Geometry_1X4',29,'DeviceTapGeometry_Geometry_4X',30,'DeviceTapGeometry_Geometry_2X2',31,'DeviceTapGeometry_Geometry_2X2E',32,'DeviceTapGeometry_Geometry_2X2M',33,'DeviceTapGeometry_Geometry_1X8_1Y',34,'DeviceTapGeometry_Geometry_8X_1Y',35,'DeviceTapGeometry_Geometry_4X2_1Y',36,'DeviceTapGeometry_Geometry_2X2E_2YE',37,'DeviceTapGeometry_Geometry_1X8',38,'DeviceTapGeometry_Geometry_8X',39,'DeviceTapGeometry_Geometry_4X2',40,'DeviceTapGeometry_Geometry_4X2E',41,'DeviceTapGeometry_Geometry_4X2E_1Y',42,'DeviceTapGeometry_Geometry_1X10_1Y',43,'DeviceTapGeometry_Geometry_10X_1Y',44,'DeviceTapGeometry_Geometry_1X10',45,'DeviceTapGeometry_Geometry_10X',46);
enuminfo.ImageCompressionRateOptionEnum=struct('ImageCompressionRateOption_FixBitrate',0,'ImageCompressionRateOption_FixQuality',1);
enuminfo.LineModeEnum=struct('LineMode_Input',0,'LineMode_Output',1);
enuminfo.BlackLevelAutoEnum=struct('BlackLevelAuto_Off',0,'BlackLevelAuto_Once',1,'BlackLevelAuto_Continuous',2);
enuminfo.ChunkComponentIDEnum=struct('ChunkComponentID_Intensity',0,'ChunkComponentID_Infrared',1,'ChunkComponentID_Ultraviolet',2,'ChunkComponentID_Range',3,'ChunkComponentID_Reflectance',4,'ChunkComponentID_Disparity',5,'ChunkComponentID_Confidence',6,'ChunkComponentID_Scatter',7,'ChunkComponentID_Multispectral',8);
enuminfo.CxpLinkConfigurationPreferredEnum=struct('CxpLinkConfigurationPreferred_CXP1_X1',0,'CxpLinkConfigurationPreferred_CXP2_X1',1,'CxpLinkConfigurationPreferred_CXP3_X1',2,'CxpLinkConfigurationPreferred_CXP5_X1',3,'CxpLinkConfigurationPreferred_CXP6_X1',4,'CxpLinkConfigurationPreferred_CXP10_X1',5,'CxpLinkConfigurationPreferred_CXP12_X1',6,'CxpLinkConfigurationPreferred_CXP1_X2',7,'CxpLinkConfigurationPreferred_CXP2_X2',8,'CxpLinkConfigurationPreferred_CXP3_X2',9,'CxpLinkConfigurationPreferred_CXP5_X2',10,'CxpLinkConfigurationPreferred_CXP6_X2',11,'CxpLinkConfigurationPreferred_CXP10_X2',12,'CxpLinkConfigurationPreferred_CXP12_X2',13,'CxpLinkConfigurationPreferred_CXP1_X3',14,'CxpLinkConfigurationPreferred_CXP2_X3',15,'CxpLinkConfigurationPreferred_CXP3_X3',16,'CxpLinkConfigurationPreferred_CXP5_X3',17,'CxpLinkConfigurationPreferred_CXP6_X3',18,'CxpLinkConfigurationPreferred_CXP10_X3',19,'CxpLinkConfigurationPreferred_CXP12_X3',20,'CxpLinkConfigurationPreferred_CXP1_X4',21,'CxpLinkConfigurationPreferred_CXP2_X4',22,'CxpLinkConfigurationPreferred_CXP3_X4',23,'CxpLinkConfigurationPreferred_CXP5_X4',24,'CxpLinkConfigurationPreferred_CXP6_X4',25,'CxpLinkConfigurationPreferred_CXP10_X4',26,'CxpLinkConfigurationPreferred_CXP12_X4',27,'CxpLinkConfigurationPreferred_CXP1_X5',28,'CxpLinkConfigurationPreferred_CXP2_X5',29,'CxpLinkConfigurationPreferred_CXP3_X5',30,'CxpLinkConfigurationPreferred_CXP5_X5',31,'CxpLinkConfigurationPreferred_CXP6_X5',32,'CxpLinkConfigurationPreferred_CXP10_X5',33,'CxpLinkConfigurationPreferred_CXP12_X5',34,'CxpLinkConfigurationPreferred_CXP1_X6',35,'CxpLinkConfigurationPreferred_CXP2_X6',36,'CxpLinkConfigurationPreferred_CXP3_X6',37,'CxpLinkConfigurationPreferred_CXP5_X6',38,'CxpLinkConfigurationPreferred_CXP6_X6',39,'CxpLinkConfigurationPreferred_CXP10_X6',40,'CxpLinkConfigurationPreferred_CXP12_X6',41);
enuminfo.RegionModeEnum=struct('RegionMode_Off',0,'RegionMode_On',1);
enuminfo.GevIPConfigurationStatusEnum=struct('GevIPConfigurationStatus_None',0,'GevIPConfigurationStatus_PersistentIP',1,'GevIPConfigurationStatus_DHCP',2,'GevIPConfigurationStatus_LLA',3,'GevIPConfigurationStatus_ForceIP',4);
enuminfo.SensorTapsEnum=struct('SensorTaps_One',0,'SensorTaps_Two',1,'SensorTaps_Three',2,'SensorTaps_Four',3,'SensorTaps_Eight',4,'SensorTaps_Ten',5);
enuminfo.SparseModeEnum=struct('SparseMode_Off',0,'SparseMode_On',1);
enuminfo.GenDCStreamingModeEnum=struct('GenDCStreamingMode_Off',0,'GenDCStreamingMode_On',1,'GenDCStreamingMode_Automatic',2);
enuminfo.TriggerSourceEnum=struct('TriggerSource_Software',0,'TriggerSource_SoftwareSignal0',1,'TriggerSource_SoftwareSignal1',2,'TriggerSource_SoftwareSignal2',3,'TriggerSource_Line0',5,'TriggerSource_Line1',6,'TriggerSource_Line2',7,'TriggerSource_UserOutput0',9,'TriggerSource_UserOutput1',10,'TriggerSource_UserOutput2',11,'TriggerSource_Counter0Start',13,'TriggerSource_Counter1Start',14,'TriggerSource_Counter2Start',15,'TriggerSource_Counter0End',17,'TriggerSource_Counter1End',18,'TriggerSource_Counter2End',19,'TriggerSource_Timer0Start',21,'TriggerSource_Timer1Start',22,'TriggerSource_Timer2Start',23,'TriggerSource_Timer0End',25,'TriggerSource_Timer1End',26,'TriggerSource_Timer2End',27,'TriggerSource_Encoder0',29,'TriggerSource_Encoder1',30,'TriggerSource_Encoder2',31,'TriggerSource_LogicBlock0',33,'TriggerSource_LogicBlock1',34,'TriggerSource_LogicBlock2',35,'TriggerSource_Action0',37,'TriggerSource_Action1',38,'TriggerSource_Action2',39,'TriggerSource_LinkTrigger0',41,'TriggerSource_LinkTrigger1',42,'TriggerSource_LinkTrigger2',43,'TriggerSource_CC1',45,'TriggerSource_CC2',46,'TriggerSource_CC3',47,'TriggerSource_CC4',48);
enuminfo.PixelFormatInfoSelectorEnum=struct('PixelFormatInfoSelector_Mono1p',16842807,'PixelFormatInfoSelector_Mono2p',16908344,'PixelFormatInfoSelector_Mono4p',17039417,'PixelFormatInfoSelector_Mono8',17301505,'PixelFormatInfoSelector_Mono8s',17301506,'PixelFormatInfoSelector_Mono10',17825795,'PixelFormatInfoSelector_Mono10p',17432646,'PixelFormatInfoSelector_Mono12',17825797,'PixelFormatInfoSelector_Mono12p',17563719,'PixelFormatInfoSelector_Mono14',17825829,'PixelFormatInfoSelector_Mono14p',17694980,'PixelFormatInfoSelector_Mono16',17825799,'PixelFormatInfoSelector_Mono32',18874641,'PixelFormatInfoSelector_BayerBG4p',17039632,'PixelFormatInfoSelector_BayerBG8',17301515,'PixelFormatInfoSelector_BayerBG10',17825807,'PixelFormatInfoSelector_BayerBG10p',17432658,'PixelFormatInfoSelector_BayerBG12',17825811,'PixelFormatInfoSelector_BayerBG12p',17563731,'PixelFormatInfoSelector_BayerBG14',17826060,'PixelFormatInfoSelector_BayerBG14p',17694984,'PixelFormatInfoSelector_BayerBG16',17825841,'PixelFormatInfoSelector_BayerGB4p',17039631,'PixelFormatInfoSelector_BayerGB8',17301514,'PixelFormatInfoSelector_BayerGB10',17825806,'PixelFormatInfoSelector_BayerGB10p',17432660,'PixelFormatInfoSelector_BayerGB12',17825810,'PixelFormatInfoSelector_BayerGB12p',17563733,'PixelFormatInfoSelector_BayerGB14',17826059,'PixelFormatInfoSelector_BayerGB14p',17694983,'PixelFormatInfoSelector_BayerGB16',17825840,'PixelFormatInfoSelector_BayerGR4p',17039629,'PixelFormatInfoSelector_BayerGR8',17301512,'PixelFormatInfoSelector_BayerGR10',17825804,'PixelFormatInfoSelector_BayerGR10p',17432662,'PixelFormatInfoSelector_BayerGR12',17825808,'PixelFormatInfoSelector_BayerGR12p',17563735,'PixelFormatInfoSelector_BayerGR14',17826057,'PixelFormatInfoSelector_BayerGR14p',17694981,'PixelFormatInfoSelector_BayerGR16',17825838,'PixelFormatInfoSelector_BayerRG4p',17039630,'PixelFormatInfoSelector_BayerRG8',17301513,'PixelFormatInfoSelector_BayerRG10',17825805,'PixelFormatInfoSelector_BayerRG10p',17432664,'PixelFormatInfoSelector_BayerRG12',17825809,'PixelFormatInfoSelector_BayerRG12p',17563737,'PixelFormatInfoSelector_BayerRG14',17826058,'PixelFormatInfoSelector_BayerRG14p',17694982,'PixelFormatInfoSelector_BayerRG16',17825839,'PixelFormatInfoSelector_RGBa8',35651606,'PixelFormatInfoSelector_RGBa10',37748831,'PixelFormatInfoSelector_RGBa10p',36175968,'PixelFormatInfoSelector_RGBa12',37748833,'PixelFormatInfoSelector_RGBa12p',36700258,'PixelFormatInfoSelector_RGBa14',37748835,'PixelFormatInfoSelector_RGBa16',37748836,'PixelFormatInfoSelector_RGB8',35127316,'PixelFormatInfoSelector_RGB8_Planar',35127329,'PixelFormatInfoSelector_RGB10',36700184,'PixelFormatInfoSelector_RGB10_Planar',36700194,'PixelFormatInfoSelector_RGB10p',35520604,'PixelFormatInfoSelector_RGB10p32',35651613,'PixelFormatInfoSelector_RGB12',36700186,'PixelFormatInfoSelector_RGB12_Planar',36700195,'PixelFormatInfoSelector_RGB12p',35913821,'PixelFormatInfoSelector_RGB14',36700254,'PixelFormatInfoSelector_RGB16',36700211,'PixelFormatInfoSelector_RGB16_Planar',36700196,'PixelFormatInfoSelector_RGB565p',34603061,'PixelFormatInfoSelector_BGRa8',35651607,'PixelFormatInfoSelector_BGRa10',37748812,'PixelFormatInfoSelector_BGRa10p',36175949,'PixelFormatInfoSelector_BGRa12',37748814,'PixelFormatInfoSelector_BGRa12p',36700239,'PixelFormatInfoSelector_BGRa14',37748816,'PixelFormatInfoSelector_BGRa16',37748817,'PixelFormatInfoSelector_BGR8',35127317,'PixelFormatInfoSelector_BGR10',36700185,'PixelFormatInfoSelector_BGR10p',35520584,'PixelFormatInfoSelector_BGR12',36700187,'PixelFormatInfoSelector_BGR12p',35913801,'PixelFormatInfoSelector_BGR14',36700234,'PixelFormatInfoSelector_BGR16',36700235,'PixelFormatInfoSelector_BGR565p',34603062,'PixelFormatInfoSelector_R8',17301705,'PixelFormatInfoSelector_R10',17432778,'PixelFormatInfoSelector_R12',17563851,'PixelFormatInfoSelector_R16',17825996,'PixelFormatInfoSelector_G8',17301709,'PixelFormatInfoSelector_G10',17432782,'PixelFormatInfoSelector_G12',17563855,'PixelFormatInfoSelector_G16',17826000,'PixelFormatInfoSelector_B8',17301713,'PixelFormatInfoSelector_B10',17432786,'PixelFormatInfoSelector_B12',17563859,'PixelFormatInfoSelector_B16',17826004,'PixelFormatInfoSelector_Coord3D_ABC8',35127474,'PixelFormatInfoSelector_Coord3D_ABC8_Planar',35127475,'PixelFormatInfoSelector_Coord3D_ABC10p',35520731,'PixelFormatInfoSelector_Coord3D_ABC10p_Planar',35520732,'PixelFormatInfoSelector_Coord3D_ABC12p',35913950,'PixelFormatInfoSelector_Coord3D_ABC12p_Planar',35913951,'PixelFormatInfoSelector_Coord3D_ABC16',36700345,'PixelFormatInfoSelector_Coord3D_ABC16_Planar',36700346,'PixelFormatInfoSelector_Coord3D_ABC32f',39846080,'PixelFormatInfoSelector_Coord3D_ABC32f_Planar',39846081,'PixelFormatInfoSelector_Coord3D_AC8',34603188,'PixelFormatInfoSelector_Coord3D_AC8_Planar',34603189,'PixelFormatInfoSelector_Coord3D_AC10p',34865392,'PixelFormatInfoSelector_Coord3D_AC10p_Planar',34865393,'PixelFormatInfoSelector_Coord3D_AC12p',35127538,'PixelFormatInfoSelector_Coord3D_AC12p_Planar',35127539,'PixelFormatInfoSelector_Coord3D_AC16',35651771,'PixelFormatInfoSelector_Coord3D_AC16_Planar',35651772,'PixelFormatInfoSelector_Coord3D_AC32f',37748930,'PixelFormatInfoSelector_Coord3D_AC32f_Planar',37748931,'PixelFormatInfoSelector_Coord3D_A8',17301679,'PixelFormatInfoSelector_Coord3D_A10p',17432789,'PixelFormatInfoSelector_Coord3D_A12p',17563864,'PixelFormatInfoSelector_Coord3D_A16',17825974,'PixelFormatInfoSelector_Coord3D_A32f',18874557,'PixelFormatInfoSelector_Coord3D_B8',17301680,'PixelFormatInfoSelector_Coord3D_B10p',17432790,'PixelFormatInfoSelector_Coord3D_B12p',17563865,'PixelFormatInfoSelector_Coord3D_B16',17825975,'PixelFormatInfoSelector_Coord3D_B32f',18874558,'PixelFormatInfoSelector_Coord3D_C8',17301681,'PixelFormatInfoSelector_Coord3D_C10p',17432791,'PixelFormatInfoSelector_Coord3D_C12p',17563866,'PixelFormatInfoSelector_Coord3D_C16',17825976,'PixelFormatInfoSelector_Coord3D_C32f',18874559,'PixelFormatInfoSelector_Confidence1',17301700,'PixelFormatInfoSelector_Confidence1p',16842949,'PixelFormatInfoSelector_Confidence8',17301702,'PixelFormatInfoSelector_Confidence16',17825991,'PixelFormatInfoSelector_Confidence32f',18874568,'PixelFormatInfoSelector_BiColorBGRG8',34603174,'PixelFormatInfoSelector_BiColorBGRG10',35651753,'PixelFormatInfoSelector_BiColorBGRG10p',34865322,'PixelFormatInfoSelector_BiColorBGRG12',35651757,'PixelFormatInfoSelector_BiColorBGRG12p',35127470,'PixelFormatInfoSelector_BiColorRGBG8',34603173,'PixelFormatInfoSelector_BiColorRGBG10',35651751,'PixelFormatInfoSelector_BiColorRGBG10p',34865320,'PixelFormatInfoSelector_BiColorRGBG12',35651755,'PixelFormatInfoSelector_BiColorRGBG12p',35127468,'PixelFormatInfoSelector_Data8',17301782,'PixelFormatInfoSelector_Data8s',17301783,'PixelFormatInfoSelector_Data16',17826072,'PixelFormatInfoSelector_Data16s',17826073,'PixelFormatInfoSelector_Data32',18874650,'PixelFormatInfoSelector_Data32f',18874652,'PixelFormatInfoSelector_Data32s',18874651,'PixelFormatInfoSelector_Data64',20971805,'PixelFormatInfoSelector_Data64f',20971807,'PixelFormatInfoSelector_Data64s',20971806,'PixelFormatInfoSelector_SCF1WBWG8',17301607,'PixelFormatInfoSelector_SCF1WBWG10',17825896,'PixelFormatInfoSelector_SCF1WBWG10p',17432681,'PixelFormatInfoSelector_SCF1WBWG12',17825898,'PixelFormatInfoSelector_SCF1WBWG12p',17563755,'PixelFormatInfoSelector_SCF1WBWG14',17825900,'PixelFormatInfoSelector_SCF1WBWG16',17825901,'PixelFormatInfoSelector_SCF1WGWB8',17301614,'PixelFormatInfoSelector_SCF1WGWB10',17825903,'PixelFormatInfoSelector_SCF1WGWB10p',17432688,'PixelFormatInfoSelector_SCF1WGWB12',17825905,'PixelFormatInfoSelector_SCF1WGWB12p',17563762,'PixelFormatInfoSelector_SCF1WGWB14',17825907,'PixelFormatInfoSelector_SCF1WGWB16',17825908,'PixelFormatInfoSelector_SCF1WGWR8',17301621,'PixelFormatInfoSelector_SCF1WGWR10',17825910,'PixelFormatInfoSelector_SCF1WGWR10p',17432695,'PixelFormatInfoSelector_SCF1WGWR12',17825912,'PixelFormatInfoSelector_SCF1WGWR12p',17563769,'PixelFormatInfoSelector_SCF1WGWR14',17825914,'PixelFormatInfoSelector_SCF1WGWR16',17825915,'PixelFormatInfoSelector_SCF1WRWG8',17301628,'PixelFormatInfoSelector_SCF1WRWG10',17825917,'PixelFormatInfoSelector_SCF1WRWG10p',17432702,'PixelFormatInfoSelector_SCF1WRWG12',17825919,'PixelFormatInfoSelector_SCF1WRWG12p',17563776,'PixelFormatInfoSelector_SCF1WRWG14',17825921,'PixelFormatInfoSelector_SCF1WRWG16',17825922,'PixelFormatInfoSelector_YCbCr8',35127387,'PixelFormatInfoSelector_YCbCr8_CbYCr',35127354,'PixelFormatInfoSelector_YCbCr10_CbYCr',36700291,'PixelFormatInfoSelector_YCbCr10p_CbYCr',35520644,'PixelFormatInfoSelector_YCbCr12_CbYCr',36700293,'PixelFormatInfoSelector_YCbCr12p_CbYCr',35913862,'PixelFormatInfoSelector_YCbCr411_8',34340954,'PixelFormatInfoSelector_YCbCr411_8_CbYYCrYY',34340924,'PixelFormatInfoSelector_YCbCr420_8_YY_CbCr_Semiplanar',34341138,'PixelFormatInfoSelector_YCbCr420_8_YY_CrCb_Semiplanar',34341140,'PixelFormatInfoSelector_YCbCr422_8',34603067,'PixelFormatInfoSelector_YCbCr422_8_CbYCrY',34603075,'PixelFormatInfoSelector_YCbCr422_8_YY_CbCr_Semiplanar',34603283,'PixelFormatInfoSelector_YCbCr422_8_YY_CrCb_Semiplanar',34603285,'PixelFormatInfoSelector_YCbCr422_10',35651685,'PixelFormatInfoSelector_YCbCr422_10_CbYCrY',35651737,'PixelFormatInfoSelector_YCbCr422_10p',34865287,'PixelFormatInfoSelector_YCbCr422_10p_CbYCrY',34865306,'PixelFormatInfoSelector_YCbCr422_12',35651686,'PixelFormatInfoSelector_YCbCr422_12_CbYCrY',35651739,'PixelFormatInfoSelector_YCbCr422_12p',35127432,'PixelFormatInfoSelector_YCbCr422_12p_CbYCrY',35127452,'PixelFormatInfoSelector_YCbCr601_8_CbYCr',35127357,'PixelFormatInfoSelector_YCbCr601_10_CbYCr',36700297,'PixelFormatInfoSelector_YCbCr601_10p_CbYCr',35520650,'PixelFormatInfoSelector_YCbCr601_12_CbYCr',36700299,'PixelFormatInfoSelector_YCbCr601_12p_CbYCr',35913868,'PixelFormatInfoSelector_YCbCr601_411_8_CbYYCrYY',34340927,'PixelFormatInfoSelector_YCbCr601_422_8',34603070,'PixelFormatInfoSelector_YCbCr601_422_8_CbYCrY',34603076,'PixelFormatInfoSelector_YCbCr601_422_10',35651725,'PixelFormatInfoSelector_YCbCr601_422_10_CbYCrY',35651741,'PixelFormatInfoSelector_YCbCr601_422_10p',34865294,'PixelFormatInfoSelector_YCbCr601_422_10p_CbYCrY',34865310,'PixelFormatInfoSelector_YCbCr601_422_12',35651727,'PixelFormatInfoSelector_YCbCr601_422_12_CbYCrY',35651743,'PixelFormatInfoSelector_YCbCr601_422_12p',35127440,'PixelFormatInfoSelector_YCbCr601_422_12p_CbYCrY',35127456,'PixelFormatInfoSelector_YCbCr709_8_CbYCr',35127360,'PixelFormatInfoSelector_YCbCr709_10_CbYCr',36700305,'PixelFormatInfoSelector_YCbCr709_10p_CbYCr',35520658,'PixelFormatInfoSelector_YCbCr709_12_CbYCr',36700307,'PixelFormatInfoSelector_YCbCr709_12p_CbYCr',35913876,'PixelFormatInfoSelector_YCbCr709_411_8_CbYYCrYY',34340930,'PixelFormatInfoSelector_YCbCr709_422_8',34603073,'PixelFormatInfoSelector_YCbCr709_422_8_CbYCrY',34603077,'PixelFormatInfoSelector_YCbCr709_422_10',35651733,'PixelFormatInfoSelector_YCbCr709_422_10_CbYCrY',35651745,'PixelFormatInfoSelector_YCbCr709_422_10p',34865302,'PixelFormatInfoSelector_YCbCr709_422_10p_CbYCrY',34865314,'PixelFormatInfoSelector_YCbCr709_422_12',35651735,'PixelFormatInfoSelector_YCbCr709_422_12_CbYCrY',35651747,'PixelFormatInfoSelector_YCbCr709_422_12p',35127448,'PixelFormatInfoSelector_YCbCr709_422_12p_CbYCrY',35127460,'PixelFormatInfoSelector_YCbCr2020_8_CbYCr',35127540,'PixelFormatInfoSelector_YCbCr2020_10_CbYCr',36700405,'PixelFormatInfoSelector_YCbCr2020_10p_CbYCr',35520758,'PixelFormatInfoSelector_YCbCr2020_12_CbYCr',36700407,'PixelFormatInfoSelector_YCbCr2020_12p_CbYCr',35913976,'PixelFormatInfoSelector_YCbCr2020_411_8_CbYYCrYY',34341113,'PixelFormatInfoSelector_YCbCr2020_422_8',34603258,'PixelFormatInfoSelector_YCbCr2020_422_8_CbYCrY',34603259,'PixelFormatInfoSelector_YCbCr2020_422_10',35651836,'PixelFormatInfoSelector_YCbCr2020_422_10_CbYCrY',35651837,'PixelFormatInfoSelector_YCbCr2020_422_10p',34865406,'PixelFormatInfoSelector_YCbCr2020_422_10p_CbYCrY',34865407,'PixelFormatInfoSelector_YCbCr2020_422_12',35651840,'PixelFormatInfoSelector_YCbCr2020_422_12_CbYCrY',35651841,'PixelFormatInfoSelector_YCbCr2020_422_12p',35127554,'PixelFormatInfoSelector_YCbCr2020_422_12p_CbYCrY',35127555,'PixelFormatInfoSelector_YUV8_UYV',35127328,'PixelFormatInfoSelector_YUV411_8_UYYVYY',34340894,'PixelFormatInfoSelector_YUV422_8',34603058,'PixelFormatInfoSelector_YUV422_8_UYVY',34603039);
enuminfo.DeviceCharacterSetEnum=struct('DeviceCharacterSet_UTF8',0,'DeviceCharacterSet_ASCII',1);
enuminfo.ImageCompressionJPEGFormatOptionEnum=struct('ImageCompressionJPEGFormatOption_Lossless',0,'ImageCompressionJPEGFormatOption_BaselineStandard',1,'ImageCompressionJPEGFormatOption_BaselineOptimized',2,'ImageCompressionJPEGFormatOption_Progressive',3);
enuminfo.DeviceScanTypeEnum=struct('DeviceScanType_Areascan',0,'DeviceScanType_Linescan',1,'DeviceScanType_Areascan3D',2,'DeviceScanType_Linescan3D',3);
enuminfo.TestPayloadFormatModeEnum=struct('TestPayloadFormatMode_Off',0,'TestPayloadFormatMode_MultiPart',1,'TestPayloadFormatMode_GenDC',2);
enuminfo.PixelColorFilterEnum=struct('PixelColorFilter_None',0,'PixelColorFilter_BayerRG',1,'PixelColorFilter_BayerGB',2,'PixelColorFilter_BayerGR',3,'PixelColorFilter_BayerBG',4);
enuminfo.CxpLinkConfigurationEnum=struct('CxpLinkConfiguration_Auto',0,'CxpLinkConfiguration_CXP1_X1',1,'CxpLinkConfiguration_CXP2_X1',2,'CxpLinkConfiguration_CXP3_X1',3,'CxpLinkConfiguration_CXP5_X1',4,'CxpLinkConfiguration_CXP6_X1',5,'CxpLinkConfiguration_CXP10_X1',6,'CxpLinkConfiguration_CXP12_X1',7,'CxpLinkConfiguration_CXP1_X2',8,'CxpLinkConfiguration_CXP2_X2',9,'CxpLinkConfiguration_CXP3_X2',10,'CxpLinkConfiguration_CXP5_X2',11,'CxpLinkConfiguration_CXP6_X2',12,'CxpLinkConfiguration_CXP10_X2',13,'CxpLinkConfiguration_CXP12_X2',14,'CxpLinkConfiguration_CXP1_X3',15,'CxpLinkConfiguration_CXP2_X3',16,'CxpLinkConfiguration_CXP3_X3',17,'CxpLinkConfiguration_CXP5_X3',18,'CxpLinkConfiguration_CXP6_X3',19,'CxpLinkConfiguration_CXP10_X3',20,'CxpLinkConfiguration_CXP12_X3',21,'CxpLinkConfiguration_CXP1_X4',22,'CxpLinkConfiguration_CXP2_X4',23,'CxpLinkConfiguration_CXP3_X4',24,'CxpLinkConfiguration_CXP5_X4',25,'CxpLinkConfiguration_CXP6_X4',26,'CxpLinkConfiguration_CXP10_X4',27,'CxpLinkConfiguration_CXP12_X4',28,'CxpLinkConfiguration_CXP1_X5',29,'CxpLinkConfiguration_CXP2_X5',30,'CxpLinkConfiguration_CXP3_X5',31,'CxpLinkConfiguration_CXP5_X5',32,'CxpLinkConfiguration_CXP6_X5',33,'CxpLinkConfiguration_CXP10_X5',34,'CxpLinkConfiguration_CXP12_X5',35,'CxpLinkConfiguration_CXP1_X6',36,'CxpLinkConfiguration_CXP2_X6',37,'CxpLinkConfiguration_CXP3_X6',38,'CxpLinkConfiguration_CXP5_X6',39,'CxpLinkConfiguration_CXP6_X6',40,'CxpLinkConfiguration_CXP10_X6',41,'CxpLinkConfiguration_CXP12_X6',42);
enuminfo.Scan3dDistanceUnitEnum=struct('Scan3dDistanceUnit_Millimeter',0,'Scan3dDistanceUnit_Meter',1,'Scan3dDistanceUnit_Inch',2,'Scan3dDistanceUnit_Pixel',3);
enuminfo.DeviceRegistersEndiannessEnum=struct('DeviceRegistersEndianness_Big',0,'DeviceRegistersEndianness_Little',1);
enuminfo.ChunkRegionSelectorEnum=struct('ChunkRegionSelector_Region0',0,'ChunkRegionSelector_Region1',1,'ChunkRegionSelector_Region2',2,'ChunkRegionSelector_Scan3dExtraction0',4,'ChunkRegionSelector_Scan3dExtraction1',5,'ChunkRegionSelector_Scan3dExtraction2',6);
enuminfo.EncoderSourceAEnum=struct('EncoderSourceA_Off',0,'EncoderSourceA_Line0',1,'EncoderSourceA_Line1',2,'EncoderSourceA_Line2',3);
enuminfo.FileOperationStatusEnum=struct('FileOperationStatus_Success',0,'FileOperationStatus_Failure',1);
enuminfo.ChunkEncoderStatusEnum=struct('ChunkEncoderStatus_EncoderUp',0,'ChunkEncoderStatus_EncoderDown',1,'ChunkEncoderStatus_EncoderIdle',2,'ChunkEncoderStatus_EncoderStatic',3);
enuminfo.ComponentSelectorEnum=struct('ComponentSelector_Intensity',0,'ComponentSelector_Infrared',1,'ComponentSelector_Ultraviolet',2,'ComponentSelector_Range',3,'ComponentSelector_Reflectance',4,'ComponentSelector_Confidence',5,'ComponentSelector_Disparity',6,'ComponentSelector_Scatter',7,'ComponentSelector_Multispectral',8);
enuminfo.ClConfigurationEnum=struct('ClConfiguration_Base',0,'ClConfiguration_Medium',1,'ClConfiguration_Full',2,'ClConfiguration_DualBase',3,'ClConfiguration_EightyBit',4);
enuminfo.TransferStatusSelectorEnum=struct('TransferStatusSelector_Streaming',0,'TransferStatusSelector_Paused',1,'TransferStatusSelector_Stopping',2,'TransferStatusSelector_Stopped',3,'TransferStatusSelector_QueueOverflow',4);
enuminfo.BinningVerticalModeEnum=struct('BinningVerticalMode_Sum',0,'BinningVerticalMode_Average',1);
enuminfo.GlowReductionEnum=struct('GlowReduction_Off',0,'GlowReduction_On',1);
enuminfo.ColorTransformationValueSelectorEnum=struct('ColorTransformationValueSelector_Gain00',0,'ColorTransformationValueSelector_Gain01',1,'ColorTransformationValueSelector_Gain02',2,'ColorTransformationValueSelector_Gain10',3,'ColorTransformationValueSelector_Gain11',4,'ColorTransformationValueSelector_Gain12',5,'ColorTransformationValueSelector_Gain20',6,'ColorTransformationValueSelector_Gain21',7,'ColorTransformationValueSelector_Gain22',8,'ColorTransformationValueSelector_Offset0',9,'ColorTransformationValueSelector_Offset1',10,'ColorTransformationValueSelector_Offset2',11);
enuminfo.Scan3dExtractionMethodEnum=struct('Scan3dExtractionMethod_Default',0);
enuminfo.Scan3dCoordinateSystemReferenceEnum=struct('Scan3dCoordinateSystemReference_Anchor',0,'Scan3dCoordinateSystemReference_Transformed',1);
enuminfo.ExposureAutoEnum=struct('ExposureAuto_Off',0,'ExposureAuto_Once',1,'ExposureAuto_Continuous',2);
enuminfo.EventSelectorEnum=struct('EventSelector_AcquisitionTrigger',0,'EventSelector_AcquisitionTriggerMissed',1,'EventSelector_AcquisitionStart',2,'EventSelector_AcquisitionEnd',3,'EventSelector_AcquisitionTransferStart',4,'EventSelector_AcquisitionTransferEnd',5,'EventSelector_AcquisitionError',6,'EventSelector_FrameBurstStart',7,'EventSelector_FrameBurstEnd',8,'EventSelector_FrameTrigger',9,'EventSelector_FrameTriggerMissed',10,'EventSelector_FrameStart',11,'EventSelector_FrameEnd',12,'EventSelector_FrameTransferStart',13,'EventSelector_FrameTransferEnd',14,'EventSelector_LineTrigger',15,'EventSelector_LineTriggerMissed',16,'EventSelector_LineStart',17,'EventSelector_LineEnd',18,'EventSelector_ExposureStart',19,'EventSelector_ExposureEnd',20,'EventSelector_Stream0TransferStart',21,'EventSelector_Stream0TransferEnd',22,'EventSelector_Stream0TransferPause',23,'EventSelector_Stream0TransferResume',24,'EventSelector_Stream0TransferBlockStart',25,'EventSelector_Stream0TransferBlockEnd',26,'EventSelector_Stream0TransferBlockTrigger',27,'EventSelector_Stream0TransferBurstStart',28,'EventSelector_Stream0TransferBurstEnd',29,'EventSelector_Stream0TransferOverflow',30,'EventSelector_SequencerSetChange',31,'EventSelector_Counter0Start',32,'EventSelector_Counter1Start',33,'EventSelector_Counter0End',35,'EventSelector_Counter1End',36,'EventSelector_Timer0Start',38,'EventSelector_Timer1Start',39,'EventSelector_Timer0End',41,'EventSelector_Timer1End',42,'EventSelector_Encoder0Stopped',44,'EventSelector_Encoder1Stopped',45,'EventSelector_Encoder0Restarted',47,'EventSelector_Encoder1Restarted',48,'EventSelector_Line0RisingEdge',50,'EventSelector_Line1RisingEdge',51,'EventSelector_Line0FallingEdge',53,'EventSelector_Line1FallingEdge',54,'EventSelector_Line0AnyEdge',56,'EventSelector_Line1AnyEdge',57,'EventSelector_LinkTrigger0',59,'EventSelector_LinkTrigger1',60,'EventSelector_LinkSpeedChange',62,'EventSelector_ActionLate',63,'EventSelector_Error',64,'EventSelector_Test',65,'EventSelector_PrimaryApplicationSwitch',66);
enuminfo.EventNotificationEnum=struct('EventNotification_Off',0,'EventNotification_On',1,'EventNotification_Once',2);
enuminfo.DeviceLinkThroughputLimitModeEnum=struct('DeviceLinkThroughputLimitMode_On',0,'DeviceLinkThroughputLimitMode_Off',1);
enuminfo.FirmwareUpdateStatusEnum=struct('FirmwareUpdateStatus_Idle',0,'FirmwareUpdateStatus_InProgress',1,'FirmwareUpdateStatus_Done',2,'FirmwareUpdateStatus_Failed',3);
enuminfo.TransferTriggerSelectorEnum=struct('TransferTriggerSelector_TransferStart',0,'TransferTriggerSelector_TransferStop',1,'TransferTriggerSelector_TransferAbort',2,'TransferTriggerSelector_TransferPause',3,'TransferTriggerSelector_TransferResume',4,'TransferTriggerSelector_TransferActive',5,'TransferTriggerSelector_TransferBurstStart',6,'TransferTriggerSelector_TransferBurstStop',7);
enuminfo.Scan3dCoordinateSelectorEnum=struct('Scan3dCoordinateSelector_CoordinateA',0,'Scan3dCoordinateSelector_CoordinateB',1,'Scan3dCoordinateSelector_CoordinateC',2);
enuminfo.ChunkScan3dCoordinateSelectorEnum=struct('ChunkScan3dCoordinateSelector_CoordinateA',0,'ChunkScan3dCoordinateSelector_CoordinateB',1,'ChunkScan3dCoordinateSelector_CoordinateC',2);
enuminfo.CxpSendReceiveSelectorEnum=struct('CxpSendReceiveSelector_Send',0,'CxpSendReceiveSelector_Receive',1);
enuminfo.TimerSelectorEnum=struct('TimerSelector_Timer0',0,'TimerSelector_Timer1',1,'TimerSelector_Timer2',2);
enuminfo.CxpConnectionTestModeEnum=struct('CxpConnectionTestMode_Off',0,'CxpConnectionTestMode_Mode1',1);
enuminfo.ExposureTimeSelectorEnum=struct('ExposureTimeSelector_Common',0,'ExposureTimeSelector_Red',1,'ExposureTimeSelector_Green',2,'ExposureTimeSelector_Blue',3,'ExposureTimeSelector_Cyan',4,'ExposureTimeSelector_Magenta',5,'ExposureTimeSelector_Yellow',6,'ExposureTimeSelector_Infrared',7,'ExposureTimeSelector_Ultraviolet',8,'ExposureTimeSelector_Stage1',9,'ExposureTimeSelector_Stage2',10);
enuminfo.ConversionEfficiencyEnum=struct('ConversionEfficiency_Low',0,'ConversionEfficiency_High',1);
enuminfo.GainSelectorEnum=struct('GainSelector_All',0,'GainSelector_Red',1,'GainSelector_Green',2,'GainSelector_Blue',3,'GainSelector_Y',4,'GainSelector_U',5,'GainSelector_V',6,'GainSelector_Tap1',7,'GainSelector_Tap2',8,'GainSelector_AnalogAll',10,'GainSelector_AnalogRed',11,'GainSelector_AnalogGreen',12,'GainSelector_AnalogBlue',13,'GainSelector_AnalogY',14,'GainSelector_AnalogU',15,'GainSelector_AnalogV',16,'GainSelector_AnalogTap1',17,'GainSelector_AnalogTap2',18,'GainSelector_DigitalAll',20,'GainSelector_DigitalRed',21,'GainSelector_DigitalGreen',22,'GainSelector_DigitalBlue',23,'GainSelector_DigitalY',24,'GainSelector_DigitalU',25,'GainSelector_DigitalV',26,'GainSelector_DigitalTap1',27,'GainSelector_DigitalTap2',28);
enuminfo.DecimationHorizontalModeEnum=struct('DecimationHorizontalMode_Discard',0,'DecimationHorizontalMode_Average',1);
enuminfo.CounterResetActivationEnum=struct('CounterResetActivation_RisingEdge',0,'CounterResetActivation_FallingEdge',1,'CounterResetActivation_AnyEdge',2,'CounterResetActivation_LevelHigh',3,'CounterResetActivation_LevelLow',4);
enuminfo.ActionUnconditionalModeEnum=struct('ActionUnconditionalMode_Off',0,'ActionUnconditionalMode_On',1);
enuminfo.WhiteClipSelectorEnum=struct('WhiteClipSelector_All',0,'WhiteClipSelector_Red',1,'WhiteClipSelector_Green',2,'WhiteClipSelector_Blue',3,'WhiteClipSelector_Y',4,'WhiteClipSelector_U',5,'WhiteClipSelector_V',6,'WhiteClipSelector_Tap1',7,'WhiteClipSelector_Tap2',8);
enuminfo.CxpLinkSharingStatusEnum=struct('CxpLinkSharingStatus_Ready',0,'CxpLinkSharingStatus_NotReady',1,'CxpLinkSharingStatus_NotUsed',2);
enuminfo.GroupSelectorEnum=struct('GroupSelector_Group0',0,'GroupSelector_Group1',1,'GroupSelector_Group2',2);
enuminfo.Scan3dCoordinateSystemEnum=struct('Scan3dCoordinateSystem_Cartesian',0,'Scan3dCoordinateSystem_Spherical',1,'Scan3dCoordinateSystem_Cylindrical',2);
enuminfo.AcquisitionStatusSelectorEnum=struct('AcquisitionStatusSelector_AcquisitionTriggerWait',0,'AcquisitionStatusSelector_AcquisitionActive',1,'AcquisitionStatusSelector_AcquisitionTransfer',2,'AcquisitionStatusSelector_FrameTriggerWait',3,'AcquisitionStatusSelector_FrameActive',4,'AcquisitionStatusSelector_ExposureActive',5);
enuminfo.EncoderModeEnum=struct('EncoderMode_FourPhase',0,'EncoderMode_HighResolution',1);
enuminfo.FileOpenModeEnum=struct('FileOpenMode_Read',0,'FileOpenMode_Write',1,'FileOpenMode_ReadWrite',2);
enuminfo.UserSetSelectorEnum=struct('UserSetSelector_Default8bits',30,'UserSetSelector_Default12bits',32,'UserSetSelector_HighSensitivity8bits',40,'UserSetSelector_HighSensitivity12bits',42,'UserSetSelector_UserSet0',0,'UserSetSelector_UserSet1',1,'UserSetSelector_UserSet2',2,'UserSetSelector_UserSet3',3,'UserSetSelector_UserSet4',4,'UserSetSelector_UserSet5',5,'UserSetSelector_UserSet6',6,'UserSetSelector_UserSet7',7,'UserSetSelector_UserSet8',8,'UserSetSelector_UserSet9',9);
enuminfo.ChunkSelectorEnum=struct('ChunkSelector_Image',0,'ChunkSelector_OffsetX',1,'ChunkSelector_OffsetY',2,'ChunkSelector_Width',3,'ChunkSelector_Height',4,'ChunkSelector_PixelFormat',5,'ChunkSelector_PixelDynamicRangeMin',6,'ChunkSelector_PixelDynamicRangeMax',7,'ChunkSelector_BinningHorizontal',8,'ChunkSelector_BinningVertical',9,'ChunkSelector_DecimationHorizontal',10,'ChunkSelector_DecimationVertical',11,'ChunkSelector_ReverseX',12,'ChunkSelector_ReverseY',13,'ChunkSelector_Timestamp',14,'ChunkSelector_TimestampLatchValue',15,'ChunkSelector_LineStatusAll',16,'ChunkSelector_CounterValue',17,'ChunkSelector_TimerValue',18,'ChunkSelector_EncoderValue',19,'ChunkSelector_EncoderStatusValue',20,'ChunkSelector_ExposureTime',21,'ChunkSelector_Gain',22,'ChunkSelector_BlackLevel',23,'ChunkSelector_LinePitch',24,'ChunkSelector_FrameID',25,'ChunkSelector_SourceID',26,'ChunkSelector_SourceIDValue',27,'ChunkSelector_RegionID',28,'ChunkSelector_RegionIDValue',29,'ChunkSelector_ComponentID',30,'ChunkSelector_ComponentIDValue',31,'ChunkSelector_GroupIDValue',32,'ChunkSelector_TransferBlockID',33,'ChunkSelector_TransferStreamID',34,'ChunkSelector_TransferQueueCurrentBlockCount',35,'ChunkSelector_StreamChannelID',36,'ChunkSelector_SequencerSetActive',37,'ChunkSelector_Scan3dDistanceUnit',38,'ChunkSelector_Scan3dOutputMode',39,'ChunkSelector_Scan3dCoordinateSystem',40,'ChunkSelector_Scan3dCoordinateSystemReference',41,'ChunkSelector_Scan3dCoordinateScale',42,'ChunkSelector_Scan3dCoordinateOffset',43,'ChunkSelector_Scan3dInvalidDataFlag',44,'ChunkSelector_Scan3dInvalidDataValue',45,'ChunkSelector_Scan3dAxisMin',46,'ChunkSelector_Scan3dAxisMax',47,'ChunkSelector_Scan3dCoordinateTransformValue',48,'ChunkSelector_Scan3dCoordinateReferenceValue',49);
enuminfo.PtpServoStatusEnum=struct('PtpServoStatus_Unknown',0,'PtpServoStatus_Locked',1,'PtpServoStatus_DeviceSpecific',2);
enuminfo.DeviceFanModeEnum=struct('DeviceFanMode_Automatic',0,'DeviceFanMode_Manual',1);
enuminfo.CounterEventSourceEnum=struct('CounterEventSource_Off',0,'CounterEventSource_AcquisitionTrigger',1,'CounterEventSource_AcquisitionTriggerMissed',2,'CounterEventSource_AcquisitionStart',3,'CounterEventSource_AcquisitionEnd',4,'CounterEventSource_FrameTrigger',5,'CounterEventSource_FrameTriggerMissed',6,'CounterEventSource_FrameStart',7,'CounterEventSource_FrameEnd',8,'CounterEventSource_FrameBurstStart',9,'CounterEventSource_FrameBurstEnd',10,'CounterEventSource_LineTrigger',11,'CounterEventSource_LineTriggerMissed',12,'CounterEventSource_LineStart',13,'CounterEventSource_LineEnd',14,'CounterEventSource_ExposureStart',15,'CounterEventSource_ExposureEnd',16,'CounterEventSource_Line0',17,'CounterEventSource_Line1',18,'CounterEventSource_Line2',19,'CounterEventSource_Counter0Start',21,'CounterEventSource_Counter1Start',22,'CounterEventSource_Counter2Start',23,'CounterEventSource_Counter0End',25,'CounterEventSource_Counter1End',26,'CounterEventSource_Counter2End',27,'CounterEventSource_Timer0Start',29,'CounterEventSource_Timer1Start',30,'CounterEventSource_Timer2Start',31,'CounterEventSource_Timer0End',33,'CounterEventSource_Timer1End',34,'CounterEventSource_Timer2End',35,'CounterEventSource_Encoder0',37,'CounterEventSource_Encoder1',38,'CounterEventSource_Encoder2',39,'CounterEventSource_LogicBlock0',41,'CounterEventSource_LogicBlock1',42,'CounterEventSource_LogicBlock2',43,'CounterEventSource_SoftwareSignal0',45,'CounterEventSource_SoftwareSignal1',46,'CounterEventSource_SoftwareSignal2',47,'CounterEventSource_Action0',49,'CounterEventSource_Action1',50,'CounterEventSource_Action2',51,'CounterEventSource_LinkTrigger0',53,'CounterEventSource_LinkTrigger1',54,'CounterEventSource_LinkTrigger2',55,'CounterEventSource_LinkTriggerMissed0',57,'CounterEventSource_LinkTriggerMissed1',58,'CounterEventSource_LinkTriggerMissed2',59,'CounterEventSource_TimestampTick',61);
enuminfo.UserSetFeatureSelectorEnum=struct('UserSetFeatureSelector_DeviceSpecific',0);
enuminfo.TestPatternGeneratorSelectorEnum=struct('TestPatternGeneratorSelector_Sensor',0,'TestPatternGeneratorSelector_Simulator',1);
enuminfo.FileOperationSelectorEnum=struct('FileOperationSelector_Open',0,'FileOperationSelector_Close',1,'FileOperationSelector_Read',2,'FileOperationSelector_Write',3,'FileOperationSelector_Delete',4);
enuminfo.LogicBlockInputSourceEnum=struct('LogicBlockInputSource_True',0,'LogicBlockInputSource_False',1,'LogicBlockInputSource_AcquisitionTriggerWait',2,'LogicBlockInputSource_AcquisitionTrigger',3,'LogicBlockInputSource_AcquisitionTriggerMissed',4,'LogicBlockInputSource_AcquisitionActive',5,'LogicBlockInputSource_FrameTriggerWait',6,'LogicBlockInputSource_FrameTrigger',7,'LogicBlockInputSource_FrameTriggerMissed',8,'LogicBlockInputSource_FrameActive',9,'LogicBlockInputSource_ExposureActive',10,'LogicBlockInputSource_LineTriggerWait',11,'LogicBlockInputSource_LineTrigger',12,'LogicBlockInputSource_LineTriggerMissed',13,'LogicBlockInputSource_LineActive',14,'LogicBlockInputSource_Counter0Active',15,'LogicBlockInputSource_Counter1Active',16,'LogicBlockInputSource_Counter2Active',17,'LogicBlockInputSource_Timer0Active',19,'LogicBlockInputSource_Timer1Active',20,'LogicBlockInputSource_Timer2Active',21,'LogicBlockInputSource_Encoder0',23,'LogicBlockInputSource_Encoder1',24,'LogicBlockInputSource_Encoder2',25,'LogicBlockInputSource_LogicBlock0',27,'LogicBlockInputSource_LogicBlock1',28,'LogicBlockInputSource_LogicBlock2',29,'LogicBlockInputSource_SoftwareSignal0',31,'LogicBlockInputSource_SoftwareSignal1',32,'LogicBlockInputSource_SoftwareSignal2',33,'LogicBlockInputSource_Line0',35,'LogicBlockInputSource_Line1',36,'LogicBlockInputSource_Line2',37,'LogicBlockInputSource_UserOutput0',39,'LogicBlockInputSource_UserOutput1',40,'LogicBlockInputSource_UserOutput2',41,'LogicBlockInputSource_Stream0TransferActive',43,'LogicBlockInputSource_Stream1TransferActive',44,'LogicBlockInputSource_Stream0TransferPaused',46,'LogicBlockInputSource_Stream1TransferPaused',47,'LogicBlockInputSource_Stream0TransferStopping',49,'LogicBlockInputSource_Stream1TransferStopping',50,'LogicBlockInputSource_Stream0TransferStopped',52,'LogicBlockInputSource_Stream1TransferStopped',53,'LogicBlockInputSource_Stream0TransferOverflow',55,'LogicBlockInputSource_Stream1TransferOverflow',56);
enuminfo.GevGVSPExtendedIDModeEnum=struct('GevGVSPExtendedIDMode_Off',0,'GevGVSPExtendedIDMode_On',1);
enuminfo.EncoderSelectorEnum=struct('EncoderSelector_Encoder0',0,'EncoderSelector_Encoder1',1,'EncoderSelector_Encoder2',2);
enuminfo.ChunkCounterSelectorEnum=struct('ChunkCounterSelector_Counter0',0,'ChunkCounterSelector_Counter1',1,'ChunkCounterSelector_Counter2',2);
enuminfo.ClTimeSlotsCountEnum=struct('ClTimeSlotsCount_One',0,'ClTimeSlotsCount_Two',1,'ClTimeSlotsCount_Three',2);
enuminfo.CounterSelectorEnum=struct('CounterSelector_Counter0',0,'CounterSelector_Counter1',1,'CounterSelector_Counter2',2);
enuminfo.PixelSizeEnum=struct('PixelSize_Bpp1',0,'PixelSize_Bpp2',1,'PixelSize_Bpp4',2,'PixelSize_Bpp8',3,'PixelSize_Bpp10',4,'PixelSize_Bpp12',5,'PixelSize_Bpp14',6,'PixelSize_Bpp16',7,'PixelSize_Bpp20',8,'PixelSize_Bpp24',9,'PixelSize_Bpp30',10,'PixelSize_Bpp32',11,'PixelSize_Bpp36',12,'PixelSize_Bpp48',13,'PixelSize_Bpp64',14,'PixelSize_Bpp96',15);
enuminfo.SensorDigitizationTapsEnum=struct('SensorDigitizationTaps_One',0,'SensorDigitizationTaps_Two',1,'SensorDigitizationTaps_Three',2,'SensorDigitizationTaps_Four',3,'SensorDigitizationTaps_Eight',4,'SensorDigitizationTaps_Ten',5);
enuminfo.Ocam2Mode_C=struct('OCAM2_UNKNOWN',0,'OCAM2_NORMAL',1,'OCAM2_CROPPING240x120',2,'OCAM2_BINNING2x2',3,'OCAM2_BINNING3x3',4,'OCAM2_BINNING4x4',5,'OCAM2_BINNING',3,'OCAM2_CROPPING240x128',6,'OCAM2_NB_WORK_MODE',5);
enuminfo.BinningHorizontalModeEnum=struct('BinningHorizontalMode_Sum',0,'BinningHorizontalMode_Average',1);
enuminfo.GevSupportedOptionSelectorEnum=struct('GevSupportedOptionSelector_SingleLink',0,'GevSupportedOptionSelector_MultiLink',1,'GevSupportedOptionSelector_StaticLAG',2,'GevSupportedOptionSelector_DynamicLAG',3,'GevSupportedOptionSelector_PAUSEFrameReception',4,'GevSupportedOptionSelector_PAUSEFrameGeneration',5,'GevSupportedOptionSelector_IPConfigurationLLA',6,'GevSupportedOptionSelector_IPConfigurationDHCP',7,'GevSupportedOptionSelector_IPConfigurationPersistentIP',8,'GevSupportedOptionSelector_StreamChannelSourceSocket',9,'GevSupportedOptionSelector_StandardIDMode',10,'GevSupportedOptionSelector_MessageChannelSourceSocket',11,'GevSupportedOptionSelector_CommandsConcatenation',12,'GevSupportedOptionSelector_WriteMem',13,'GevSupportedOptionSelector_PacketResend',14,'GevSupportedOptionSelector_Event',15,'GevSupportedOptionSelector_EventData',16,'GevSupportedOptionSelector_PendingAck',17,'GevSupportedOptionSelector_Ptp',19,'GevSupportedOptionSelector_Action',20,'GevSupportedOptionSelector_UnconditionalAction',21,'GevSupportedOptionSelector_ScheduledAction',22,'GevSupportedOptionSelector_PrimaryApplicationSwitchover',23,'GevSupportedOptionSelector_ExtendedStatusCodes',24,'GevSupportedOptionSelector_ExtendedStatusCodesVersion2_0',25,'GevSupportedOptionSelector_DiscoveryAckDelay',26,'GevSupportedOptionSelector_DiscoveryAckDelayWritable',27,'GevSupportedOptionSelector_TestData',28,'GevSupportedOptionSelector_ManifestTable',29,'GevSupportedOptionSelector_CCPApplicationSocket',30,'GevSupportedOptionSelector_LinkSpeed',31,'GevSupportedOptionSelector_HeartbeatDisable',32,'GevSupportedOptionSelector_SerialNumber',33,'GevSupportedOptionSelector_UserDefinedName',34,'GevSupportedOptionSelector_StreamChannel0BigAndLittleEndian',35,'GevSupportedOptionSelector_StreamChannel0IPReassembly',36,'GevSupportedOptionSelector_StreamChannel0MultiZone',37,'GevSupportedOptionSelector_StreamChannel0PacketResendDestination',38,'GevSupportedOptionSelector_StreamChannel0AllInTransmission',39,'GevSupportedOptionSelector_StreamChannel0UnconditionalStreaming',40,'GevSupportedOptionSelector_StreamChannel0ExtendedChunkData',41,'GevSupportedOptionSelector_StreamChannel1BigAndLittleEndian',42,'GevSupportedOptionSelector_StreamChannel1IPReassembly',43,'GevSupportedOptionSelector_StreamChannel1MultiZone',44,'GevSupportedOptionSelector_StreamChannel1PacketResendDestination',45,'GevSupportedOptionSelector_StreamChannel1AllInTransmission',46,'GevSupportedOptionSelector_StreamChannel1UnconditionalStreaming',47,'GevSupportedOptionSelector_StreamChannel1ExtendedChunkData',48,'GevSupportedOptionSelector_StreamChannel2BigAndLittleEndian',49,'GevSupportedOptionSelector_StreamChannel2IPReassembly',50,'GevSupportedOptionSelector_StreamChannel2MultiZone',51,'GevSupportedOptionSelector_StreamChannel2PacketResendDestination',52,'GevSupportedOptionSelector_StreamChannel2AllInTransmission',53,'GevSupportedOptionSelector_StreamChannel2UnconditionalStreaming',54,'GevSupportedOptionSelector_StreamChannel2ExtendedChunkData',55);
enuminfo.Scan3dExtractionSelectorEnum=struct('Scan3dExtractionSelector_Scan3dExtraction0',0,'Scan3dExtractionSelector_Scan3dExtraction1',1);
enuminfo.CounterTriggerActivationEnum=struct('CounterTriggerActivation_RisingEdge',0,'CounterTriggerActivation_FallingEdge',1,'CounterTriggerActivation_AnyEdge',2,'CounterTriggerActivation_LevelHigh',3,'CounterTriggerActivation_LevelLow',4);
enuminfo.DeviceSerialPortBaudRateEnum=struct('DeviceSerialPortBaudRate_Baud9600',0,'DeviceSerialPortBaudRate_Baud19200',1,'DeviceSerialPortBaudRate_Baud38400',2,'DeviceSerialPortBaudRate_Baud57600',3,'DeviceSerialPortBaudRate_Baud115200',4,'DeviceSerialPortBaudRate_Baud230400',5,'DeviceSerialPortBaudRate_Baud460800',6,'DeviceSerialPortBaudRate_Baud921600',7);
enuminfo.ChunkGroupSelectorEnum=struct('ChunkGroupSelector_Group0',0,'ChunkGroupSelector_Group1',1,'ChunkGroupSelector_Group2',2);
enuminfo.PtpClockAccuracyEnum=struct('PtpClockAccuracy_Within25ns',0,'PtpClockAccuracy_Within100ns',1,'PtpClockAccuracy_Within250ns',2,'PtpClockAccuracy_Within1us',3,'PtpClockAccuracy_Within2p5us',4,'PtpClockAccuracy_Within10us',5,'PtpClockAccuracy_Within25us',6,'PtpClockAccuracy_Within100us',7,'PtpClockAccuracy_Within250us',8,'PtpClockAccuracy_Within1ms',9,'PtpClockAccuracy_Within2p5ms',10,'PtpClockAccuracy_Within10ms',11,'PtpClockAccuracy_Within25ms',12,'PtpClockAccuracy_Within100ms',13,'PtpClockAccuracy_Within250ms',14,'PtpClockAccuracy_Within1s',15,'PtpClockAccuracy_Within10s',16,'PtpClockAccuracy_GreaterThan10s',17,'PtpClockAccuracy_AlternatePTPProfile',18,'PtpClockAccuracy_Unknown',19,'PtpClockAccuracy_Reserved',20);
enuminfo.TestPatternEnum=struct('TestPattern_Off',0,'TestPattern_Black',1,'TestPattern_White',2,'TestPattern_GreyHorizontalRamp',3,'TestPattern_SimulatorGreyHorizontalRamp',10,'TestPattern_SimulatorGreyHorizontalRampMoving',11);
enuminfo.DeinterlacingEnum=struct('Deinterlacing_Off',0,'Deinterlacing_LineDuplication',1,'Deinterlacing_Weave',2);
enuminfo.TriggerOverlapEnum=struct('TriggerOverlap_Off',0,'TriggerOverlap_ReadOut',1,'TriggerOverlap_PreviousFrame',2,'TriggerOverlap_PreviousLine',3);
enuminfo.DeviceTypeEnum=struct('DeviceType_Transmitter',0,'DeviceType_Receiver',1,'DeviceType_Transceiver',2,'DeviceType_Peripheral',3);
enuminfo.CxpErrorCounterStatusEnum=struct('CxpErrorCounterStatus_CounterActive',0,'CxpErrorCounterStatus_CounterOverflow',1);
enuminfo.ChunkScan3dCoordinateReferenceSelectorEnum=struct('ChunkScan3dCoordinateReferenceSelector_RotationX',0,'ChunkScan3dCoordinateReferenceSelector_RotationY',1,'ChunkScan3dCoordinateReferenceSelector_RotationZ',2,'ChunkScan3dCoordinateReferenceSelector_TranslationX',3,'ChunkScan3dCoordinateReferenceSelector_TranslationY',4,'ChunkScan3dCoordinateReferenceSelector_TranslationZ',5);
enuminfo.BalanceRatioSelectorEnum=struct('BalanceRatioSelector_All',0,'BalanceRatioSelector_Red',1,'BalanceRatioSelector_Green',2,'BalanceRatioSelector_Blue',3,'BalanceRatioSelector_Y',4,'BalanceRatioSelector_U',5,'BalanceRatioSelector_V',6,'BalanceRatioSelector_Tap1',7,'BalanceRatioSelector_Tap2',8);
enuminfo.ChunkTimerSelectorEnum=struct('ChunkTimerSelector_Timer0',0,'ChunkTimerSelector_Timer1',1,'ChunkTimerSelector_Timer2',2);
enuminfo.SequencerModeEnum=struct('SequencerMode_On',0,'SequencerMode_Off',1);
enuminfo.TransferQueueModeEnum=struct('TransferQueueMode_FirstInFirstOut',0);
enuminfo.ChunkComponentSelectorEnum=struct('ChunkComponentSelector_Intensity',0,'ChunkComponentSelector_Infrared',1,'ChunkComponentSelector_Ultraviolet',2,'ChunkComponentSelector_Range',3,'ChunkComponentSelector_Reflectance',4,'ChunkComponentSelector_Disparity',5,'ChunkComponentSelector_Confidence',6,'ChunkComponentSelector_Scatter',7,'ChunkComponentSelector_Multispectral',8);
enuminfo.TriggerActivationEnum=struct('TriggerActivation_RisingEdge',0,'TriggerActivation_FallingEdge',1,'TriggerActivation_AnyEdge',2,'TriggerActivation_LevelHigh',3,'TriggerActivation_LevelLow',4);
enuminfo.Scan3dCoordinateReferenceSelectorEnum=struct('Scan3dCoordinateReferenceSelector_RotationX',0,'Scan3dCoordinateReferenceSelector_RotationY',1,'Scan3dCoordinateReferenceSelector_RotationZ',2,'Scan3dCoordinateReferenceSelector_TranslationX',3,'Scan3dCoordinateReferenceSelector_TranslationY',4,'Scan3dCoordinateReferenceSelector_TranslationZ',5);
enuminfo.LogicBlockSelectorEnum=struct('LogicBlockSelector_LogicBlock0',0,'LogicBlockSelector_LogicBlock1',1,'LogicBlockSelector_LogicBlock2',2);
enuminfo.LogCollectStatusEnum=struct('LogCollectStatus_Idle',0,'LogCollectStatus_InProgress',1,'LogCollectStatus_Done',2,'LogCollectStatus_Failed',3);
enuminfo.EncoderResetSourceEnum=struct('EncoderResetSource_Off',0,'EncoderResetSource_AcquisitionTrigger',1,'EncoderResetSource_AcquisitionTriggerMissed',2,'EncoderResetSource_AcquisitionStart',3,'EncoderResetSource_AcquisitionEnd',4,'EncoderResetSource_FrameTrigger',5,'EncoderResetSource_FrameTriggerMissed',6,'EncoderResetSource_FrameStart',7,'EncoderResetSource_FrameEnd',8,'EncoderResetSource_ExposureStart',9,'EncoderResetSource_ExposureEnd',10,'EncoderResetSource_Line0',11,'EncoderResetSource_Line1',12,'EncoderResetSource_Line2',13,'EncoderResetSource_UserOutput0',15,'EncoderResetSource_UserOutput1',16,'EncoderResetSource_UserOutput2',17,'EncoderResetSource_Counter0Start',19,'EncoderResetSource_Counter1Start',20,'EncoderResetSource_Counter2Start',21,'EncoderResetSource_Counter0End',23,'EncoderResetSource_Counter1End',24,'EncoderResetSource_Counter2End',25,'EncoderResetSource_Timer0Start',27,'EncoderResetSource_Timer1Start',28,'EncoderResetSource_Timer2Start',29,'EncoderResetSource_Timer0End',31,'EncoderResetSource_Timer1End',32,'EncoderResetSource_Timer2End',33,'EncoderResetSource_LogicBlock0',35,'EncoderResetSource_LogicBlock1',36,'EncoderResetSource_LogicBlock2',37,'EncoderResetSource_SoftwareSignal0',39,'EncoderResetSource_SoftwareSignal1',40,'EncoderResetSource_SoftwareSignal2',41,'EncoderResetSource_Action0',43,'EncoderResetSource_Action1',44,'EncoderResetSource_Action2',45,'EncoderResetSource_LinkTrigger0',47,'EncoderResetSource_LinkTrigger1',48,'EncoderResetSource_LinkTrigger2',49);
enuminfo.AccessModeEnum=struct('NotImplemented',0,'NotAvailable',1,'WriteOnly',2,'ReadOnly',3,'ReadWrite',4,'Undefined',5);
enuminfo.CounterResetSourceEnum=struct('CounterResetSource_Off',0,'CounterResetSource_CounterTrigger',1,'CounterResetSource_AcquisitionTrigger',2,'CounterResetSource_AcquisitionTriggerMissed',3,'CounterResetSource_AcquisitionStart',4,'CounterResetSource_AcquisitionEnd',5,'CounterResetSource_FrameTrigger',6,'CounterResetSource_FrameTriggerMissed',7,'CounterResetSource_FrameStart',8,'CounterResetSource_FrameEnd',9,'CounterResetSource_LineTrigger',10,'CounterResetSource_LineTriggerMissed',11,'CounterResetSource_LineStart',12,'CounterResetSource_LineEnd',13,'CounterResetSource_ExposureStart',14,'CounterResetSource_ExposureEnd',15,'CounterResetSource_Line0',16,'CounterResetSource_Line1',17,'CounterResetSource_Line2',18,'CounterResetSource_UserOutput0',20,'CounterResetSource_UserOutput1',21,'CounterResetSource_UserOutput2',22,'CounterResetSource_Counter0Start',24,'CounterResetSource_Counter1Start',25,'CounterResetSource_Counter2Start',26,'CounterResetSource_Counter0End',28,'CounterResetSource_Counter1End',29,'CounterResetSource_Counter2End',30,'CounterResetSource_Timer0Start',32,'CounterResetSource_Timer1Start',33,'CounterResetSource_Timer2Start',34,'CounterResetSource_Timer0End',36,'CounterResetSource_Timer1End',37,'CounterResetSource_Timer2End',38,'CounterResetSource_Encoder0',40,'CounterResetSource_Encoder1',41,'CounterResetSource_Encoder2',42,'CounterResetSource_LogicBlock0',44,'CounterResetSource_LogicBlock1',45,'CounterResetSource_LogicBlock2',46,'CounterResetSource_SoftwareSignal0',48,'CounterResetSource_SoftwareSignal1',49,'CounterResetSource_SoftwareSignal2',50,'CounterResetSource_Action0',52,'CounterResetSource_Action1',53,'CounterResetSource_Action2',54,'CounterResetSource_LinkTrigger0',56,'CounterResetSource_LinkTrigger1',57,'CounterResetSource_LinkTrigger2',58);
enuminfo.GainAutoEnum=struct('GainAuto_Off',0,'GainAuto_Once',1,'GainAuto_Continuous',2);
enuminfo.ChunkBlackLevelSelectorEnum=struct('ChunkBlackLevelSelector_All',0,'ChunkBlackLevelSelector_Red',1,'ChunkBlackLevelSelector_Green',2,'ChunkBlackLevelSelector_Blue',3,'ChunkBlackLevelSelector_Y',4,'ChunkBlackLevelSelector_U',5,'ChunkBlackLevelSelector_V',6,'ChunkBlackLevelSelector_Tap1',7,'ChunkBlackLevelSelector_Tap2',8);
enuminfo.UserSetDefaultEnum=struct('UserSetDefault_Default8bits',30,'UserSetDefault_Default12bits',32,'UserSetDefault_HighSensitivity8bits',40,'UserSetDefault_HighSensitivity12bits',42,'UserSetDefault_UserSet0',0,'UserSetDefault_UserSet1',1,'UserSetDefault_UserSet2',2,'UserSetDefault_UserSet3',3,'UserSetDefault_UserSet4',4,'UserSetDefault_UserSet5',5,'UserSetDefault_UserSet6',6,'UserSetDefault_UserSet7',7,'UserSetDefault_UserSet8',8,'UserSetDefault_UserSet9',9);
enuminfo.ChunkScan3dCoordinateSystemEnum=struct('ChunkScan3dCoordinateSystem_Cartesian',0,'ChunkScan3dCoordinateSystem_Spherical',1,'ChunkScan3dCoordinateSystem_Cylindrical',2);
enuminfo.DeviceTecSelectorEnum=struct('DeviceTecSelector_TEC1',0);
enuminfo.PtpStatusEnum=struct('PtpStatus_Initializing',0,'PtpStatus_Faulty',1,'PtpStatus_Disabled',2,'PtpStatus_Listening',3,'PtpStatus_PreMaster',4,'PtpStatus_Master',5,'PtpStatus_Passive',6,'PtpStatus_Uncalibrated',7,'PtpStatus_Slave',8);
enuminfo.IPModeEnum=struct('IPMode_Automatic',0,'IPMode_Manual',1);
enuminfo.VisibilityEnum=struct('Beginner',0,'Expert',1,'Guru',2,'Invisible',3);
enuminfo.SparseSelectorEnum=struct('SparseSelector_Region0',0,'SparseSelector_Region1',1,'SparseSelector_Region2',2,'SparseSelector_Region3',3,'SparseSelector_Region4',4,'SparseSelector_Region5',5,'SparseSelector_Region6',6,'SparseSelector_Region7',7);
enuminfo.AcquisitionModeEnum=struct('AcquisitionMode_SingleFrame',0,'AcquisitionMode_MultiFrame',1,'AcquisitionMode_Continuous',2);
enuminfo.CounterEventActivationEnum=struct('CounterEventActivation_RisingEdge',0,'CounterEventActivation_FallingEdge',1,'CounterEventActivation_AnyEdge',2);
enuminfo.CameraModel_C=struct('undefined',0,'C_Red1',1,'C_Red2',2,'C_Red2_ER',3,'C_Red2_lite',4,'C_Red3',5,'C_Red3_OEM',6,'C_Blue1',7,'Ocam2k',8,'Ocam2s',9,'Generic_SFNC',10);
enuminfo.SequencerTriggerSourceEnum=struct('SequencerTriggerSource_Off',0,'SequencerTriggerSource_AcquisitionTrigger',1,'SequencerTriggerSource_AcquisitionTriggerMissed',2,'SequencerTriggerSource_AcquisitionStart',3,'SequencerTriggerSource_AcquisitionEnd',4,'SequencerTriggerSource_FrameTrigger',5,'SequencerTriggerSource_FrameTriggerMissed',6,'SequencerTriggerSource_FrameStart',7,'SequencerTriggerSource_FrameEnd',8,'SequencerTriggerSource_FrameBurstStart',9,'SequencerTriggerSource_FrameBurstEnd',10,'SequencerTriggerSource_ExposureStart',11,'SequencerTriggerSource_ExposureEnd',12,'SequencerTriggerSource_Line0',13,'SequencerTriggerSource_Line1',14,'SequencerTriggerSource_Line2',15,'SequencerTriggerSource_UserOutput0',17,'SequencerTriggerSource_UserOutput1',18,'SequencerTriggerSource_UserOutput2',19,'SequencerTriggerSource_Counter0Start',21,'SequencerTriggerSource_Counter1Start',22,'SequencerTriggerSource_Counter2Start',23,'SequencerTriggerSource_Counter0End',25,'SequencerTriggerSource_Counter1End',26,'SequencerTriggerSource_Counter2End',27,'SequencerTriggerSource_Timer0Start',29,'SequencerTriggerSource_Timer1Start',30,'SequencerTriggerSource_Timer2Start',31,'SequencerTriggerSource_Timer0End',33,'SequencerTriggerSource_Timer1End',34,'SequencerTriggerSource_Timer2End',35,'SequencerTriggerSource_Encoder0',37,'SequencerTriggerSource_Encoder1',38,'SequencerTriggerSource_Encoder2',39,'SequencerTriggerSource_LogicBlock0',41,'SequencerTriggerSource_LogicBlock1',42,'SequencerTriggerSource_LogicBlock2',43,'SequencerTriggerSource_SoftwareSignal0',45,'SequencerTriggerSource_SoftwareSignal1',46,'SequencerTriggerSource_SoftwareSignal2',47,'SequencerTriggerSource_Action0',49,'SequencerTriggerSource_Action1',50,'SequencerTriggerSource_Action2',51,'SequencerTriggerSource_LinkTrigger0',53,'SequencerTriggerSource_LinkTrigger1',54,'SequencerTriggerSource_LinkTrigger2',55,'SequencerTriggerSource_CC1',57,'SequencerTriggerSource_CC2',58,'SequencerTriggerSource_CC3',59,'SequencerTriggerSource_CC4',60);
enuminfo.ChunkTransferStreamIDEnum=struct('ChunkTransferStreamID_Stream0',0,'ChunkTransferStreamID_Stream1',1,'ChunkTransferStreamID_Stream2',2,'ChunkTransferStreamID_Stream3',3);
enuminfo.ChunkSourceIDEnum=struct('ChunkSourceID_Source0',0,'ChunkSourceID_Source1',1,'ChunkSourceID_Source2',2);
enuminfo.Mode=struct('Full',0,'GrabOnly',1,'ConfigOnly',2);
enuminfo.UserOutputSelectorEnum=struct('UserOutputSelector_UserOutput0',0,'UserOutputSelector_UserOutput1',1,'UserOutputSelector_UserOutput2',2);
enuminfo.LightControllerSelectorEnum=struct('LightControllerSelector_LightController0',0,'LightControllerSelector_LightController1',1,'LightControllerSelector_LightController2',2);
enuminfo.DeviceClockSelectorEnum=struct('DeviceClockSelector_Sensor',0,'DeviceClockSelector_SensorDigitization',1,'DeviceClockSelector_CameraLink',2);
enuminfo.CounterTriggerSourceEnum=struct('CounterTriggerSource_Off',0,'CounterTriggerSource_AcquisitionTrigger',1,'CounterTriggerSource_AcquisitionTriggerMissed',2,'CounterTriggerSource_AcquisitionStart',3,'CounterTriggerSource_AcquisitionEnd',4,'CounterTriggerSource_FrameTrigger',5,'CounterTriggerSource_FrameTriggerMissed',6,'CounterTriggerSource_FrameStart',7,'CounterTriggerSource_FrameEnd',8,'CounterTriggerSource_FrameBurstStart',9,'CounterTriggerSource_FrameBurstEnd',10,'CounterTriggerSource_LineTrigger',11,'CounterTriggerSource_LineTriggerMissed',12,'CounterTriggerSource_LineStart',13,'CounterTriggerSource_LineEnd',14,'CounterTriggerSource_ExposureStart',15,'CounterTriggerSource_ExposureEnd',16,'CounterTriggerSource_Line0',17,'CounterTriggerSource_Line1',18,'CounterTriggerSource_Line2',19,'CounterTriggerSource_UserOutput0',21,'CounterTriggerSource_UserOutput1',22,'CounterTriggerSource_UserOutput2',23,'CounterTriggerSource_Counter0Start',25,'CounterTriggerSource_Counter1Start',26,'CounterTriggerSource_Counter2Start',27,'CounterTriggerSource_Counter0End',29,'CounterTriggerSource_Counter1End',30,'CounterTriggerSource_Counter2End',31,'CounterTriggerSource_Timer0Start',33,'CounterTriggerSource_Timer1Start',34,'CounterTriggerSource_Timer2Start',35,'CounterTriggerSource_Timer0End',37,'CounterTriggerSource_Timer1End',38,'CounterTriggerSource_Timer2End',39,'CounterTriggerSource_Encoder0',41,'CounterTriggerSource_Encoder1',42,'CounterTriggerSource_Encoder2',43,'CounterTriggerSource_LogicBlock0',45,'CounterTriggerSource_LogicBlock1',46,'CounterTriggerSource_LogicBlock2',47,'CounterTriggerSource_SoftwareSignal0',49,'CounterTriggerSource_SoftwareSignal1',50,'CounterTriggerSource_SoftwareSignal2',51,'CounterTriggerSource_Action0',53,'CounterTriggerSource_Action1',54,'CounterTriggerSource_Action2',55,'CounterTriggerSource_LinkTrigger0',57,'CounterTriggerSource_LinkTrigger1',58,'CounterTriggerSource_LinkTrigger2',59);
enuminfo.PixelFormatEnum=struct('PixelFormat_Mono1p',16842807,'PixelFormat_Mono2p',16908344,'PixelFormat_Mono4p',17039417,'PixelFormat_Mono8',17301505,'PixelFormat_Mono8s',17301506,'PixelFormat_Mono10',17825795,'PixelFormat_Mono10p',17432646,'PixelFormat_Mono12',17825797,'PixelFormat_Mono12p',17563719,'PixelFormat_Mono14',17825829,'PixelFormat_Mono14p',17694980,'PixelFormat_Mono16',17825799,'PixelFormat_Mono32',18874641,'PixelFormat_BayerBG4p',17039632,'PixelFormat_BayerBG8',17301515,'PixelFormat_BayerBG10',17825807,'PixelFormat_BayerBG10p',17432658,'PixelFormat_BayerBG12',17825811,'PixelFormat_BayerBG12p',17563731,'PixelFormat_BayerBG14',17826060,'PixelFormat_BayerBG14p',17694984,'PixelFormat_BayerBG16',17825841,'PixelFormat_BayerGB4p',17039631,'PixelFormat_BayerGB8',17301514,'PixelFormat_BayerGB10',17825806,'PixelFormat_BayerGB10p',17432660,'PixelFormat_BayerGB12',17825810,'PixelFormat_BayerGB12p',17563733,'PixelFormat_BayerGB14',17826059,'PixelFormat_BayerGB14p',17694983,'PixelFormat_BayerGB16',17825840,'PixelFormat_BayerGR4p',17039629,'PixelFormat_BayerGR8',17301512,'PixelFormat_BayerGR10',17825804,'PixelFormat_BayerGR10p',17432662,'PixelFormat_BayerGR12',17825808,'PixelFormat_BayerGR12p',17563735,'PixelFormat_BayerGR14',17826057,'PixelFormat_BayerGR14p',17694981,'PixelFormat_BayerGR16',17825838,'PixelFormat_BayerRG4p',17039630,'PixelFormat_BayerRG8',17301513,'PixelFormat_BayerRG10',17825805,'PixelFormat_BayerRG10p',17432664,'PixelFormat_BayerRG12',17825809,'PixelFormat_BayerRG12p',17563737,'PixelFormat_BayerRG14',17826058,'PixelFormat_BayerRG14p',17694982,'PixelFormat_BayerRG16',17825839,'PixelFormat_RGBa8',35651606,'PixelFormat_RGBa10',37748831,'PixelFormat_RGBa10p',36175968,'PixelFormat_RGBa12',37748833,'PixelFormat_RGBa12p',36700258,'PixelFormat_RGBa14',37748835,'PixelFormat_RGBa16',37748836,'PixelFormat_RGB8',35127316,'PixelFormat_RGB8_Planar',35127329,'PixelFormat_RGB10',36700184,'PixelFormat_RGB10_Planar',36700194,'PixelFormat_RGB10p',35520604,'PixelFormat_RGB10p32',35651613,'PixelFormat_RGB12',36700186,'PixelFormat_RGB12_Planar',36700195,'PixelFormat_RGB12p',35913821,'PixelFormat_RGB14',36700254,'PixelFormat_RGB16',36700211,'PixelFormat_RGB16_Planar',36700196,'PixelFormat_RGB565p',34603061,'PixelFormat_BGRa8',35651607,'PixelFormat_BGRa10',37748812,'PixelFormat_BGRa10p',36175949,'PixelFormat_BGRa12',37748814,'PixelFormat_BGRa12p',36700239,'PixelFormat_BGRa14',37748816,'PixelFormat_BGRa16',37748817,'PixelFormat_BGR8',35127317,'PixelFormat_BGR10',36700185,'PixelFormat_BGR10p',35520584,'PixelFormat_BGR12',36700187,'PixelFormat_BGR12p',35913801,'PixelFormat_BGR14',36700234,'PixelFormat_BGR16',36700235,'PixelFormat_BGR565p',34603062,'PixelFormat_R8',17301705,'PixelFormat_R10',17432778,'PixelFormat_R12',17563851,'PixelFormat_R16',17825996,'PixelFormat_G8',17301709,'PixelFormat_G10',17432782,'PixelFormat_G12',17563855,'PixelFormat_G16',17826000,'PixelFormat_B8',17301713,'PixelFormat_B10',17432786,'PixelFormat_B12',17563859,'PixelFormat_B16',17826004,'PixelFormat_Coord3D_ABC8',35127474,'PixelFormat_Coord3D_ABC8_Planar',35127475,'PixelFormat_Coord3D_ABC10p',35520731,'PixelFormat_Coord3D_ABC10p_Planar',35520732,'PixelFormat_Coord3D_ABC12p',35913950,'PixelFormat_Coord3D_ABC12p_Planar',35913951,'PixelFormat_Coord3D_ABC16',36700345,'PixelFormat_Coord3D_ABC16_Planar',36700346,'PixelFormat_Coord3D_ABC32f',39846080,'PixelFormat_Coord3D_ABC32f_Planar',39846081,'PixelFormat_Coord3D_AC8',34603188,'PixelFormat_Coord3D_AC8_Planar',34603189,'PixelFormat_Coord3D_AC10p',34865392,'PixelFormat_Coord3D_AC10p_Planar',34865393,'PixelFormat_Coord3D_AC12p',35127538,'PixelFormat_Coord3D_AC12p_Planar',35127539,'PixelFormat_Coord3D_AC16',35651771,'PixelFormat_Coord3D_AC16_Planar',35651772,'PixelFormat_Coord3D_AC32f',37748930,'PixelFormat_Coord3D_AC32f_Planar',37748931,'PixelFormat_Coord3D_A8',17301679,'PixelFormat_Coord3D_A10p',17432789,'PixelFormat_Coord3D_A12p',17563864,'PixelFormat_Coord3D_A16',17825974,'PixelFormat_Coord3D_A32f',18874557,'PixelFormat_Coord3D_B8',17301680,'PixelFormat_Coord3D_B10p',17432790,'PixelFormat_Coord3D_B12p',17563865,'PixelFormat_Coord3D_B16',17825975,'PixelFormat_Coord3D_B32f',18874558,'PixelFormat_Coord3D_C8',17301681,'PixelFormat_Coord3D_C10p',17432791,'PixelFormat_Coord3D_C12p',17563866,'PixelFormat_Coord3D_C16',17825976,'PixelFormat_Coord3D_C32f',18874559,'PixelFormat_Confidence1',17301700,'PixelFormat_Confidence1p',16842949,'PixelFormat_Confidence8',17301702,'PixelFormat_Confidence16',17825991,'PixelFormat_Confidence32f',18874568,'PixelFormat_BiColorBGRG8',34603174,'PixelFormat_BiColorBGRG10',35651753,'PixelFormat_BiColorBGRG10p',34865322,'PixelFormat_BiColorBGRG12',35651757,'PixelFormat_BiColorBGRG12p',35127470,'PixelFormat_BiColorRGBG8',34603173,'PixelFormat_BiColorRGBG10',35651751,'PixelFormat_BiColorRGBG10p',34865320,'PixelFormat_BiColorRGBG12',35651755,'PixelFormat_BiColorRGBG12p',35127468,'PixelFormat_Data8',17301782,'PixelFormat_Data8s',17301783,'PixelFormat_Data16',17826072,'PixelFormat_Data16s',17826073,'PixelFormat_Data32',18874650,'PixelFormat_Data32f',18874652,'PixelFormat_Data32s',18874651,'PixelFormat_Data64',20971805,'PixelFormat_Data64f',20971807,'PixelFormat_Data64s',20971806,'PixelFormat_SCF1WBWG8',17301607,'PixelFormat_SCF1WBWG10',17825896,'PixelFormat_SCF1WBWG10p',17432681,'PixelFormat_SCF1WBWG12',17825898,'PixelFormat_SCF1WBWG12p',17563755,'PixelFormat_SCF1WBWG14',17825900,'PixelFormat_SCF1WBWG16',17825901,'PixelFormat_SCF1WGWB8',17301614,'PixelFormat_SCF1WGWB10',17825903,'PixelFormat_SCF1WGWB10p',17432688,'PixelFormat_SCF1WGWB12',17825905,'PixelFormat_SCF1WGWB12p',17563762,'PixelFormat_SCF1WGWB14',17825907,'PixelFormat_SCF1WGWB16',17825908,'PixelFormat_SCF1WGWR8',17301621,'PixelFormat_SCF1WGWR10',17825910,'PixelFormat_SCF1WGWR10p',17432695,'PixelFormat_SCF1WGWR12',17825912,'PixelFormat_SCF1WGWR12p',17563769,'PixelFormat_SCF1WGWR14',17825914,'PixelFormat_SCF1WGWR16',17825915,'PixelFormat_SCF1WRWG8',17301628,'PixelFormat_SCF1WRWG10',17825917,'PixelFormat_SCF1WRWG10p',17432702,'PixelFormat_SCF1WRWG12',17825919,'PixelFormat_SCF1WRWG12p',17563776,'PixelFormat_SCF1WRWG14',17825921,'PixelFormat_SCF1WRWG16',17825922,'PixelFormat_YCbCr8',35127387,'PixelFormat_YCbCr8_CbYCr',35127354,'PixelFormat_YCbCr10_CbYCr',36700291,'PixelFormat_YCbCr10p_CbYCr',35520644,'PixelFormat_YCbCr12_CbYCr',36700293,'PixelFormat_YCbCr12p_CbYCr',35913862,'PixelFormat_YCbCr411_8',34340954,'PixelFormat_YCbCr411_8_CbYYCrYY',34340924,'PixelFormat_YCbCr420_8_YY_CbCr_Semiplanar',34341138,'PixelFormat_YCbCr420_8_YY_CrCb_Semiplanar',34341140,'PixelFormat_YCbCr422_8',34603067,'PixelFormat_YCbCr422_8_CbYCrY',34603075,'PixelFormat_YCbCr422_8_YY_CbCr_Semiplanar',34603283,'PixelFormat_YCbCr422_8_YY_CrCb_Semiplanar',34603285,'PixelFormat_YCbCr422_10',35651685,'PixelFormat_YCbCr422_10_CbYCrY',35651737,'PixelFormat_YCbCr422_10p',34865287,'PixelFormat_YCbCr422_10p_CbYCrY',34865306,'PixelFormat_YCbCr422_12',35651686,'PixelFormat_YCbCr422_12_CbYCrY',35651739,'PixelFormat_YCbCr422_12p',35127432,'PixelFormat_YCbCr422_12p_CbYCrY',35127452,'PixelFormat_YCbCr601_8_CbYCr',35127357,'PixelFormat_YCbCr601_10_CbYCr',36700297,'PixelFormat_YCbCr601_10p_CbYCr',35520650,'PixelFormat_YCbCr601_12_CbYCr',36700299,'PixelFormat_YCbCr601_12p_CbYCr',35913868,'PixelFormat_YCbCr601_411_8_CbYYCrYY',34340927,'PixelFormat_YCbCr601_422_8',34603070,'PixelFormat_YCbCr601_422_8_CbYCrY',34603076,'PixelFormat_YCbCr601_422_10',35651725,'PixelFormat_YCbCr601_422_10_CbYCrY',35651741,'PixelFormat_YCbCr601_422_10p',34865294,'PixelFormat_YCbCr601_422_10p_CbYCrY',34865310,'PixelFormat_YCbCr601_422_12',35651727,'PixelFormat_YCbCr601_422_12_CbYCrY',35651743,'PixelFormat_YCbCr601_422_12p',35127440,'PixelFormat_YCbCr601_422_12p_CbYCrY',35127456,'PixelFormat_YCbCr709_8_CbYCr',35127360,'PixelFormat_YCbCr709_10_CbYCr',36700305,'PixelFormat_YCbCr709_10p_CbYCr',35520658,'PixelFormat_YCbCr709_12_CbYCr',36700307,'PixelFormat_YCbCr709_12p_CbYCr',35913876,'PixelFormat_YCbCr709_411_8_CbYYCrYY',34340930,'PixelFormat_YCbCr709_422_8',34603073,'PixelFormat_YCbCr709_422_8_CbYCrY',34603077,'PixelFormat_YCbCr709_422_10',35651733,'PixelFormat_YCbCr709_422_10_CbYCrY',35651745,'PixelFormat_YCbCr709_422_10p',34865302,'PixelFormat_YCbCr709_422_10p_CbYCrY',34865314,'PixelFormat_YCbCr709_422_12',35651735,'PixelFormat_YCbCr709_422_12_CbYCrY',35651747,'PixelFormat_YCbCr709_422_12p',35127448,'PixelFormat_YCbCr709_422_12p_CbYCrY',35127460,'PixelFormat_YCbCr2020_8_CbYCr',35127540,'PixelFormat_YCbCr2020_10_CbYCr',36700405,'PixelFormat_YCbCr2020_10p_CbYCr',35520758,'PixelFormat_YCbCr2020_12_CbYCr',36700407,'PixelFormat_YCbCr2020_12p_CbYCr',35913976,'PixelFormat_YCbCr2020_411_8_CbYYCrYY',34341113,'PixelFormat_YCbCr2020_422_8',34603258,'PixelFormat_YCbCr2020_422_8_CbYCrY',34603259,'PixelFormat_YCbCr2020_422_10',35651836,'PixelFormat_YCbCr2020_422_10_CbYCrY',35651837,'PixelFormat_YCbCr2020_422_10p',34865406,'PixelFormat_YCbCr2020_422_10p_CbYCrY',34865407,'PixelFormat_YCbCr2020_422_12',35651840,'PixelFormat_YCbCr2020_422_12_CbYCrY',35651841,'PixelFormat_YCbCr2020_422_12p',35127554,'PixelFormat_YCbCr2020_422_12p_CbYCrY',35127555,'PixelFormat_YUV8_UYV',35127328,'PixelFormat_YUV411_8_UYYVYY',34340894,'PixelFormat_YUV422_8',34603058,'PixelFormat_YUV422_8_UYVY',34603039);
enuminfo.AcquisitionStopModeEnum=struct('AcquisitionStopMode_Complete',0,'AcquisitionStopMode_Immediate',1,'AcquisitionStopMode_ImmediateWithPadding',2);
enuminfo.LineFormatEnum=struct('LineFormat_NoConnect',0,'LineFormat_TriState',1,'LineFormat_TTL',2,'LineFormat_LVDS',3,'LineFormat_RS422',4,'LineFormat_OptoCoupled',5,'LineFormat_OpenDrain',6);
enuminfo.CxpErrorCounterSelectorEnum=struct('CxpErrorCounterSelector_ConnectionLockLoss',0,'CxpErrorCounterSelector_Encoding',1,'CxpErrorCounterSelector_StreamDataPacketCrc',2,'CxpErrorCounterSelector_ControlPacketCrc',3,'CxpErrorCounterSelector_EventPacketCrc',4,'CxpErrorCounterSelector_DuplicatedCharactersCorrected',5,'CxpErrorCounterSelector_DuplicatedCharactersUncorrected',6);
enuminfo.RegionSelectorEnum=struct('RegionSelector_Region0',0,'RegionSelector_Region1',1,'RegionSelector_Region2',2,'RegionSelector_Scan3dExtraction0',4,'RegionSelector_Scan3dExtraction1',5,'RegionSelector_Scan3dExtraction2',6,'RegionSelector_All',7);
enuminfo.LUTSelectorEnum=struct('LUTSelector_Luminance',0,'LUTSelector_Red',1,'LUTSelector_Green',2,'LUTSelector_Blue',3);
enuminfo.EncoderResetActivationEnum=struct('EncoderResetActivation_RisingEdge',0,'EncoderResetActivation_FallingEdge',1,'EncoderResetActivation_AnyEdge',2,'EncoderResetActivation_LevelHigh',3,'EncoderResetActivation_LevelLow',4);
enuminfo.TransferTriggerActivationEnum=struct('TransferTriggerActivation_RisingEdge',0,'TransferTriggerActivation_FallingEdge',1,'TransferTriggerActivation_AnyEdge',2,'TransferTriggerActivation_LevelHigh',3,'TransferTriggerActivation_LevelLow',4);
enuminfo.EncoderSourceBEnum=struct('EncoderSourceB_Off',0,'EncoderSourceB_Line0',1,'EncoderSourceB_Line1',2,'EncoderSourceB_Line2',3);
enuminfo.RegionDestinationEnum=struct('RegionDestination_Stream0',0,'RegionDestination_Stream1',1,'RegionDestination_Stream2',2);
enuminfo.TransferControlModeEnum=struct('TransferControlMode_Basic',0,'TransferControlMode_Automatic',1,'TransferControlMode_UserControlled',2);
methodinfo=fcns;